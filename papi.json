{
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "AntivirusPolicies": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/AntivirusPolicyExtended",
                        "description": "An antivirus scan policy."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AntivirusPoliciesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AntivirusPolicies"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AntivirusPolicy": {
            "description": "An antivirus scan policy.",
            "properties": {
                "description": {
                    "description": "A description for the policy.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether the policy is enabled.",
                    "type": "boolean"
                },
                "force_run": {
                    "description": "Forces the scan to run regardless of whether the files were recently scanned.",
                    "type": "boolean"
                },
                "impact": {
                    "description": "The priority of the antivirus scan job.  Must be a valid job engine impact policy, or null to use the default impact.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "paths": {
                    "description": "Paths to include in the scan.",
                    "items": {
                        "pattern": "^/ifs.*",
                        "type": "string"
                    },
                    "type": "array"
                },
                "recursion_depth": {
                    "description": "The depth to recurse in directories.  The default of -1 gives unlimited recursion.",
                    "type": "integer"
                },
                "schedule": {
                    "description": "The schedule for running scans in isi date format.  Examples include: 'every Friday' or 'every day at 4:00'.  A null value means the policy is manually scheduled.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AntivirusPolicyExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AntivirusPolicy"
                },
                {
                    "properties": {
                        "id": {
                            "description": "A unique identifier for the policy.",
                            "type": "string"
                        },
                        "last_run": {
                            "description": "The epoch time of the last run of this policy.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AntivirusQuarantine": {
            "description": "The quarantine status of a file in /ifs.",
            "properties": {
                "file": {
                    "description": "Path of this file, starting with /ifs.",
                    "type": "string"
                },
                "last_istag": {
                    "description": "The ICAP Service Tag (ISTag) recorded for this file during the last scan, or null if no tag was recorded.  For more information about ISTags, see https://tools.ietf.org/html/rfc3507.",
                    "type": "string"
                },
                "last_scan": {
                    "description": "The date and time this file was last scanned for viruses, as a UNIX timestamp.  If null, the file has never been scanned.",
                    "type": "integer"
                },
                "quarantined": {
                    "description": "If true, this file is quarantined.  If false, the file is not quarantined.",
                    "type": "boolean"
                },
                "scan_result": {
                    "description": "The result of the last scan on this file.  This string is usually one of: never_scanned, clean, quarantined, repaired, truncated, infected_no_action_taken, skipped_per_settings.  However, a longer string starting with 'unknown_status' and describing the details can also appear in uncommon edge cases.",
                    "type": "string"
                },
                "scan_status": {
                    "description": "The scanning status of this file.  If 'current', the file was scanned with the most up-to-date virus defintions.  If 'not_current', it has either not been scanned, been modified since the last scan, or the virus definitions are not current.",
                    "enum": [
                        "current",
                        "not_current"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "scan_result",
                "last_scan",
                "quarantined",
                "last_istag",
                "file",
                "scan_status"
            ],
            "type": "object"
        },
        "AntivirusQuarantinePathParams": {
            "description": "The quarantine status of a file in /ifs.",
            "properties": {
                "quarantined": {
                    "description": "If true, this file is quarantined.  If false, the file is not quarantined.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AntivirusScanItem": {
            "description": "Parameters for a manual antivirus scan.",
            "properties": {
                "file": {
                    "description": "The full path of the file to scan.",
                    "minLength": 1,
                    "type": "string"
                },
                "force_run": {
                    "description": "Forces the scan to run regardless of whether the files were recently scanned. The default value is true.",
                    "type": "boolean"
                },
                "policy": {
                    "description": "The ID of the policy to use for the scan. By default, the scan will use the MANUAL policy.",
                    "minLength": 1,
                    "type": "string"
                },
                "report_id": {
                    "description": "The ID for the report for this scan. A report ID will be generated if one is not provided.",
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "file"
            ],
            "type": "object"
        },
        "AntivirusServer": {
            "description": "An ICAP server that contains virus definitions.",
            "properties": {
                "description": {
                    "description": "A description for the server.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether the server is enabled.",
                    "type": "boolean"
                },
                "url": {
                    "description": "The icap url for the server.  This should have a format of: icap://host.domain:port/path",
                    "minLength": 1,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AntivirusServerExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AntivirusServer"
                },
                {
                    "properties": {
                        "definitions": {
                            "description": "Virus definitions on the server.",
                            "type": "string"
                        },
                        "id": {
                            "description": "A unique identifier for the server.",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status of the server.",
                            "enum": [
                                "active",
                                "inactive",
                                "null"
                            ],
			    "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AntivirusServers": {
            "properties": {
                "servers": {
                    "items": {
                        "$ref": "#/definitions/AntivirusServerExtended",
                        "description": "An ICAP server that contains virus definitions."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AntivirusServersExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AntivirusServers"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AntivirusSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/AntivirusSettingsSettings",
                    "description": "Antivirus settings."
                }
            },
            "type": "object"
        },
        "AntivirusSettingsSettings": {
            "properties": {
                "fail_open": {
                    "description": "Allow access when scanning fails.",
                    "type": "boolean"
                },
                "glob_filters": {
                    "description": "Glob patterns for leaf filenames.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "glob_filters_enabled": {
                    "description": "Enable glob filters.",
                    "type": "boolean"
                },
                "glob_filters_include": {
                    "description": "If true, only scan files matching a glob filter. If false, only scan files that don't match a glob filter.",
                    "type": "boolean"
                },
                "path_prefixes": {
                    "description": "Paths to include in realtime scans.",
                    "items": {
                        "pattern": "^/ifs.*",
                        "type": "string"
                    },
                    "type": "array"
                },
                "quarantine": {
                    "description": "Try to quarantine files when threats are found.",
                    "type": "boolean"
                },
                "repair": {
                    "description": "Try to repair files when threats are found.",
                    "type": "boolean"
                },
                "report_expiry": {
                    "description": "Amount of time in seconds until old reporting data is purged.",
                    "minimum": 0,
                    "type": "integer"
                },
                "scan_on_close": {
                    "description": "Scan files when apps close them.",
                    "type": "boolean"
                },
                "scan_on_open": {
                    "description": "Scan files on access.",
                    "type": "boolean"
                },
                "scan_size_maximum": {
                    "description": "Skip scanning files larger than this.",
                    "minimum": 0,
                    "type": "integer"
                },
                "service": {
                    "description": "Whether the antivirus service is enabled.",
                    "type": "boolean"
                },
                "truncate": {
                    "description": "Try to truncate files when threats are found.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AuditSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/AuditSettingsSettings",
                    "description": "Per-Access Zone Audit settings"
                }
            },
            "type": "object"
        },
        "AuditSettingsSettings": {
            "properties": {
                "audit_failure": {
                    "description": "Filter of protocol operations to Audit when they fail.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "audit_success": {
                    "description": "Filter of protocol operations to Audit when they succeed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "syslog_audit_events": {
                    "description": "Filter of Audit operations to forward to syslog.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "syslog_forwarding_enabled": {
                    "description": "Enables forwarding of events to syslog.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AuditTopic": {
            "description": "Configuration for an Audit topic.",
            "properties": {
                "id": {
                    "description": "Audit topic name.",
                    "type": "string"
                },
                "max_cached_messages": {
                    "description": "Maximum number of messages held in internal queues.",
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AuditTopicCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuditTopic"
                },
                {
                    "description": "Configuration for an Audit topic.",
                    "properties": {
                        "name": {
                            "description": "Audit topic name.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuditTopicExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuditTopic"
                },
                {
                    "properties": {
                        "name": {
                            "description": "Audit topic name.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuditTopics": {
            "properties": {
                "topics": {
                    "items": {
                        "$ref": "#/definitions/AuditTopicExtended",
                        "description": "Configuration for an Audit topic."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuditTopicsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuditTopics"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuthAccess": {
            "properties": {
                "access": {
                    "items": {
                        "$ref": "#/definitions/AuthAccessAccessItem",
                        "description": "User's permission to file info."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItem": {
            "properties": {
                "file": {
                    "$ref": "#/definitions/AuthAccessAccessItemFile",
                    "description": "File to check access permissions."
                },
                "id": {
                    "description": "The user ID.",
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/AuthAccessAccessItemPermissions",
                    "description": "Permissions the users has on the file."
                },
                "relevant_aces": {
                    "description": "List of the relevant ACEs for the user.",
                    "items": {
                        "$ref": "#/definitions/AuthAccessAccessItemRelevantAce",
                        "description": "Access Control Entry on a file."
                    },
                    "type": "array"
                },
                "user": {
                    "$ref": "#/definitions/AuthAccessAccessItemUser",
                    "description": "The user's persona."
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItemFile": {
            "properties": {
                "group": {
                    "description": "Group of the file",
                    "type": "string"
                },
                "mode": {
                    "description": "Mode bits on the file",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner of the file.",
                    "type": "string"
                },
                "relevant_mode": {
                    "description": "Mode bits related to the user",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItemPermissions": {
            "properties": {
                "dacl": {
                    "description": "Status message if the Null ACL is set.",
                    "type": "string"
                },
                "delete_child": {
                    "description": "Status message if the parent directory allows the delete_child for the user.",
                    "type": "string"
                },
                "expected": {
                    "description": "the users' ace",
                    "type": "string"
                },
                "ownership": {
                    "description": "Status message if the user owns the file",
                    "type": "string"
                },
                "sticky": {
                    "description": "Status message if the sticky bit is set.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItemRelevantAce": {
            "properties": {
                "ace": {
                    "description": "The Access control entry",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthAccessAccessItemUser": {
            "properties": {
                "id": {
                    "description": "Serialized form (e.g. 'UID:0', 'USER:name', 'GID:0', 'GROUP:wheel', 'SID:S-1-1').",
                    "type": "string"
                },
                "name": {
                    "description": "Persona name, must be combined with type.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of persona when using name.",
                    "enum": [
                        "user",
                        "group",
                        "wellknown"
                    ],
                    "type": "string"
                },
                "uid": {
                    "description": "The uid of the user.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AuthGroup": {
            "description": "Configuration for a group.",
            "properties": {
                "gid": {
                    "description": "A numeric group identifier.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AuthGroupCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthGroup"
                },
                {
                    "description": "Configuration for a group.",
                    "properties": {
                        "members": {
                            "description": "Members of the group.",
                            "items": {
                                "$ref": "#/definitions/GroupsGroupMember",
                                "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                            },
                            "type": "array"
                        },
                        "name": {
                            "description": "A group name.",
                            "type": "string"
                        },
                        "sid": {
                            "description": "A security identifier.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthGroupExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthGroup"
                },
                {
                    "properties": {
                        "dn": {
                            "type": "string"
                        },
                        "dns_domain": {
                            "type": "string"
                        },
                        "domain": {
                            "type": "string"
                        },
                        "generated_gid": {
                            "description": "Indicates if the GID was generated.",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "The user or group ID.",
                            "type": "string"
                        },
                        "member_of": {
                            "items": {
                                "$ref": "#/definitions/GroupsGroupMember",
                                "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                            },
                            "type": "array"
                        },
                        "name": {
                            "description": "A user or group name.",
                            "type": "string"
                        },
                        "provider": {
                            "description": "Specifies an authentication provider.",
                            "type": "string"
                        },
                        "sam_account_name": {
                            "type": "string"
                        },
                        "sid": {
                            "$ref": "#/definitions/GroupsGroupMember",
                            "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                        },
                        "type": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "dn",
                        "domain",
                        "generated_gid",
                        "name",
                        "dns_domain",
                        "sam_account_name",
                        "provider",
                        "type",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthGroups": {
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/AuthGroupExtended",
                        "description": "Configuration for a group."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthGroupsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthGroups"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuthId": {
            "properties": {
                "ntoken": {
                    "$ref": "#/definitions/AuthIdNtoken",
                    "description": "The security token for the currently authenticated user."
                }
            },
            "type": "object"
        },
        "AuthIdNtoken": {
            "properties": {
                "additional_id": {
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "gid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "group_sid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "ifs_restricted": {
                    "description": "Indicates if this user has restricted access to the /ifs file system.",
                    "type": "boolean"
                },
                "local_address": {
                    "description": "The IP address of the node that is servicing the request.",
                    "type": "string"
                },
                "on_disk_group_id": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "on_disk_user_id": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "privilege": {
                    "description": "Privileges held by the currently authenticated user.",
                    "items": {
                        "$ref": "#/definitions/AuthIdNtokenPrivilegeItem",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                },
                "protocol": {
                    "type": "integer"
                },
                "remote_address": {
                    "description": "The IP address of the client making the request for information.",
                    "type": "string"
                },
                "uid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "user_sid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "zid": {
                    "description": "The zone id that is serving the request.",
                    "type": "integer"
                },
                "zone_id": {
                    "description": "The name of the zone serving the request.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthIdNtokenPrivilegeItem": {
            "properties": {
                "id": {
                    "description": "The ID of the privilege.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the privilege.",
                    "type": "string"
                },
                "read_only": {
                    "description": "Whether the privilege is read-only.",
                    "type": "boolean"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "AuthLogLevel": {
            "properties": {
                "level": {
                    "$ref": "#/definitions/AuthLogLevelLevel",
                    "description": ""
                }
            },
            "type": "object"
        },
        "AuthLogLevelExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthLogLevel"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "AuthLogLevelLevel": {
            "properties": {
                "lsass-level": {
                    "description": "Valid auth logging levels",
                    "enum": [
                        "always",
                        "error",
                        "warning",
                        "info",
                        "verbose",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "netlogon-level": {
                    "description": "Valid auth logging levels",
                    "enum": [
                        "always",
                        "error",
                        "warning",
                        "info",
                        "verbose",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthNetgroup": {
            "properties": {
                "domainname": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "netgroup": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthNetgroups": {
            "properties": {
                "netgroups": {
                    "items": {
                        "$ref": "#/definitions/AuthNetgroup",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthPrivilege": {
            "properties": {
                "category": {
                    "description": "A general categorization of the privilege.",
                    "type": "string"
                },
                "description": {
                    "description": "A short description of the privilege.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the privilege.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the privilege.",
                    "type": "string"
                },
                "read_write": {
                    "description": "Whether the privilege is read-write.",
                    "type": "boolean"
                }
            },
            "required": [
                "category",
                "description",
                "id"
            ],
            "type": "object"
        },
        "AuthPrivileges": {
            "properties": {
                "privileges": {
                    "items": {
                        "$ref": "#/definitions/AuthPrivilege",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AuthRole": {
            "description": "A role maps privileges to users and groups.",
            "properties": {
                "description": {
                    "description": "The description of the role.",
                    "type": "string"
                },
                "members": {
                    "description": "Users or groups that have this role.",
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the role.",
                    "type": "string"
                },
                "privileges": {
                    "description": "Privileges granted by this role.",
                    "items": {
                        "$ref": "#/definitions/AuthIdNtokenPrivilegeItem",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthRoleExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthRole"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The ID of the role.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name",
                        "privileges",
                        "members",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthRoles": {
            "properties": {
                "roles": {
                    "items": {
                        "$ref": "#/definitions/AuthRoleExtended",
                        "description": "A role maps privileges to users and groups."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthRolesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthRoles"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuthShells": {
            "description": "The list of supported shells.",
            "properties": {
                "shells": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthUser": {
            "description": "Configuration for a user.",
            "properties": {
                "email": {
                    "description": "Specifies an Email address.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Auth user is enabled.",
                    "type": "boolean"
                },
                "expiry": {
                    "description": "Epoch time at which the auth user will expire.",
                    "type": "integer"
                },
                "gecos": {
                    "description": "Sets GECOS value (usually full name).",
                    "type": "string"
                },
                "home_directory": {
                    "description": "Specifies user's home directory.",
                    "type": "string"
                },
                "password": {
                    "description": "Changes user's password.",
                    "type": "string"
                },
                "password_expires": {
                    "description": "Specifies whether the password expires.",
                    "type": "boolean"
                },
                "primary_group": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "prompt_password_change": {
                    "description": "Prompts the user to change their password on next login.",
                    "type": "boolean"
                },
                "shell": {
                    "description": "Specifies the user's shell.",
                    "type": "string"
                },
                "sid": {
                    "description": "A security identifier.",
                    "type": "string"
                },
                "uid": {
                    "description": "A numeric user identifier.",
                    "type": "integer"
                },
                "unlock": {
                    "description": "Unlocks the user's account if locked.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AuthUserCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthUser"
                },
                {
                    "description": "Configuration for a user.",
                    "properties": {
                        "name": {
                            "description": "A user name.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "AuthUsers": {
            "properties": {
                "users": {
                    "items": {
                        "$ref": "#/definitions/MappingUsersLookupMappingItemUser",
                        "description": "Configuration for a user."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthUsersExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/AuthUsers"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AuthWellknowns": {
            "properties": {
                "wellknowns": {
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ChangelistsChangelistLins": {
            "properties": {
                "atime": {
                    "$ref": "#/definitions/ChangelistsChangelistLinsCtime",
                    "description": ""
                },
                "ctime": {
                    "$ref": "#/definitions/ChangelistsChangelistLinsCtime",
                    "description": ""
                },
                "id": {
                    "description": "The LIN number of the file associated with the entry.",
                    "type": "string"
                },
                "mtime": {
                    "$ref": "#/definitions/ChangelistsChangelistLinsCtime",
                    "description": ""
                },
                "path": {
                    "description": "The path to the file associated with the entry.",
                    "type": "string"
                },
                "size": {
                    "description": "The size of the file associated with the entry.",
                    "type": "integer"
                },
                "type": {
                    "description": "Type of file.",
                    "type": "string"
                }
            },
            "required": [
                "path",
                "type",
                "id",
                "size"
            ],
            "type": "object"
        },
        "ChangelistsChangelistLinsCtime": {
            "properties": {
                "nsec": {
                    "description": "Nanoseconds component of timespec.",
                    "required": false,
                    "type": "integer"
                },
                "sec": {
                    "description": "Seconds component of timespec.",
                    "type": "integer"
                }
            },
            "required": [
                "sec"
            ],
            "type": "object"
        },
        "ChangelistsChangelistLinsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ChangelistsChangelistLins"
                },
                {
                    "properties": {
                        "lins": {
                            "items": {
                                "$ref": "#/definitions/ChangelistsChangelistLins",
                                "description": ""
                            },
                            "type": "array"
                        },
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudAccess": {
            "properties": {
                "clusters": {
                    "items": {
                        "$ref": "#/definitions/CloudAccessCluster",
                        "description": "Accessible cloud storage information"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudAccessCluster": {
            "properties": {
                "accounts": {
                    "description": "A list of accounts created on the cluster with this guid",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "current": {
                    "description": "Whether the guid is that of the current (local) cluster",
                    "type": "boolean"
                },
                "guid": {
                    "description": "A cluster guid indicating the birth place of one or more accounts or policies on this cluster",
                    "type": "string"
                },
                "id": {
                    "description": "A cluster guid indicating the birth place of one or more accounts or policies on this cluster",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the cluster from which the above guid originated",
                    "type": "string"
                },
                "policies": {
                    "description": "A list of policies created on the cluster with this guid",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "state": {
                    "description": "Whether the guid has access to the cloud",
                    "enum": [
                        "permitted",
                        "pending enable",
                        "pending disable",
                        "not permitted"
                    ],
                    "type": "string"
                },
                "synced_from": {
                    "description": "The name of the cluster from which the above guid was synced",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudAccessItem": {
            "description": "Accessible cloud storage information",
            "properties": {
                "guid": {
                    "description": "A cluster guid indicating the birth place of one or more accounts or policies on this cluster",
                    "type": "string"
                }
            },
            "required": [
                "guid"
            ],
            "type": "object"
        },
        "CloudAccount": {
            "description": "A cloud account object",
            "properties": {
                "account_id": {
                    "description": "(S3 only) The user id of the S3 account",
                    "type": "string"
                },
                "account_username": {
                    "description": "The username required to authenticate against the cloud service",
                    "type": "string"
                },
                "birth_cluster_id": {
                    "description": "The guid of the cluster where this account was created",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether this account is explicitly enabled or disabled by a user",
                    "type": "boolean"
                },
                "key": {
                    "description": "A valid authentication key for connecting to the cloud",
                    "type": "string"
                },
                "name": {
                    "description": "A unique name for this account",
                    "type": "string"
                },
                "skip_ssl_validation": {
                    "description": "Indicates whether to skip SSL certificate validation when connecting to the cloud",
                    "type": "boolean"
                },
                "storage_region": {
                    "description": "(S3 only) An appropriate region for the S3 account.  For example, faster access times may be gained by referencing a nearby region",
                    "type": "string"
                },
                "telemetry_bucket": {
                    "description": "(S3 only) The name of the bucket into which generated metrics reports are placed by the cloud service provider",
                    "type": "string"
                },
                "uri": {
                    "description": "A valid URI pointing to the location of the cloud storage",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudAccountCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudAccount"
                },
                {
                    "description": "A cloud account object",
                    "properties": {
                        "type": {
                            "description": "The type of cloud protocol required (e.g., 'ran', 'azure', 's3', 'ecs')",
                            "enum": [
                                "ran",
                                "azure",
                                "s3",
                                "ecs"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "account_username",
                        "uri",
                        "key",
                        "type",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "CloudAccountExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudAccount"
                },
                {
                    "properties": {
                        "bucket": {
                            "description": "The machine generated name of the account bucket to store data",
                            "type": "string"
                        },
                        "id": {
                            "description": "A globally unique name for this account",
                            "type": "string"
                        },
                        "metadata_bucket": {
                            "description": "The machine generated name of the account bucket to store metadata",
                            "type": "string"
                        },
                        "pool": {
                            "description": "Name of the pool referencing this account.  Empty if none.",
                            "type": "string"
                        },
                        "state": {
                            "description": "Indicates whether this account is in a good state (\"OK\"), disabled (\"disabled\") or inaccessible via the network (\"unreachable\")",
                            "enum": [
                                "OK",
                                "disabled",
                                "unreachable"
                            ],
                            "type": "string"
                        },
                        "state_details": {
                            "description": "Gives further information to describe the state of this account",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of cloud protocol required (e.g., 'ran', 'azure', 's3', 'ecs')",
                            "enum": [
                                "ran",
                                "azure",
                                "s3",
                                "ecs"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudAccounts": {
            "properties": {
                "accounts": {
                    "items": {
                        "$ref": "#/definitions/CloudAccountExtended",
                        "description": "A cloud account object"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudAccountsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudAccounts"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudJob": {
            "description": "A cloud job for archiving or recalling files",
            "properties": {
                "all": {
                    "description": "Whether to apply to the given operation type or to all jobs of the given operation type",
                    "type": "boolean"
                },
                "state": {
                    "description": "The desired state of the job or operation",
                    "enum": [
                        "resume",
                        "pause",
                        "cancel"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudJobsFiles": {
            "properties": {
                "files": {
                    "items": {
                        "description": "File associated with a cloud job",
                        "type": "string"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudPool": {
            "description": "A group of cloud accounts which will be the destination for file stubbing",
            "properties": {
                "accounts": {
                    "description": "A list of valid names for the accounts in this pool.  There is currently only one account allowed per pool.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "birth_cluster_id": {
                    "description": "The guid of the cluster where this pool was created",
                    "type": "string"
                },
                "description": {
                    "description": "A brief description of this pool",
                    "type": "string"
                },
                "name": {
                    "description": "A unique name for this pool",
                    "type": "string"
                },
                "vendor": {
                    "description": "A string identifier of the cloud services vendor",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudPoolCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudPool"
                },
                {
                    "description": "A group of cloud accounts which will be the destination for file stubbing",
                    "properties": {
                        "type": {
                            "description": "The type of cloud protocol required (e.g., 'ran', 'azure', 's3', 'ecs')",
                            "enum": [
                                "ran",
                                "azure",
                                "s3",
                                "ecs"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "accounts",
                        "type",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "CloudPoolExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudPool"
                },
                {
                    "properties": {
                        "id": {
                            "description": "A unique name for this pool",
                            "type": "string"
                        },
                        "state": {
                            "description": "Indicates whether this pool is in a good state (\"OK\") or disabled (\"disabled\")",
                            "enum": [
                                "OK",
                                "disabled"
                            ],
                            "type": "string"
                        },
                        "state_details": {
                            "description": "Gives further information to describe the state of this pool",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of cloud protocol required (e.g., 'ran', 'azure', 's3', 'ecs')",
                            "enum": [
                                "ran",
                                "azure",
                                "s3",
                                "ecs"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudPools": {
            "properties": {
                "pools": {
                    "items": {
                        "$ref": "#/definitions/CloudPoolExtended",
                        "description": "A group of cloud accounts which will be the destination for file stubbing"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CloudPoolsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CloudPools"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CloudSettingsSettingsSleepTimeoutCloudGarbageCollection": {
            "properties": {
                "recovery_with_tasks": {
                    "description": "Sleep timeout for a recovery thread with pending tasks",
                    "type": "integer"
                },
                "recovery_without_tasks": {
                    "description": "Sleep timeout for a recovery thread without pending tasks",
                    "type": "integer"
                },
                "with_tasks": {
                    "description": "Sleep timeout for a non-recovery thread with pending tasks",
                    "type": "integer"
                },
                "without_tasks": {
                    "description": "Sleep timeout for a non-recovery thread without pending tasks",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ClusterAddNodeItem": {
            "description": "Add Node information.",
            "properties": {
                "allow_down": {
                    "description": "Allow down nodes (Default false).",
                    "required": false,
                    "type": "boolean"
                },
                "serial_number": {
                    "description": "Serial number of this node.",
                    "type": "string"
                },
                "skip_hardware_version_check": {
                    "description": "Bypass hardware version checks (Default false).",
                    "required": false,
                    "type": "boolean"
                }
            },
            "required": [
                "serial_number"
            ],
            "type": "object"
        },
        "ClusterArchiveItem": {
            "description": "Start an archive of an upgrade.",
            "properties": {
                "clear": {
                    "description": "If set to true the currently running upgrade will be cleared",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ClusterAssessItem": {
            "description": "The settings necessary to start a pre-upgrade assessment.",
            "properties": {
                "install_image_path": {
                    "description": "The location (path) of the upgrade image which must be within /ifs.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterEmail": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/ClusterEmailSettings",
                    "description": "Cluster email notification settings."
                }
            },
            "type": "object"
        },
        "ClusterEmailExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ClusterEmail"
                },
                {
                    "description": "Cluster email notification settings.",
                    "properties": {
                        "batch_mode": {
                            "description": "This setting determines how notifications will be batched together to be sent by email.  'none' means each notification will be sent separately.  'severity' means notifications of the same severity will be sent together.  'category' means notifications of the same category will be sent together.  'all' means all notifications will be batched together and sent in a single email.",
                            "enum": [
                                "all",
                                "severity",
                                "category",
                                "none"
                            ],
                            "type": "string"
                        },
                        "mail_relay": {
                            "description": "The address of the SMTP server to be used for relaying the notification messages.  An SMTP server is required in order to send notifications.  If this string is empty, no emails will be sent.",
                            "type": "string"
                        },
                        "mail_sender": {
                            "description": "The full email address that will appear as the sender of notification messages.",
                            "type": "string"
                        },
                        "mail_subject": {
                            "description": "The subject line for notification messages from this cluster.",
                            "type": "string"
                        },
                        "smtp_auth_passwd": {
                            "description": "Password to authenticate with if SMTP authentication is being used.",
                            "type": "string"
                        },
                        "smtp_auth_security": {
                            "description": "The type of secure communication protocol to use if SMTP is being used.  If 'none', plain text will be used, if 'starttls', the encrypted STARTTLS protocol will be used.",
                            "enum": [
                                "none",
                                "starttls"
                            ],
                            "type": "string"
                        },
                        "smtp_auth_username": {
                            "description": "Username to authenticate with if SMTP authentication is being used.",
                            "type": "string"
                        },
                        "smtp_port": {
                            "description": "The port on the SMTP server to be used for relaying the notification messages.  ",
                            "type": "integer"
                        },
                        "use_smtp_auth": {
                            "description": "If true, this cluster will send SMTP authentication credentials to the SMTP relay server in order to send its notification emails.  If false, the cluster will attempt to send its notification emails without authentication.",
                            "type": "boolean"
                        },
                        "user_template": {
                            "description": "Location of a custom template file that can be used to specify the layout of the notification emails.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ClusterEmailSettings": {
            "properties": {
                "batch_mode": {
                    "description": "This setting determines how notifications will be batched together to be sent by email.  'none' means each notification will be sent separately.  'severity' means notifications of the same severity will be sent together.  'category' means notifications of the same category will be sent together.  'all' means all notifications will be batched together and sent in a single email.",
                    "enum": [
                        "all",
                        "severity",
                        "category",
                        "none"
                    ],
                    "type": "string"
                },
                "mail_relay": {
                    "description": "The address of the SMTP server to be used for relaying the notification messages.  An SMTP server is required in order to send notifications.  If this string is empty, no emails will be sent.",
                    "type": "string"
                },
                "mail_sender": {
                    "description": "The full email address that will appear as the sender of notification messages.",
                    "type": "string"
                },
                "mail_subject": {
                    "description": "The subject line for notification messages from this cluster.",
                    "type": "string"
                },
                "smtp_auth_passwd_set": {
                    "description": "Indicates if an SMTP authentication password is set.",
                    "type": "boolean"
                },
                "smtp_auth_security": {
                    "description": "The type of secure communication protocol to use if SMTP is being used.  If 'none', plain text will be used, if 'starttls', the encrypted STARTTLS protocol will be used.",
                    "enum": [
                        "none",
                        "starttls"
                    ],
                    "type": "string"
                },
                "smtp_auth_username": {
                    "description": "Username to authenticate with if SMTP authentication is being used.",
                    "type": "string"
                },
                "smtp_port": {
                    "description": "The port on the SMTP server to be used for relaying the notification messages.  ",
                    "type": "integer"
                },
                "use_smtp_auth": {
                    "description": "If true, this cluster will send SMTP authentication credentials to the SMTP relay server in order to send its notification emails.  If false, the cluster will attempt to send its notification emails without authentication.",
                    "type": "boolean"
                },
                "user_template": {
                    "description": "Location of a custom template file that can be used to specify the layout of the notification emails.",
                    "type": "string"
                }
            },
            "required": [
                "smtp_auth_security",
                "user_template",
                "use_smtp_auth",
                "smtp_auth_username",
                "smtp_port",
                "mail_subject",
                "mail_sender",
                "mail_relay",
                "smtp_auth_passwd_set",
                "batch_mode"
            ],
            "type": "object"
        },
        "ClusterFirmwareProgress": {
            "description": "Cluster wide firmware upgrade progress info.",
            "properties": {
                "cluster_state": {
                    "description": "The different states of a  firmware upgrade. One of the following values: 'committed', 'upgrading', 'error'",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterFirmwareStatus": {
            "description": "The firmware status for the cluster.",
            "properties": {
                "nodes": {
                    "description": "List of the firmware status information for all the nodes in the cluster.",
                    "items": {
                        "$ref": "#/definitions/ClusterFirmwareStatusNode",
                        "description": "The firmware status for the node."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterFirmwareStatusNode": {
            "properties": {
                "devices": {
                    "description": "List of the firmware status for hardware components on the node.",
                    "items": {
                        "$ref": "#/definitions/ClusterFirmwareStatusNodeDevice",
                        "description": "The firmware status for a hardware component on the node."
                    },
                    "type": "array"
                },
                "lnn": {
                    "description": "The lnn of the node.",
                    "type": "integer"
                },
                "package": {
                    "description": "List of the firmware binary information for the installed firmware package.",
                    "items": {
                        "$ref": "#/definitions/ClusterFirmwareStatusNodePackageItem",
                        "description": "The firmware binary information."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterFirmwareStatusNodeDevice": {
            "properties": {
                "device": {
                    "description": "The name of the device.",
                    "type": "string"
                },
                "mismatch": {
                    "description": "Is the firmware up-to-date for this component.",
                    "type": "boolean"
                },
                "target_version": {
                    "description": "The target firmware version.",
                    "type": "string"
                },
                "type": {
                    "description": "The device type.",
                    "type": "string"
                },
                "upgrade_status": {
                    "description": "The current state of the firmware upgrade for this component. One of the following values: 'queued', 'upgrading', 'upgraded', 'error'. or 'null'.'null' indicates that the upgrade status is unknown.",
                    "type": "string"
                },
                "version": {
                    "description": "The current firmware version.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterFirmwareStatusNodePackageItem": {
            "properties": {
                "checksum": {
                    "description": "Valid checksum string for binary. One of the following: 'ok', 'bad', 'file_missing', or 'na'",
                    "type": "string"
                },
                "firmware": {
                    "description": "The name of the firmware binary.",
                    "type": "string"
                },
                "version": {
                    "description": "The version string for the binary.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterFirmwareUpgradeItem": {
            "description": "The settings necessary to start a firmware upgrade.",
            "properties": {
                "exclude_device": {
                    "description": "Exclude the specified devices in the firmware upgrade.",
                    "type": "string"
                },
                "exclude_type": {
                    "description": "Include the specified device type in the firmware upgrade.",
                    "type": "string"
                },
                "include_device": {
                    "description": "Include the specified devices in the firmware upgrade.",
                    "type": "string"
                },
                "include_type": {
                    "description": "Include the specified device type in the firmware upgrade.",
                    "type": "string"
                },
                "no_burn": {
                    "description": "Do not burn the firmware.",
                    "type": "boolean"
                },
                "no_reboot": {
                    "description": "Do not reboot the node after an upgrade",
                    "type": "boolean"
                },
                "no_verify": {
                    "description": "Do not verify the firmware upgrade after an upgrade.",
                    "type": "boolean"
                },
                "nodes_to_upgrade": {
                    "description": "The nodes scheduled for upgrade. Order in array determines queue position number. 'All' and null option will upgrade all nodes in <lnn> order.",
                    "items": {
                        "description": "The lnn of the node.",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterIdentity": {
            "description": "Unprivileged cluster information for display when logging in.",
            "properties": {
                "description": {
                    "description": "A description of the cluster.",
                    "type": "string"
                },
                "logon": {
                    "$ref": "#/definitions/ClusterIdentityLogon",
                    "description": "The information displayed when a user logs in to the cluster."
                },
                "name": {
                    "description": "The name of the cluster.",
                    "type": "string"
                }
            },
            "required": [
                "description",
                "name"
            ],
            "type": "object"
        },
        "ClusterIdentityLogon": {
            "properties": {
                "motd": {
                    "description": "The message of the day.",
                    "type": "string"
                },
                "motd_header": {
                    "description": "The header to the message of the day.",
                    "type": "string"
                }
            },
            "required": [
                "motd_header",
                "motd"
            ],
            "type": "object"
        },
        "ClusterNode": {
            "description": "Node information.",
            "properties": {
                "drives": {
                    "$ref": "#/definitions/ClusterNodeDrives",
                    "description": "Information about this node's drives."
                },
                "state": {
                    "$ref": "#/definitions/ClusterNodeState",
                    "description": "Node state information (reported and modifiable)."
                }
            },
            "type": "object"
        },
        "ClusterNodeDrives": {
            "properties": {
                "drives": {
                    "description": "List of the drives in this node.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnDrivesNodeDrive",
                        "description": "Drive information."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterNodeExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ClusterNode"
                },
                {
                    "properties": {
                        "error": {
                            "$ref": "#/definitions/ClusterNodesError",
                            "description": "The current OneFS version before upgrade."
                        },
                        "last_action": {
                            "description": "The last action performed to completion/failure on this node.  Null if the node_state is 'committed' or 'assessing.' One of the following values: 'upgrade', 'rollback'.",
                            "type": "string"
                        },
                        "last_action_result": {
                            "description": "Did the node pass upgrade or rollback without failing? Null if the node_state is 'committed.' One of the following values: 'pass', 'fail', null",
                            "type": "string"
                        },
                        "lnn": {
                            "description": "The lnn of the node.",
                            "type": "integer"
                        },
                        "node_state": {
                            "description": "The state of the node during the upgrade, rollback, or assessment. One of the following values: 'committed', 'upgraded', 'upgrading', 'rolling back', 'assessing', 'error'",
                            "type": "string"
                        },
                        "onefs_version": {
                            "$ref": "#/definitions/ClusterNodesOnefsVersion",
                            "description": "The current OneFS version before upgrade."
                        },
                        "progress": {
                            "description": "What step is the upgrade, assessment, or rollback in? To show via progress indicator. NOTE: the value is an integer between 0 and 100 (percent)",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ClusterNodeHardware": {
            "properties": {
                "chassis": {
                    "description": "Name of this node's chassis.",
                    "type": "string"
                },
                "chassis_code": {
                    "description": "Chassis code of this node (1U, 2U, etc.).",
                    "type": "string"
                },
                "chassis_count": {
                    "description": "Number of chassis making up this node.",
                    "type": "string"
                },
                "class": {
                    "description": "Class of this node (storage, accelerator, etc.).",
                    "type": "string"
                },
                "configuration_id": {
                    "description": "Node configuration ID.",
                    "type": "string"
                },
                "cpu": {
                    "description": "Manufacturer and model of this node's CPU.",
                    "type": "string"
                },
                "disk_controller": {
                    "description": "Manufacturer and model of this node's disk controller.",
                    "type": "string"
                },
                "disk_expander": {
                    "description": "Manufacturer and model of this node's disk expander.",
                    "type": "string"
                },
                "family_code": {
                    "description": "Family code of this node (X, S, NL, etc.).",
                    "type": "string"
                },
                "flash_drive": {
                    "description": "Manufacturer, model, and device id of this node's flash drive.",
                    "type": "string"
                },
                "generation_code": {
                    "description": "Generation code of this node.",
                    "type": "string"
                },
                "hwgen": {
                    "description": "Isilon hardware generation name.",
                    "type": "string"
                },
                "imb_version": {
                    "description": "Version of this node's Isilon Management Board.",
                    "type": "string"
                },
                "infiniband": {
                    "description": "Infiniband card type.",
                    "type": "string"
                },
                "lcd_version": {
                    "description": "Version of the LCD panel.",
                    "type": "string"
                },
                "motherboard": {
                    "description": "Manufacturer and model of this node's motherboard.",
                    "type": "string"
                },
                "net_interfaces": {
                    "description": "Description of all this node's network interfaces.",
                    "type": "string"
                },
                "nvram": {
                    "description": "Manufacturer and model of this node's NVRAM board.",
                    "type": "string"
                },
                "powersupplies": {
                    "description": "Description strings for each power supply on this node.",
                    "items": {
                        "description": "Manufacturer and firmware of this power supply.",
                        "type": "string"
                    },
                    "type": "array"
                },
                "processor": {
                    "description": "Number of processors and cores on this node.",
                    "type": "string"
                },
                "product": {
                    "description": "Isilon product name.",
                    "type": "string"
                },
                "ram": {
                    "description": "Size of RAM in bytes.",
                    "type": "integer"
                },
                "serial_number": {
                    "description": "Serial number of this node.",
                    "type": "string"
                },
                "series": {
                    "description": "Series of this node (X, I, NL, etc.).",
                    "type": "string"
                },
                "storage_class": {
                    "description": "Storage class of this node (storage or diskless).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterNodePartitions": {
            "properties": {
                "count": {
                    "description": "Count of how many partitions are included.",
                    "type": "integer"
                },
                "partitions": {
                    "description": "Partition information.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnPartitionsNodePartition",
                        "description": "Node partition information."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterNodeSensors": {
            "properties": {
                "sensors": {
                    "description": "This node's sensor information.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnSensorsNodeSensor",
                        "description": "Node sensor information."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterNodeState": {
            "properties": {
                "readonly": {
                    "$ref": "#/definitions/ClusterNodeStateReadonly",
                    "description": "Node readonly state."
                },
                "servicelight": {
                    "$ref": "#/definitions/ClusterNodeStateServicelight",
                    "description": "Node service light state."
                },
                "smartfail": {
                    "$ref": "#/definitions/ClusterNodeStateSmartfail",
                    "description": "Node smartfail state."
                }
            },
            "type": "object"
        },
        "ClusterNodeStateExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ClusterNodeState"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "ClusterNodeStateReadonly": {
            "properties": {},
            "type": "object"
        },
        "ClusterNodeStateServicelight": {
            "properties": {
                "enabled": {
                    "description": "The node service light state (True = on).",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ],
            "type": "object"
        },
        "ClusterNodeStateSmartfail": {
            "properties": {
                "smartfailed": {
                    "description": "This node is smartfailed (soft_devs).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ClusterNodeStatus": {
            "properties": {
                "batterystatus": {
                    "$ref": "#/definitions/NodesLnnStatusNodeBatterystatus",
                    "description": "Battery status information."
                },
                "capacity": {
                    "description": "Storage capacity of this node.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnStatusNodeCapacityItem",
                        "description": "Node capacity information."
                    },
                    "type": "array"
                },
                "cpu": {
                    "$ref": "#/definitions/NodesLnnStatusNodeCpu",
                    "description": "CPU status information for this node."
                },
                "nvram": {
                    "$ref": "#/definitions/NodesLnnStatusNodeNvram",
                    "description": "Node NVRAM information."
                },
                "powersupplies": {
                    "$ref": "#/definitions/NodesLnnStatusNodePowersupplies",
                    "description": "Information about this node's power supplies."
                },
                "release": {
                    "description": "OneFS release.",
                    "type": "string"
                },
                "uptime": {
                    "description": "Seconds this node has been online.",
                    "type": "integer"
                },
                "version": {
                    "description": "OneFS version.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterNodes": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/ClusterNodeExtended",
                        "description": "Node information."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ClusterNodesAvailable": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/ClusterNodesAvailableNode",
                        "description": "Available Node information."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ClusterNodesAvailableNode": {
            "properties": {
                "configuration_id": {
                    "description": "Node configuration ID.",
                    "type": "string"
                },
                "product": {
                    "description": "Isilon product name.",
                    "type": "string"
                },
                "serial_number": {
                    "description": "Serial number of this node.",
                    "type": "string"
                },
                "status": {
                    "description": "Availability of the node.",
                    "enum": [
                        "available",
                        "waiting",
                        "error",
                        "error_permanent",
                        "working",
                        "rebooting",
                        "exiting"
                    ],
                    "type": "string"
                },
                "version": {
                    "description": "OneFS build version running on the node.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterNodesError": {
            "properties": {
                "failed_upgrade_action": {
                    "description": "Last upgrade step which failed on node.",
                    "type": "string"
                },
                "log": {
                    "description": "Upgrade error log.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterNodesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ClusterNodes"
                },
                {
                    "description": "View information about nodes during an upgrade, rollback, or pre-upgrade assessment.",
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "ClusterNodesLnnFirmwareStatus": {
            "description": "The firmware status for the node.",
            "properties": {
                "devices": {
                    "description": "List of the firmware status for hardware components on the node.",
                    "items": {
                        "$ref": "#/definitions/ClusterFirmwareStatusNodeDevice",
                        "description": "The firmware status for a hardware component on the node."
                    },
                    "type": "array"
                },
                "node_unavailable": {
                    "description": "Node is unavailable.",
                    "type": "boolean"
                },
                "package": {
                    "description": "List of the firmware binary information for the installed firmware package.",
                    "items": {
                        "$ref": "#/definitions/ClusterFirmwareStatusNodePackageItem",
                        "description": "The firmware binary information."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterNodesOnefsVersion": {
            "properties": {
                "bugfix": {
                    "type": "integer"
                },
                "maintenance": {
                    "type": "integer"
                },
                "major": {
                    "type": "integer"
                },
                "minor": {
                    "type": "integer"
                },
                "version": {
                    "description": "hex representation of the OneFS version integer.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterOwner": {
            "description": "Cluster contact info settings.",
            "properties": {
                "company": {
                    "description": "Cluster owner company name.",
                    "required": false,
                    "type": "string"
                },
                "location": {
                    "description": "Cluster owner location.",
                    "required": false,
                    "type": "string"
                },
                "primary_email": {
                    "description": "Cluster owner primary email address.",
                    "required": false,
                    "type": "string"
                },
                "primary_name": {
                    "description": "Cluster owner primary contact name.",
                    "required": false,
                    "type": "string"
                },
                "primary_phone1": {
                    "description": "Cluster owner primary contact phone number 1.",
                    "required": false,
                    "type": "string"
                },
                "primary_phone2": {
                    "description": "Cluster owner primary contact phone number 2.",
                    "required": false,
                    "type": "string"
                },
                "secondary_email": {
                    "description": "Cluster owner secondary email address.",
                    "required": false,
                    "type": "string"
                },
                "secondary_name": {
                    "description": "Cluster owner secondary contact name.",
                    "required": false,
                    "type": "string"
                },
                "secondary_phone1": {
                    "description": "Cluster owner secondary contact phone number 1.",
                    "required": false,
                    "type": "string"
                },
                "secondary_phone2": {
                    "description": "Cluster owner secondary contact phone number 2.",
                    "required": false,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterPatchPatche": {
            "description": "A software patch that can be applied to OneFS.",
            "properties": {
                "patch": {
                    "description": "The name or path of the patch to install.",
                    "type": "string"
                }
            },
            "required": [
                "patch"
            ],
            "type": "object"
        },
        "ClusterRetryLastActionItem": {
            "description": "Retry the last upgrade action, in-case the previous attempt failed.",
            "properties": {
                "nodes": {
                    "description": "List of the nodes or \"all\" where the last upgrade action can be retried.",
                    "items": {
                        "description": "The lnn of the node.",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterStatfs": {
            "description": "Filesystem statistics",
            "properties": {
                "f_bavail": {
                    "description": "The number of free blocks available to non-superuser.",
                    "type": "integer"
                },
                "f_bfree": {
                    "description": "The number of free blocks in the filesystem.",
                    "type": "integer"
                },
                "f_blocks": {
                    "description": "The total number of data blocks in the filesystem.",
                    "type": "integer"
                },
                "f_bsize": {
                    "description": "The filesystem fragment size.",
                    "type": "integer"
                },
                "f_ffree": {
                    "description": "The number of free nodes available to non-superuser.",
                    "type": "integer"
                },
                "f_files": {
                    "description": "The total number of file nodes in the filesystem.",
                    "type": "integer"
                },
                "f_flags": {
                    "description": "A copy of the mount exported flags.",
                    "type": "integer"
                },
                "f_fstypename": {
                    "description": "The filesystem type name.",
                    "type": "string"
                },
                "f_iosize": {
                    "description": "The optimal transfer block size.",
                    "type": "integer"
                },
                "f_mntfromname": {
                    "description": "The name of the mounted filesystem.",
                    "type": "string"
                },
                "f_mntonname": {
                    "description": "The directory that the filesystem is mounted on.",
                    "type": "string"
                },
                "f_namemax": {
                    "description": "The maximum length of a file name.",
                    "type": "integer"
                },
                "f_owner": {
                    "description": "The ID of the user that mounted the filesystem.",
                    "type": "integer"
                },
                "f_type": {
                    "description": "The type of the filesystem.",
                    "type": "integer"
                },
                "f_version": {
                    "description": "The structure version number.",
                    "type": "integer"
                }
            },
            "required": [
                "f_type",
                "f_bsize",
                "f_bavail",
                "f_owner",
                "f_iosize",
                "f_files",
                "f_mntfromname",
                "f_blocks",
                "f_ffree",
                "f_bfree",
                "f_mntonname",
                "f_namemax",
                "f_version",
                "f_flags",
                "f_fstypename"
            ],
            "type": "object"
        },
        "ClusterTime": {
            "properties": {
                "time": {
                    "description": "The current time on the cluster as a UNIX epoch (seconds since 1/1/1970), as reported by this node.",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ClusterUpgrade": {
            "description": "Add nodes to a running upgrade.",
            "properties": {
                "nodes_to_rolling_upgrade": {
                    "description": "The nodes (to be) scheduled for an existing upgrade ordered by queue position number. [<lnn-1>, <lnn-2>, ... ], 'All', null",
                    "items": {
                        "description": "The lnn of the node.",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClusterUpgradeItem": {
            "description": "The settings necessary to start an upgrade.",
            "properties": {
                "install_image_path": {
                    "description": "The location (path) of the upgrade image which must be within /ifs.",
                    "type": "string"
                },
                "nodes_to_rolling_upgrade": {
                    "description": "The nodes (to be) scheduled for upgrade ordered by queue position number. Null if the cluster_state is 'partially upgraded' or upgrade_type is 'simultaneous'. One of the following values: [<lnn-1>, <lnn-2>, ... ], 'All', null",
                    "items": {
                        "description": "The lnn of the node.",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "skip_optional": {
                    "description": "Used to indicate that the pre-upgrade check should be skipped",
                    "type": "boolean"
                },
                "upgrade_type": {
                    "description": "The type of upgrade to perform. One of the following values: 'rolling', 'simultaneous'",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompatibilitiesClassActive": {
            "properties": {
                "active": {
                    "items": {
                        "$ref": "#/definitions/CompatibilitiesClassActiveActiveItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompatibilitiesClassActiveActiveItem": {
            "properties": {
                "class_1": {
                    "description": "The first class in an active compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The second class in an active compatibility",
                    "type": "string"
                },
                "id": {
                    "description": "The id of this active compatibility",
                    "type": "integer"
                }
            },
            "required": [
                "class_2",
                "class_1",
                "id"
            ],
            "type": "object"
        },
        "CompatibilitiesClassActiveExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CompatibilitiesClassActive"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CompatibilitiesClassActiveItem": {
            "properties": {
                "assess": {
                    "description": "Do not create compatibility, only assess if creation is possible.",
                    "type": "boolean"
                },
                "class_1": {
                    "description": "The first class in the desired compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The second class in the desired compatibility",
                    "type": "string"
                }
            },
            "required": [
                "class_2",
                "class_1"
            ],
            "type": "object"
        },
        "CompatibilitiesClassAvailable": {
            "properties": {
                "available": {
                    "items": {
                        "$ref": "#/definitions/CompatibilitiesClassAvailableAvailableItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompatibilitiesClassAvailableAvailableItem": {
            "properties": {
                "class_1": {
                    "description": "The first class in an available compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The second class in an available compatibility",
                    "type": "string"
                }
            },
            "required": [
                "class_2",
                "class_1"
            ],
            "type": "object"
        },
        "CompatibilitiesSsdActive": {
            "properties": {
                "active": {
                    "items": {
                        "$ref": "#/definitions/CompatibilitiesSsdActiveActiveItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "CompatibilitiesSsdActiveActiveItem": {
            "properties": {
                "class_1": {
                    "description": "The node class of an ssd compatibility",
                    "type": "string"
                },
                "count": {
                    "description": "Is this SSD Compatibility Count Compatible.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The id of this ssd compatibility",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "class_1",
                "id"
            ],
            "type": "object"
        },
        "CompatibilitiesSsdActiveExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/CompatibilitiesSsdActive"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "CompatibilitiesSsdActiveIdParams": {
            "properties": {
                "assess": {
                    "description": "Do not delete ssd compatibility, only assess if deletion is possible.",
                    "type": "boolean"
                },
                "count": {
                    "description": "Are we enabling or disabling count",
                    "type": "boolean"
                },
                "id_2": {
                    "description": "The optional id of the second ssd compatibility.",
                    "required": false,
                    "type": "integer"
                }
            },
            "required": [
                "count"
            ],
            "type": "object"
        },
        "CompatibilitiesSsdActiveItem": {
            "properties": {
                "assess": {
                    "description": "Do not create ssd compatibility, only assess if creation is possible.",
                    "type": "boolean"
                },
                "class_1": {
                    "description": "The node class of the desired ssd compatibility",
                    "type": "string"
                },
                "class_2": {
                    "description": "The optional second node class to turn on ssd compatibility",
                    "required": false,
                    "type": "string"
                },
                "count": {
                    "description": "Is this SSD Compatibility Count Compatible.",
                    "required": false,
                    "type": "boolean"
                }
            },
            "required": [
                "class_1"
            ],
            "type": "object"
        },
        "CompatibilitiesSsdAvailable": {
            "properties": {
                "available": {
                    "items": {
                        "$ref": "#/definitions/CompatibilitiesSsdAvailableAvailableItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompatibilitiesSsdAvailableAvailableItem": {
            "properties": {
                "class": {
                    "description": "The node class of an ssd compatibility",
                    "type": "string"
                }
            },
            "required": [
                "class"
            ],
            "type": "object"
        },
        "CreateAntivirusScanItemResponse": {
            "description": "The result of a manual antivirus scan.",
            "properties": {
                "report_id": {
                    "description": "The ID for the report for this scan. A report ID will be generated if one is not provided. ",
                    "type": "string"
                },
                "result": {
                    "description": "The result of the scan.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateAuditTopicResponse": {
            "properties": {
                "id": {
                    "description": "ID of created item that can be used to refer to item in the collection-item resource path.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateAuthRefreshItemResponse": {
            "properties": {
                "id": {
                    "description": "Unique ID of the log filter.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CreateCloudAccountResponse": {
            "properties": {
                "id": {
                    "description": "The name of the new account",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateCloudPoolResponse": {
            "properties": {
                "id": {
                    "description": "The name of the new pool",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateCompatibilitiesClassActiveItemResponse": {
            "properties": {
                "merges": {
                    "description": "A list of all merges that will occur given this compatibility operation",
                    "items": {
                        "$ref": "#/definitions/CreateCompatibilitiesClassActiveItemResponseMerge",
                        "description": ""
                    },
                    "required": false,
                    "type": "array"
                },
                "message": {
                    "description": "A string describing the effects of the compatibility operation.",
                    "type": "string"
                },
                "splits": {
                    "description": "A list of all splits that will occur given this compatibility operation",
                    "items": {
                        "$ref": "#/definitions/CreateCompatibilitiesClassActiveItemResponseSplit",
                        "description": ""
                    },
                    "required": false,
                    "type": "array"
                }
            },
            "required": [
                "message"
            ],
            "type": "object"
        },
        "CreateCompatibilitiesClassActiveItemResponseMerge": {
            "properties": {
                "ids": {
                    "description": "The nodepool ids that will be merged",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "names": {
                    "description": "The nodepool names that will be merged, in the sameorder as the ids",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "result_name": {
                    "description": "The name of the nodepool all others will merge into",
                    "type": "string"
                }
            },
            "required": [
                "result_name",
                "ids",
                "names"
            ],
            "type": "object"
        },
        "CreateCompatibilitiesClassActiveItemResponseSplit": {
            "properties": {
                "id": {
                    "description": "The nodepool id that will be split",
                    "type": "integer"
                },
                "name": {
                    "description": "The nodepool name that will be split",
                    "type": "string"
                },
                "tier_name": {
                    "description": "A message explaining how the nodepools tier membership will change.",
                    "type": "string"
                }
            },
            "required": [
                "tier_name",
                "id",
                "name"
            ],
            "type": "object"
        },
        "CreateFilepoolPolicyResponse": {
            "properties": {
                "id": {
                    "description": "The name of the new policy",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateFooPeopleItemResponse": {
            "properties": {
                "id": {
                    "description": "ID of created item that can be used to refer to item in the collection-item resource path.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateHardeningApplyItemResponse": {
            "properties": {
                "message": {
                    "description": "Message text indicating if hardening apply operation started successfully or failed to start.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateHardeningResolveItemResponse": {
            "properties": {
                "message": {
                    "description": "Message text indicating if operation to resolve issues started successfully or failed to start.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateHardeningRevertItemResponse": {
            "properties": {
                "message": {
                    "description": "Message text indicating if hardening revert operation started successfully or failed or start.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CreateJobJobResponse": {
            "properties": {
                "id": {
                    "description": "The ID of the job.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateNfsAliaseResponse": {
            "description": "Return value from a successful create/modify",
            "properties": {
                "health": {
                    "description": "The health of the alias.",
                    "enum": [
                        "good",
                        "illegal file type",
                        "illegal path",
                        "name conflict",
                        "not exported",
                        "path not found",
                        "unknown"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "String representing the unique per-zone location of this alias",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateNfsNlmSessionsCheckItemResponse": {
            "properties": {
                "count": {
                    "description": "Number of lock-loss events detected",
                    "type": "integer"
                }
            },
            "required": [
                "count"
            ],
            "type": "object"
        },
        "CreateSnapshotAliaseResponse": {
            "properties": {
                "id": {
                    "description": "The ID of the newly created snapshot alias.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateSnapshotChangelistResponse": {
            "properties": {
                "job_id": {
                    "description": "The ID of the job which created the changelist.",
                    "type": "integer"
                },
                "num_entries": {
                    "description": "Number of LIN entries in changelist.",
                    "required": false,
                    "type": "integer"
                },
                "root_path": {
                    "description": "Root path of all LINs in changelist.",
                    "type": "string"
                },
                "snap1": {
                    "description": "The lower snapid used to compute the changelist.",
                    "type": "integer"
                },
                "snap2": {
                    "description": "The higher snapid used to compute the changelist.",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of changelist.",
                    "type": "string"
                }
            },
            "required": [
                "snap1",
                "status",
                "snap2",
                "job_id",
                "root_path"
            ],
            "type": "object"
        },
        "CreateSnapshotRepstateResponse": {
            "properties": {
                "snap1": {
                    "description": "The lower snapid used to compute the repstate.",
                    "type": "integer"
                },
                "snap2": {
                    "description": "The higher snapid used to compute the repstate.",
                    "type": "integer"
                }
            },
            "required": [
                "snap1",
                "snap2"
            ],
            "type": "object"
        },
        "CreateSnapshotScheduleResponse": {
            "properties": {
                "id": {
                    "description": "The ID of the newly created snapshot schedule.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateSnapshotSnapshotResponse": {
            "properties": {
                "alias": {
                    "description": "Alias name to create for this snapshot. If null, remove any alias.",
                    "type": "string"
                },
                "created": {
                    "description": "The Unix Epoch time the snapshot was created.",
                    "type": "integer"
                },
                "expires": {
                    "description": "The Unix Epoch time the snapshot will expire and be eligible for automatic deletion.",
                    "type": "integer"
                },
                "has_locks": {
                    "description": "True if the snapshot has one or more locks present see, see the locks subresource of a snapshot for a list of locks.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The system ID given to the snapshot. This is useful for tracking the status of delete pending snapshots.",
                    "type": "integer"
                },
                "name": {
                    "description": "The user or system supplied snapshot name. This will be null for snapshots pending delete.",
                    "type": "string"
                },
                "path": {
                    "description": "The /ifs path snapshotted.",
                    "type": "string"
                },
                "pct_filesystem": {
                    "description": "Percentage of /ifs used for storing this snapshot.",
                    "type": "number"
                },
                "pct_reserve": {
                    "description": "Percentage of configured snapshot reserved used for storing this snapshot.",
                    "type": "number"
                },
                "schedule": {
                    "description": "The name of the schedule used to create this snapshot, if applicable.",
                    "type": "string"
                },
                "shadow_bytes": {
                    "description": "The amount of shadow bytes referred to by this snapshot.",
                    "type": "integer"
                },
                "size": {
                    "description": "The amount of storage in bytes used to store this snapshot.",
                    "type": "integer"
                },
                "state": {
                    "description": "Snapshot state.",
                    "enum": [
                        "active",
                        "deleting"
                    ],
                    "type": "string"
                },
                "target_id": {
                    "description": "The ID of the snapshot pointed to if this is an alias.",
                    "type": "integer"
                },
                "target_name": {
                    "description": "The name of the snapshot pointed to if this is an alias.",
                    "type": "string"
                }
            },
            "required": [
                "pct_reserve",
                "shadow_bytes",
                "name",
                "created",
                "target_name",
                "expires",
                "target_id",
                "schedule",
                "alias",
                "state",
                "has_locks",
                "path",
                "pct_filesystem",
                "id",
                "size"
            ],
            "type": "object"
        },
        "CreateSnapshotsSidLockResponse": {
            "properties": {
                "id": {
                    "description": "The ID of the newly created snapshot lock.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateStoragepoolTierResponse": {
            "properties": {
                "id": {
                    "description": "The system ID of the new object.",
                    "type": "integer"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "CreateSyncReportsRotateItemResponse": {
            "description": "Force rotation of reports.",
            "properties": {
                "message": {
                    "description": "A message about the status of the task.",
                    "type": "string"
                }
            },
            "required": [
                "message"
            ],
            "type": "object"
        },
        "CreateWormDomainResponse": {
            "properties": {
                "autocommit_offset": {
                    "description": "The autocommit time period in seconds for the domain.  After a file exists in this domain without being modified for the specified time period, the file is automatically committed the next time the file is accessed.  If null, there is no autocommit time so files must be manually committed.",
                    "minimum": 0,
                    "type": "integer"
                },
                "default_retention": {
                    "description": "The default amount of time, in seconds, that a file in this domain will be protected for.  This default is applied to a file if it is committed to the domain before being assigned its own expiration date.  Value can also be null (expire right away), 'forever', 'use_min' (use the 'min_retention' value), or 'use_max' (use the 'max_retention' value).",
                    "minimum": 0,
                    "type": "integer"
                },
                "id": {
                    "description": "System-assigned ID of this protection domain.",
                    "type": "integer"
                },
                "incomplete": {
                    "description": "If true, OneFS is still in the process of creating this domain and it is not yet preventing files from being modified or deleted.  If false, the domain is fully created and operational.",
                    "type": "boolean"
                },
                "lin": {
                    "description": "Logical inode number (LIN) for the root of this domain.",
                    "type": "integer"
                },
                "max_modifies": {
                    "description": "Maximum number of times a WORM domain can be modified over its lifetime. This value is deprecated-- a WORM domain can be modified an unlimited number of times.",
                    "type": "integer"
                },
                "max_retention": {
                    "description": "The maximum amount of time, in seconds, that a file in this domain will be protected for.  This will override the retention period of any file committed with a longer retention period.  Value can also be null (allow an infinite length retention period).",
                    "minimum": 0,
                    "type": "integer"
                },
                "min_retention": {
                    "description": "The minimum amount of time, in seconds, that a file in this domain will be protected for.  This will override the retention period of any file committed with a shorter retention period.  Value can also be null (expire right away), or 'forever'.",
                    "minimum": 0,
                    "type": "integer"
                },
                "override_date": {
                    "description": "Override retention date for the domain.  If this date is later than any committed file's own retention date, that file will remain protected beyond its own retention date until this date.",
                    "minimum": 0,
                    "type": "integer"
                },
                "path": {
                    "description": "Root path of this domain.  Files in this directory and all sub-directories will be protected.",
                    "type": "string"
                },
                "privileged_delete": {
                    "description": "If 'on', files in this domain can be deleted using the privileged delete feature.  Otherwise, they can't be deleted even with privileged delete.  If 'disabled', privileged file deletes are permanently disabled and cannot be turned back on again.",
                    "enum": [
                        "on",
                        "off",
                        "disabled"
                    ],
                    "type": "string"
                },
                "total_modifies": {
                    "description": "This field is deprecated and will always be set to 0. Previously this field represented the number of times this domain has been modified (had its domain attributes changed) so far in order to indicate how close to the maximum number of allowed modifications a domain was. Currently domains may be modified an unlimited number of times.",
                    "type": "integer"
                },
                "type": {
                    "description": "Whether this is an enterprise domain or this is a compliance domain. Compliance domains may not be created on enterprise clusters. Enterprise and compliance domains may be created on compliance clusters.",
                    "enum": [
                        "enterprise",
                        "compliance"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "override_date",
                "lin",
                "max_modifies",
                "total_modifies",
                "autocommit_offset",
                "privileged_delete",
                "max_retention",
                "default_retention",
                "min_retention",
                "path",
                "type",
                "id",
                "incomplete"
            ],
            "type": "object"
        },
        "DebugStats": {
            "description": "Statistics for all the methods of all URIs in the Platform API.",
            "properties": {
                "DESCRIBE": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": "Per-method statistics."
                },
                "UNKNOWN": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": "Per-method statistics."
                },
                "handlers": {
                    "items": {
                        "$ref": "#/definitions/DebugStatsHandler",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DebugStatsHandler": {
            "properties": {
                "DELETE": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": "Per-method statistics."
                },
                "GET": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": "Per-method statistics."
                },
                "HEAD": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": "Per-method statistics."
                },
                "POST": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": "Per-method statistics."
                },
                "PUT": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": "Per-method statistics."
                },
                "UNSUPPORTED": {
                    "$ref": "#/definitions/DebugStatsUnknown",
                    "description": "Per-method statistics."
                },
                "name": {
                    "description": "The URI.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DebugStatsUnknown": {
            "properties": {
                "calls": {
                    "description": "The number of calls.",
                    "type": "integer"
                },
                "errors": {
                    "description": "The number of errors.",
                    "type": "integer"
                },
                "time": {
                    "description": "The total amount of time spent in this method.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DedupeDedupeSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/DedupeDedupeSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "DedupeDedupeSummarySummary": {
            "properties": {
                "block_size": {
                    "description": "Size in bytes of a filesystem block.",
                    "type": "number"
                },
                "estimated_physical_blocks": {
                    "description": "Estimated number of physical blocks deduped.",
                    "type": "number"
                },
                "estimated_saved_blocks": {
                    "description": "Estimated number of physical blocks saved by dedupe.",
                    "type": "number"
                },
                "logical_blocks": {
                    "description": "Number of logical blocks deduped.",
                    "type": "number"
                },
                "saved_logical_blocks": {
                    "description": "Number of logical blocks saved by dedupe.",
                    "type": "number"
                },
                "total_blocks": {
                    "description": "Total physical blocks in the cluster.",
                    "type": "number"
                },
                "used_blocks": {
                    "description": "Total physical blocks used in the cluster.",
                    "type": "number"
                }
            },
            "required": [
                "estimated_saved_blocks",
                "used_blocks",
                "estimated_physical_blocks",
                "saved_logical_blocks",
                "total_blocks",
                "logical_blocks",
                "block_size"
            ],
            "type": "object"
        },
        "DedupeReport": {
            "properties": {
                "phase": {
                    "description": "The phase of the job this report was generated for.",
                    "type": "integer"
                },
                "results": {
                    "description": "The report results.",
                    "type": "string"
                },
                "time": {
                    "description": "The time this report was generated in Unix epoch seconds.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DedupeReportExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/DedupeReport"
                },
                {
                    "properties": {
                        "dedupe_percent": {
                            "description": "The amount of space the directory trees under this job's paths now take up, compared to what they would take up if not deduplicated (0 ~ 100).",
                            "type": "string"
                        },
                        "elapsed_time": {
                            "description": "The amount of time in seconds it took to run this job.",
                            "type": "integer"
                        },
                        "id": {
                            "description": "An unique identifier for this report.",
                            "type": "integer"
                        },
                        "job_id": {
                            "description": "The job id this report refers to.",
                            "type": "integer"
                        },
                        "job_type": {
                            "description": "The type of dedupe job this report refers to.",
                            "type": "string"
                        },
                        "reports": {
                            "description": "A list of report entries for this dedupe job.",
                            "items": {
                                "$ref": "#/definitions/DedupeReport",
                                "description": ""
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "DedupeReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/DedupeReportExtended",
                        "description": "A report for a dedupe job."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DedupeReportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/DedupeReports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "DedupeSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/DedupeSettingsSettings",
                    "description": "Dedupe settings."
                }
            },
            "type": "object"
        },
        "DedupeSettingsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/DedupeSettings"
                },
                {
                    "description": "Dedupe settings.",
                    "properties": {
                        "assess_paths": {
                            "description": "The paths that will be assessed.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "paths": {
                            "description": "The paths that will be deduped.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "DedupeSettingsSettings": {
            "properties": {
                "assess_paths": {
                    "description": "The paths that will be assessed.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dedupe_schedule": {
                    "description": "The schedule for the dedupe job.",
                    "type": "string"
                },
                "paths": {
                    "description": "The paths that will be deduped.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Empty": {
            "properties": {},
            "type": "object"
        },
        "Error": {
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "type": "object"
        },
        "EventAlertCondition": {
            "description": "Specifies under what conditions and over which channel an alert should be sent",
            "properties": {
                "categories": {
                    "description": "Event Group categories to be alerted",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "channel_ids": {
                    "description": "Channels for alert",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "condition": {
                    "description": "Trigger condition for alert",
                    "enum": [
                        "NEW",
                        "NEW EVENTS",
                        "ONGOING",
                        "SEVERITY INCREASE",
                        "SEVERITY DECREASE",
                        "RESOLVED"
                    ],
                    "type": "string"
                },
                "eventgroup_ids": {
                    "description": "Event Group IDs to be alerted",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "interval": {
                    "description": "Required with ONGOING condition only, period in seconds between alerts of ongoing conditions",
                    "type": "integer"
                },
                "limit": {
                    "description": "Required with NEW EVENTS condition only, limits the number of alerts sent as events are added",
                    "type": "integer"
                },
                "name": {
                    "description": "Unique identifier.",
                    "type": "string"
                },
                "transient": {
                    "description": "Any eventgroup lasting less than this many seconds is deemed transient and will not generate alerts under this condition.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "EventAlertConditions": {
            "properties": {
                "alert-conditions": {
                    "items": {
                        "$ref": "#/definitions/EventAlertConditionsAlert-Condition",
                        "description": "Specifies under what conditions and over which channel an alert should be sent"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EventAlertConditionsAlert-Condition": {
            "properties": {
                "categories": {
                    "description": "Event Group categories to be alerted",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "channel_ids": {
                    "description": "Channels for alert",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "condition": {
                    "description": "Trigger condition for alert",
                    "enum": [
                        "NEW",
                        "NEW EVENTS",
                        "ONGOING",
                        "SEVERITY INCREASE",
                        "SEVERITY DECREASE",
                        "RESOLVED"
                    ],
                    "type": "string"
                },
                "eventgroup_ids": {
                    "description": "Event Group IDs to be alerted",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Unique identifier.",
                    "type": "string"
                },
                "interval": {
                    "description": "Required with ONGOING condition only, period in seconds between alerts of ongoing conditions",
                    "type": "integer"
                },
                "limit": {
                    "description": "Required with NEW EVENTS condition only, limits the number of alerts sent as events are added",
                    "type": "integer"
                },
                "name": {
                    "description": "Unique identifier.",
                    "type": "string"
                },
                "transient": {
                    "description": "Any eventgroup lasting less than this many seconds is deemed transient and will not generate alerts under this condition.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "EventAlertConditionsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventAlertConditions"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "EventCategories": {
            "properties": {
                "categories": {
                    "items": {
                        "$ref": "#/definitions/EventCategory",
                        "description": "High level categorisation of eventgroups"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EventCategoriesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventCategories"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "EventCategory": {
            "properties": {
                "category_description": {
                    "description": "Description of category.",
                    "type": "string"
                },
                "category_name": {
                    "description": "Name of category.",
                    "type": "string"
                },
                "id": {
                    "description": "Numeric identifier of eventgroup category.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "EventChannel": {
            "description": "Named channel through which alerts can be delivered.",
            "properties": {
                "allowed_nodes": {
                    "description": "Nodes that can be masters for this channel",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "enabled": {
                    "description": "Channel is to be used or not",
                    "type": "boolean"
                },
                "excluded_nodes": {
                    "description": "Nodes that can be masters for this channel",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "parameters": {
                    "$ref": "#/definitions/EventChannelParameters",
                    "description": "Parameters to be used for an smtp channel"
                },
                "system": {
                    "description": "Channel is a pre-defined system channel",
                    "type": "boolean"
                },
                "type": {
                    "description": "The mechanism used by the channel",
                    "enum": [
                        "connectemc",
                        "smtp",
                        "snmp"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventChannelParameters": {
            "properties": {
                "address": {
                    "description": "Email addresses to send to.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "batch": {
                    "description": "Batching criterion.",
                    "enum": [
                        "NONE",
                        "ALL",
                        "CATEGORY",
                        "SEVERITY"
                    ],
                    "type": "string"
                },
                "batch_period": {
                    "description": "Period over which batching is to be performed.",
                    "type": "integer"
                },
                "custom_template": {
                    "description": "Path to custom notification template.",
                    "type": "string"
                },
                "send_as": {
                    "description": "Email address to use as from.",
                    "type": "string"
                },
                "smtp_host": {
                    "description": "SMTP relay host.",
                    "type": "string"
                },
                "smtp_password": {
                    "description": "Password for SMTP authentication - only if smtp_use_auth true.",
                    "type": "string"
                },
                "smtp_port": {
                    "description": "SMTP relay port - optional defaults to 25.",
                    "type": "integer"
                },
                "smtp_security": {
                    "description": "Encryption protocol to use for SMTP.",
                    "enum": [
                        "NONE",
                        "STARTTLS"
                    ],
                    "type": "string"
                },
                "smtp_use_auth": {
                    "description": "Use SMTP authentication - optional defaulst to false.",
                    "type": "boolean"
                },
                "smtp_username": {
                    "description": "Username for SMTP authentication - only if smtp_use_auth true.",
                    "type": "string"
                },
                "subject": {
                    "description": "Subject for emails.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventChannels": {
            "properties": {
                "alert-conditions": {
                    "items": {
                        "$ref": "#/definitions/EventChannelsAlert-Condition",
                        "description": "Named channel through which alerts can be delivered."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EventChannelsAlert-Condition": {
            "properties": {
                "allowed_nodes": {
                    "description": "Nodes that can be masters for this channel",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "enabled": {
                    "description": "Channel is to be used or not",
                    "type": "boolean"
                },
                "excluded_nodes": {
                    "description": "Nodes that can be masters for this channel",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Unique identifier.",
                    "type": "integer"
                },
                "name": {
                    "description": "Channel name,  may not contain /, max length 254.",
                    "type": "string"
                },
                "parameters": {
                    "$ref": "#/definitions/EventChannelParameters",
                    "description": "Parameters to be used for an smtp channel"
                },
                "system": {
                    "description": "Channel is a pre-defined system channel",
                    "type": "boolean"
                },
                "type": {
                    "description": "The mechanism used by the channel",
                    "enum": [
                        "connectemc",
                        "smtp",
                        "snmp"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventChannelsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventChannels"
                },
                {
                    "properties": {
                        "channels": {
                            "items": {
                                "$ref": "#/definitions/EventChannelsAlert-Condition",
                                "description": "Named channel through which alerts can be delivered."
                            },
                            "type": "array"
                        },
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "EventEvent": {
            "description": "Test Event Specifier",
            "properties": {
                "message": {
                    "description": "Message for test event",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventEventgroupDefinitions": {
            "properties": {
                "eventgroup-definitions": {
                    "items": {
                        "$ref": "#/definitions/EventEventgroupDefinitionsEventgroup-Definition",
                        "description": "Description of a eventgroup that can occur and be detected."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "EventEventgroupDefinitionsEventgroup-Definition": {
            "properties": {
                "category": {
                    "description": "ID of eventgroup category.",
                    "type": "integer"
                },
                "description": {
                    "description": "Human readable description - may contain value placeholders.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique Identifier.",
                    "type": "string"
                },
                "name": {
                    "description": "Name for eventgroup.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "EventEventgroupDefinitionsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/EventEventgroupDefinitions"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "EventEventgroupOccurrence": {
            "description": "Ignore flag for eventgroup.",
            "properties": {
                "ignore": {
                    "description": "True if eventgroup is to be ignored",
                    "type": "boolean"
                },
                "resolved": {
                    "description": "True if eventgroup is to be resolved",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "EventSettings": {
            "description": "Settings for CELOG system",
            "properties": {
                "heartbeat_interval": {
                    "description": "Interval between heartbeat events. \"daily\", \"weekly\", or \"monthly\".",
                    "type": "string"
                },
                "maintenance": {
                    "$ref": "#/definitions/EventSettingsMaintenance",
                    "description": "Specifies start and duration of maintenance period during which no alerts will be sent for new eventgroups."
                },
                "retention_days": {
                    "description": "Retention period in days",
                    "type": "integer"
                },
                "storage_limit": {
                    "description": "Storage limit in megabytes per terabyte of available storage",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "EventSettingsMaintenance": {
            "properties": {
                "duration": {
                    "description": "Duration of maintenance period in seconds.",
                    "type": "integer"
                },
                "start": {
                    "description": "Start of maintenance period.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FileFilterSettings": {
            "properties": {
                "file_filter_extensions": {
                    "description": "List of file extensions to be filtered.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "file_filter_type": {
                    "description": "Specifies if filter list is for deny or allow. Default is deny.",
                    "enum": [
                        "deny",
                        "allow"
                    ],
                    "type": "string"
                },
                "file_filtering_enabled": {
                    "description": "Indicates whether file filtering is enabled on this zone.",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "FilepoolDefaultPolicy": {
            "description": "A default filepool policy object",
            "properties": {
                "default-policy": {
                    "$ref": "#/definitions/FilepoolDefaultPolicyDefault-Policy",
                    "description": "A default filepool policy object"
                }
            },
            "type": "object"
        },
        "FilepoolDefaultPolicyDefault-Policy": {
            "properties": {
                "actions": {
                    "description": "A list of actions to be taken for matching files",
                    "items": {
                        "$ref": "#/definitions/FilepoolDefaultPolicyDefault-PolicyAction",
                        "description": "An action to apply to a file matching the policy"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FilepoolDefaultPolicyDefault-PolicyAction": {
            "properties": {
                "action_param": {
                    "description": "Varies according to action_type",
                    "type": "string"
                },
                "action_type": {
                    "enum": [
                        "set_requested_protection",
                        "set_data_access_pattern",
                        "enable_coalescer",
                        "apply_data_storage_policy",
                        "apply_snapshot_storage_policy",
                        "set_cloudpool_policy"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "action_param",
                "action_type"
            ],
            "type": "object"
        },
        "FilepoolDefaultPolicyExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/FilepoolDefaultPolicy"
                },
                {
                    "properties": {
                        "actions": {
                            "items": {
                                "$ref": "#/definitions/FilepoolDefaultPolicyDefault-PolicyAction",
                                "description": "An action to apply to a file matching the policy"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "FilepoolPolicies": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyExtended",
                        "description": "A filepool policy object"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FilepoolPolicy": {
            "description": "A filepool policy object",
            "properties": {
                "actions": {
                    "description": "A list of actions to be taken for matching files",
                    "items": {
                        "$ref": "#/definitions/FilepoolDefaultPolicyDefault-PolicyAction",
                        "description": "An action to apply to a file matching the policy"
                    },
                    "type": "array"
                },
                "apply_order": {
                    "description": "The order in which this policy should be applied (relative to other policies)",
                    "type": "integer"
                },
                "description": {
                    "description": "A description for this policy",
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/FilepoolPolicyFileMatchingPattern",
                    "description": "The file matching rules for this policy"
                },
                "name": {
                    "description": "A unique name for this policy",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FilepoolPolicyExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/FilepoolPolicy"
                },
                {
                    "properties": {
                        "birth_cluster_id": {
                            "description": "The guid assigned to the cluster on which the account was created",
                            "type": "string"
                        },
                        "id": {
                            "description": "A unique identifier for this policy",
                            "type": "integer"
                        },
                        "state": {
                            "description": "Indicates whether this policy is in a good state (\"OK\") or disabled (\"disabled\")",
                            "enum": [
                                "OK",
                                "disabled"
                            ],
                            "type": "string"
                        },
                        "state_details": {
                            "description": "Gives further information to describe the state of this policy",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "FilepoolPolicyFileMatchingPattern": {
            "properties": {
                "or_criteria": {
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyFileMatchingPatternOrCriteriaItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "or_criteria"
            ],
            "type": "object"
        },
        "FilepoolPolicyFileMatchingPatternOrCriteriaItem": {
            "properties": {
                "and_criteria": {
                    "items": {
                        "$ref": "#/definitions/FilepoolPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "and_criteria"
            ],
            "type": "object"
        },
        "FilepoolPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem": {
            "properties": {
                "attribute_exists": {
                    "description": "Indicates whether the existence of an attribute indicates a match (valid only with 'type' = 'custom_attribute')",
                    "type": "boolean"
                },
                "begins_with": {
                    "description": "True to match files recursively under the given path. (valid only with 'type' = 'path')",
                    "type": "boolean"
                },
                "case_sensitive": {
                    "description": "True to indicate case sensitivity when comparing file attributes (valid only with 'type' = 'name' or 'type' = 'path')",
                    "type": "boolean"
                },
                "field": {
                    "description": "File attribute field name to be compared in a custom comparison (valid only with 'type' = 'custom_attribute')",
                    "type": "string"
                },
                "operator": {
                    "description": "The comparison operator to use while comparing an attribute with its value",
                    "enum": [
                        "==",
                        "!=",
                        ">",
                        ">=",
                        "<",
                        "<=",
                        "!"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The file attribute to be compared to a given value",
                    "enum": [
                        "name",
                        "path",
                        "link_count",
                        "accessed_time",
                        "birth_time",
                        "changed_time",
                        "metadata_changed_time",
                        "size",
                        "file_type",
                        "custom_attribute"
                    ],
                    "type": "string"
                },
                "units": {
                    "description": "Size unit value. One of 'B','KB','MB','GB','TB','PB','EB' (valid only with 'type' = 'size')",
                    "type": "string"
                },
                "use_relative_time": {
                    "description": "Whether time units refer to a calendar date and time (e.g., Jun 3, 2009) or a relative duration (e.g., 2 weeks) (valid only with 'type' in {accessed_time, birth_time, changed_time or metadata_changed_time}",
                    "type": "boolean"
                },
                "value": {
                    "description": "The value to be compared against a file attribute",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "FilepoolTemplate": {
            "properties": {
                "actions": {
                    "description": "A list of actions to be taken for matching files",
                    "items": {
                        "$ref": "#/definitions/FilepoolDefaultPolicyDefault-PolicyAction",
                        "description": "An action to apply to a file matching the policy"
                    },
                    "type": "array"
                },
                "apply_order": {
                    "description": "The order in which this policy should be applied (relative to other policies)",
                    "type": "integer"
                },
                "birth_cluster_id": {
                    "description": "The guid assigned to the cluster on which the account was created",
                    "type": "string"
                },
                "description": {
                    "description": "A description for this policy",
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/FilepoolPolicyFileMatchingPattern",
                    "description": "The file matching rules for this policy"
                },
                "id": {
                    "description": "A unique identifier for this policy",
                    "type": "integer"
                },
                "name": {
                    "description": "A unique name for this policy",
                    "type": "string"
                },
                "state": {
                    "description": "Indicates whether this policy is in a good state (\"OK\") or disabled (\"disabled\")",
                    "enum": [
                        "OK",
                        "disabled"
                    ],
                    "type": "string"
                },
                "state_details": {
                    "description": "Gives further information to describe the state of this policy",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FilepoolTemplates": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "templates": {
                    "items": {
                        "$ref": "#/definitions/FilepoolTemplate",
                        "description": "A filepool policy object"
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "FooPeople": {
            "properties": {
                "people": {
                    "items": {
                        "$ref": "#/definitions/FooPeoplePeopleItem",
                        "description": "This is an example schema that contains information on employees."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FooPeopleExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/FooPeople"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "FooPeopleIdParams": {
            "description": "This is an example schema that contains information on employees.",
            "properties": {
                "active": {
                    "description": "Whether the employee is actively employed.",
                    "type": "boolean"
                },
                "date_of_birth": {
                    "description": "The employee's date of birth.",
                    "type": "string"
                },
                "departments": {
                    "description": "The departments the employee works in.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "first_name": {
                    "description": "The employee's first name.",
                    "type": "string"
                },
                "hire_date": {
                    "description": "The date the employee was hired.",
                    "type": "integer"
                },
                "hourly_wage": {
                    "description": "The employee's hourly wage, if applicable.",
                    "type": "number"
                },
                "last_name": {
                    "description": "The employee's last name.",
                    "type": "string"
                },
                "pay_type": {
                    "description": "This field signifies whether the employee is paid hourly or paid a salary.",
                    "enum": [
                        "hourly",
                        "salary"
                    ],
                    "type": "string"
                },
                "salary": {
                    "description": "The employee's salary, if applicable.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "FooPeoplePeopleItem": {
            "properties": {
                "active": {
                    "description": "Whether the employee is actively employed.",
                    "type": "boolean"
                },
                "date_of_birth": {
                    "description": "The employee's date of birth.",
                    "type": "string"
                },
                "departments": {
                    "description": "The departments the employee works in.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "first_name": {
                    "description": "The employee's first name.",
                    "type": "string"
                },
                "hire_date": {
                    "description": "The date the employee was hired.",
                    "type": "integer"
                },
                "hourly_wage": {
                    "description": "The employee's hourly wage, if applicable.",
                    "type": "number"
                },
                "id": {
                    "description": "The employee ID.",
                    "type": "integer"
                },
                "last_name": {
                    "description": "The employee's last name.",
                    "type": "string"
                },
                "pay_type": {
                    "description": "This field signifies whether the employee is paid hourly or paid a salary.",
                    "enum": [
                        "hourly",
                        "salary"
                    ],
                    "type": "string"
                },
                "salary": {
                    "description": "The employee's salary, if applicable.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "FsaResult": {
            "properties": {
                "pinned": {
                    "description": "True if the result is pinned to prevent automatic removal.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "FsaResultExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/FsaResult"
                },
                {
                    "properties": {
                        "begin_time": {
                            "description": "Unix Epoch time of start of results collection job.",
                            "type": "integer"
                        },
                        "content_path": {
                            "description": "Path to results database.",
                            "type": "string"
                        },
                        "delete_link": {
                            "description": "Resource to call with DELETE to remove results..",
                            "type": "string"
                        },
                        "end_time": {
                            "description": "Unix Epoch time of end of results collection job.",
                            "type": "integer"
                        },
                        "fsa_state": {
                            "description": "State of the result set.",
                            "enum": [
                                "unknown",
                                "work",
                                "reduce",
                                "publish"
                            ],
                            "type": "string"
                        },
                        "id": {
                            "description": "The system generated result set ID.",
                            "type": "integer"
                        },
                        "job_state": {
                            "description": "State information about the FSA Job.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "properties_link": {
                            "description": "Resource to call to get result properties.",
                            "type": "string"
                        },
                        "version": {
                            "description": "FSA version used to create result set.",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "properties_link",
                        "job_state",
                        "content_path",
                        "fsa_state",
                        "delete_link",
                        "pinned",
                        "version",
                        "end_time",
                        "begin_time",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "FsaResults": {
            "properties": {
                "results": {
                    "items": {
                        "$ref": "#/definitions/FsaResultExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FsaResultsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/FsaResults"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "FsaSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/FsaSettingsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "FsaSettingsSettings": {
            "properties": {
                "default_template": {
                    "description": "Name of question template to use for new FSA jobs.",
                    "type": "string"
                },
                "disk_usage_depth": {
                    "description": "Maximum directory depth used for disk_usage question if not specified in the question.",
                    "type": "integer"
                },
                "max_age": {
                    "description": "Maximum age of non-pinned results in seconds.",
                    "type": "integer"
                },
                "max_count": {
                    "description": "Maximum number of non-pinned result sets to keep.",
                    "type": "integer"
                },
                "squash_depth": {
                    "description": "Squash depth to use for squash binning questions if not specified in the question.",
                    "type": "integer"
                },
                "top_n_max": {
                    "description": "Maximum number of items in a Top-N question result if not specified in the question.",
                    "type": "integer"
                },
                "use_snapshot": {
                    "description": "If true, use a snapshot for consistency, otherwise analyze head.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "FtpSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/FtpSettingsSettings",
                    "description": "FTP settings."
                }
            },
            "type": "object"
        },
        "FtpSettingsSettings": {
            "properties": {
                "accept_timeout": {
                    "description": "The timeout, in seconds, for a remote client to establish a PASV style data connection.",
                    "maximum": 600,
                    "minimum": 30,
                    "type": "integer"
                },
                "allow_anon_access": {
                    "description": "Controls whether anonymous logins are permitted or not.",
                    "type": "boolean"
                },
                "allow_anon_upload": {
                    "description": "Controls whether anonymous users will be permitted to upload files.",
                    "type": "boolean"
                },
                "allow_dirlists": {
                    "description": "If set to false, all directory list commands will return a permission denied error.",
                    "type": "boolean"
                },
                "allow_downloads": {
                    "description": "If set to false, all downloads requests will return a permission denied error.",
                    "type": "boolean"
                },
                "allow_local_access": {
                    "description": "Controls whether local logins are permitted or not.",
                    "type": "boolean"
                },
                "allow_writes": {
                    "description": "This controls whether any FTP commands which change the filesystem are allowed or not.",
                    "type": "boolean"
                },
                "always_chdir_homedir": {
                    "description": "This controls whether FTP will always initially change directories to the home directory of the user, regardless of whether it is chroot-ing.",
                    "type": "boolean"
                },
                "anon_chown_username": {
                    "description": "This is the name of the user who is given ownership of anonymously uploaded files.",
                    "type": "string"
                },
                "anon_password_list": {
                    "description": "A list of passwords for anonymous users.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "anon_root_path": {
                    "description": "This option represents a directory in /ifs which vsftpd will try to change into after an anonymous login.",
                    "type": "string"
                },
                "anon_umask": {
                    "description": "The value that the umask for file creation is set to for anonymous users.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "ascii_mode": {
                    "description": "Controls whether ascii mode data transfers are honored for various types of requests.",
                    "enum": [
                        "off",
                        "upload",
                        "download",
                        "both"
                    ],
                    "type": "string"
                },
                "chroot_exception_list": {
                    "description": "A list of users that are not chrooted when logging in.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "chroot_local_mode": {
                    "description": "If set to 'all', all local users will be (by default) placed in a chroot() jail in their home directory after login. If set to 'all-with-exceptions', all local users except those listed in the chroot exception list (isi ftp chroot-exception-list) will be placed in a chroot() jail in their home directory after login. If set to 'none', no local users will be chrooted by default. If set to 'none-with-exceptions', only the local users listed in the chroot exception list (isi ftp chroot-exception-list) will be place in a chroot() jail in their home directory after login.",
                    "enum": [
                        "all",
                        "none",
                        "all-with-exceptions",
                        "none-with-exceptions"
                    ],
                    "type": "string"
                },
                "connect_timeout": {
                    "description": "The timeout, in seconds, for a remote client to respond to our PORT style data connection.",
                    "maximum": 600,
                    "minimum": 30,
                    "type": "integer"
                },
                "data_timeout": {
                    "description": "The timeout, in seconds, which is roughly the maximum time we permit data transfers to stall for with no progress. If the timeout triggers, the remote client is kicked off.",
                    "maximum": 600,
                    "minimum": 30,
                    "type": "integer"
                },
                "denied_user_list": {
                    "description": "A list of uses that will be denied access.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "dirlist_localtime": {
                    "description": "If enabled, display directory listings with the time in your local time zone. The default is to display GMT. The times returned by the MDTM FTP command are also affected by this option.",
                    "type": "boolean"
                },
                "dirlist_names": {
                    "description": "When set to 'hide',  all user and group information in directory listings will be displayed as 'ftp'. When set to 'textual', textual names are shown in the user and group fields of directory listings. When set to 'numeric', numeric IDs are show in the user and group fields of directory listings.",
                    "enum": [
                        "numeric",
                        "textual",
                        "hide"
                    ],
                    "type": "string"
                },
                "file_create_perm": {
                    "description": "The permissions with which uploaded files are created. Umasks are applied on top of this value.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "limit_anon_passwords": {
                    "description": "This field determines whether the anon_password_list is used.",
                    "type": "boolean"
                },
                "local_root_path": {
                    "description": "This option represents a directory in /ifs which vsftpd will try to change into after a local login.",
                    "type": "string"
                },
                "local_umask": {
                    "description": "The value that the umask for file creation is set to for local users.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "server_to_server": {
                    "description": "If enabled, allow server-to-server (FXP) transfers.",
                    "type": "boolean"
                },
                "service": {
                    "description": "This field controls whether the FTP daemon is running.",
                    "type": "boolean"
                },
                "session_support": {
                    "description": "If enabled, maintain login sessions for each user through Pluggable Authentication Modules (PAM). Disabling this option prevents the ability to do automatic home directory creation if that functionality were otherwise available.",
                    "type": "boolean"
                },
                "session_timeout": {
                    "description": "The timeout, in seconds, which is roughly the maximum time we permit data transfers to stall for with no progress. If the timeout triggers, the remote client is kicked off.",
                    "maximum": 600,
                    "minimum": 30,
                    "type": "integer"
                },
                "user_config_dir": {
                    "description": "Specifies the directory where per-user config overrides can be found.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnet": {
            "properties": {
                "description": {
                    "description": "A description of the subnet.",
                    "maxLength": 128,
                    "type": "string"
                },
                "dsr_addrs": {
                    "description": "List of Direct Server Return addresses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gateway": {
                    "description": "Gateway IP address.",
                    "type": "string"
                },
                "gateway_priority": {
                    "description": "Gateway priority.",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "mtu": {
                    "description": "MTU of the subnet.",
                    "maximum": 9000,
                    "minimum": 576,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the subnet.",
                    "maxLength": 32,
                    "type": "string"
                },
                "prefixlen": {
                    "description": "Subnet Prefix Length.",
                    "maximum": 128,
                    "minimum": 1,
                    "type": "integer"
                },
                "sc_service_addr": {
                    "description": "The address that SmartConnect listens for DNS requests.",
                    "type": "string"
                },
                "vlan_enabled": {
                    "description": "VLAN tagging enabled or disabled.",
                    "type": "boolean"
                },
                "vlan_id": {
                    "description": "VLAN ID for all interfaces in the subnet.",
                    "maximum": 4094,
                    "minimum": 2,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/GroupnetsGroupnetSubnet"
                },
                {
                    "properties": {
                        "addr_family": {
                            "description": "IP address format.",
                            "enum": [
                                "ipv4",
                                "ipv6"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "addr_family",
                        "prefixlen",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "GroupnetsGroupnetSubnets": {
            "properties": {
                "subnets": {
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnet",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/GroupnetsGroupnetSubnets"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "GroupnetsGroupnetSubnetsSubnet": {
            "properties": {
                "addr_family": {
                    "description": "IP address format.",
                    "enum": [
                        "ipv4",
                        "ipv6"
                    ],
                    "type": "string"
                },
                "base_addr": {
                    "description": "The base IP address.",
                    "type": "string"
                },
                "description": {
                    "description": "A description of the subnet.",
                    "maxLength": 128,
                    "type": "string"
                },
                "dsr_addrs": {
                    "description": "List of Direct Server Return addresses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gateway": {
                    "description": "Gateway IP address.",
                    "type": "string"
                },
                "gateway_priority": {
                    "description": "Gateway priority.",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer"
                },
                "groupnet": {
                    "description": "Name of the groupnet this subnet belongs to.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique Subnet ID.",
                    "type": "string"
                },
                "mtu": {
                    "description": "MTU of the subnet.",
                    "maximum": 9000,
                    "minimum": 576,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the subnet.",
                    "maxLength": 32,
                    "type": "string"
                },
                "pools": {
                    "description": "Name of the pools in the subnet.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "prefixlen": {
                    "description": "Subnet Prefix Length.",
                    "maximum": 128,
                    "minimum": 1,
                    "type": "integer"
                },
                "sc_service_addr": {
                    "description": "The address that SmartConnect listens for DNS requests.",
                    "type": "string"
                },
                "vlan_enabled": {
                    "description": "VLAN tagging enabled or disabled.",
                    "type": "boolean"
                },
                "vlan_id": {
                    "description": "VLAN ID for all interfaces in the subnet.",
                    "maximum": 4094,
                    "minimum": 2,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPool": {
            "properties": {
                "access_zone": {
                    "description": "Name of a valid access zone to map IP address pool to the zone.",
                    "minLength": 1,
                    "type": "string"
                },
                "aggregation_mode": {
                    "description": "OneFS supports the following NIC aggregation modes.",
                    "enum": [
                        "roundrobin",
                        "failover",
                        "lacp",
                        "fec"
                    ],
                    "type": "string"
                },
                "alloc_method": {
                    "description": "Specifies how IP address allocation is done among pool members.",
                    "enum": [
                        "dynamic",
                        "static"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "A description of the pool.",
                    "maxLength": 128,
                    "type": "string"
                },
                "ifaces": {
                    "description": "List of interface members in this pool.",
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolIface",
                        "description": ""
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the pool. It must be unique throughout the given subnet.It's a required field with POST method.",
                    "maxLength": 32,
                    "type": "string"
                },
                "ranges": {
                    "description": "List of IP address ranges in this pool.",
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolRange",
                        "description": ""
                    },
                    "type": "array"
                },
                "rebalance_policy": {
                    "description": "Rebalance policy..",
                    "enum": [
                        "auto",
                        "manual"
                    ],
                    "type": "string"
                },
                "sc_auto_unsuspend_delay": {
                    "description": "Time delay in seconds before a node which has been                 automatically unsuspended becomes usable in SmartConnect                responses for pool zones.",
                    "maximum": 86400,
                    "minimum": 0,
                    "type": "integer"
                },
                "sc_connect_policy": {
                    "description": "SmartConnect client connection balancing policy.",
                    "enum": [
                        "round_robin",
                        "conn_count",
                        "throughput",
                        "cpu_usage"
                    ],
                    "type": "string"
                },
                "sc_dns_zone": {
                    "description": "SmartConnect zone name for the pool.",
                    "type": "string"
                },
                "sc_dns_zone_aliases": {
                    "description": "List of SmartConnect zone aliases (DNS names) to the pool.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sc_failover_policy": {
                    "description": "SmartConnect IP failover policy.",
                    "enum": [
                        "round_robin",
                        "conn_count",
                        "throughput",
                        "cpu_usage"
                    ],
                    "type": "string"
                },
                "sc_subnet": {
                    "description": "Name of SmartConnect service subnet for this pool.",
                    "type": "string"
                },
                "sc_ttl": {
                    "description": "Time to live value for SmartConnect DNS query responses in seconds.",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "static_routes": {
                    "description": "List of interface members in this pool.",
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolStaticRoute",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolIface": {
            "properties": {
                "iface": {
                    "description": "A string that defines an interface name.",
                    "type": "string"
                },
                "lnn": {
                    "description": "Logical Node Number.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolRange": {
            "properties": {
                "high": {
                    "description": "High IP",
                    "type": "string"
                },
                "low": {
                    "description": "Low IP",
                    "type": "string"
                }
            },
            "required": [
                "high",
                "low"
            ],
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolStaticRoute": {
            "properties": {
                "gateway": {
                    "description": "Address of the gateway in the format: yyy.yyy.yyy.yyy",
                    "type": "string"
                },
                "prefixlen": {
                    "description": "Prefix length in the format: nn.",
                    "type": "integer"
                },
                "subnet": {
                    "description": "Network address in the format: xxx.xxx.xxx.xxx",
                    "type": "string"
                }
            },
            "required": [
                "prefixlen",
                "subnet",
                "gateway"
            ],
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPools": {
            "properties": {
                "pools": {
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPool",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPools"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPool": {
            "properties": {
                "access_zone": {
                    "description": "Name of a valid access zone to map IP address pool to the zone.",
                    "minLength": 1,
                    "type": "string"
                },
                "addr_family": {
                    "description": "IP address format.",
                    "enum": [
                        "ipv4",
                        "ipv6"
                    ],
                    "type": "string"
                },
                "aggregation_mode": {
                    "description": "OneFS supports the following NIC aggregation modes.",
                    "enum": [
                        "roundrobin",
                        "failover",
                        "lacp",
                        "fec"
                    ],
                    "type": "string"
                },
                "alloc_method": {
                    "description": "Specifies how IP address allocation is done among pool members.",
                    "enum": [
                        "dynamic",
                        "static"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "A description of the pool.",
                    "maxLength": 128,
                    "type": "string"
                },
                "groupnet": {
                    "description": "Name of the groupnet this pool belongs to.",
                    "type": "string"
                },
                "id": {
                    "description": "Unique Pool ID.",
                    "type": "string"
                },
                "ifaces": {
                    "description": "List of interface members in this pool.",
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolIface",
                        "description": ""
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the pool. It must be unique throughout the given subnet.It's a required field with POST method.",
                    "maxLength": 32,
                    "type": "string"
                },
                "ranges": {
                    "description": "List of IP address ranges in this pool.",
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolRange",
                        "description": ""
                    },
                    "type": "array"
                },
                "rebalance_policy": {
                    "description": "Rebalance policy..",
                    "enum": [
                        "auto",
                        "manual"
                    ],
                    "type": "string"
                },
                "rules": {
                    "description": "Names of the rules in this pool.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sc_auto_unsuspend_delay": {
                    "description": "Time delay in seconds before a node which has been                 automatically unsuspended becomes usable in SmartConnect                responses for pool zones.",
                    "maximum": 86400,
                    "minimum": 0,
                    "type": "integer"
                },
                "sc_connect_policy": {
                    "description": "SmartConnect client connection balancing policy.",
                    "enum": [
                        "round_robin",
                        "conn_count",
                        "throughput",
                        "cpu_usage"
                    ],
                    "type": "string"
                },
                "sc_dns_zone": {
                    "description": "SmartConnect zone name for the pool.",
                    "type": "string"
                },
                "sc_dns_zone_aliases": {
                    "description": "List of SmartConnect zone aliases (DNS names) to the pool.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sc_failover_policy": {
                    "description": "SmartConnect IP failover policy.",
                    "enum": [
                        "round_robin",
                        "conn_count",
                        "throughput",
                        "cpu_usage"
                    ],
                    "type": "string"
                },
                "sc_subnet": {
                    "description": "Name of SmartConnect service subnet for this pool.",
                    "type": "string"
                },
                "sc_suspended_nodes": {
                    "description": "List of LNNs showing currently suspended nodes in SmartConnect.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "sc_ttl": {
                    "description": "Time to live value for SmartConnect DNS query responses in seconds.",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "static_routes": {
                    "description": "List of interface members in this pool.",
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolStaticRoute",
                        "description": ""
                    },
                    "type": "array"
                },
                "subnet": {
                    "description": "The name of the subnet.",
                    "type": "string"
                }
            },
            "required": [
                "ifaces",
                "aggregation_mode",
                "sc_failover_policy",
                "sc_subnet",
                "sc_suspended_nodes",
                "id",
                "subnet",
                "rebalance_policy",
                "sc_connect_policy",
                "groupnet",
                "description",
                "rules",
                "access_zone",
                "alloc_method",
                "ranges",
                "sc_dns_zone_aliases",
                "sc_dns_zone",
                "name",
                "static_routes",
                "sc_ttl",
                "addr_family",
                "sc_auto_unsuspend_delay"
            ],
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPoolInterfaces": {
            "properties": {
                "interface": {
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolInterfacesInterfaceItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPoolInterfacesInterfaceItem": {
            "properties": {
                "id": {
                    "description": "Unique interface ID.",
                    "type": "string"
                },
                "ip_addrs": {
                    "description": "List of IP addresses",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lnn": {
                    "description": "Logical Node Number",
                    "minimum": 1,
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the interface.",
                    "type": "string"
                },
                "nic_name": {
                    "description": "NIC name",
                    "type": "string"
                },
                "owners": {
                    "description": "List of owners (membership)",
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolInterfacesInterfaceItemOwner",
                        "description": ""
                    },
                    "type": "array"
                },
                "status": {
                    "description": "Status of the interface",
                    "enum": [
                        "up",
                        "no_carrier",
                        "active",
                        "inactive"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "status",
                "owners",
                "name",
                "nic_name",
                "ip_addrs",
                "lnn",
                "id"
            ],
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPoolInterfacesInterfaceItemOwner": {
            "properties": {
                "groupnet": {
                    "type": "string"
                },
                "pool": {
                    "type": "string"
                },
                "subnet": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPoolRule": {
            "properties": {
                "description": {
                    "description": "Description for the provisioning rule.",
                    "maxLength": 128,
                    "type": "string"
                },
                "iface": {
                    "description": "Interface name the provisioning rule applies to.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the provisioning rule.",
                    "maxLength": 32,
                    "type": "string"
                },
                "node_type": {
                    "description": "Node type the provisioning rule applies to.",
                    "enum": [
                        "any",
                        "storage",
                        "accelerator",
                        "storage-i",
                        "accelerator-i",
                        "backup-accelerator"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPoolRules": {
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolRulesRule",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPoolRulesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolRules"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPoolRulesRule": {
            "properties": {
                "description": {
                    "description": "Description for the provisioning rule.",
                    "maxLength": 128,
                    "type": "string"
                },
                "groupnet": {
                    "description": "Name of the groupnet this rule belongs to",
                    "type": "string"
                },
                "id": {
                    "description": "Unique rule ID.",
                    "type": "string"
                },
                "iface": {
                    "description": "Interface name the provisioning rule applies to.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the provisioning rule.",
                    "maxLength": 32,
                    "type": "string"
                },
                "node_type": {
                    "description": "Node type the provisioning rule applies to.",
                    "enum": [
                        "any",
                        "storage",
                        "accelerator",
                        "storage-i",
                        "accelerator-i",
                        "backup-accelerator"
                    ],
                    "type": "string"
                },
                "pool": {
                    "description": "Name of the pool this rule belongs to.",
                    "type": "string"
                },
                "subnet": {
                    "description": "Name of the subnet this rule belongs to.",
                    "type": "string"
                }
            },
            "required": [
                "subnet",
                "iface",
                "description",
                "node_type",
                "groupnet",
                "id",
                "pool",
                "name"
            ],
            "type": "object"
        },
        "GroupnetsGroupnetSubnetsSubnetPoolsPoolScResumeNode": {
            "properties": {
                "lnn": {
                    "description": "Logical node numbers of the nodes suspended/resumed.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "lnn"
            ],
            "type": "object"
        },
        "GroupsGroupMember": {
            "description": "A persona consists of either a 'type' and 'name' or a 'ID'.",
            "properties": {
                "id": {
                    "description": "Serialized form (e.g. 'UID:0', 'USER:name', 'GID:0', 'GROUP:wheel', 'SID:S-1-1').",
                    "type": "string"
                },
                "name": {
                    "description": "Persona name, must be combined with type.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of persona when using name.",
                    "enum": [
                        "user",
                        "group",
                        "wellknown"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GroupsGroupMembers": {
            "properties": {
                "members": {
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HardeningApplyItem": {
            "description": "Apply hardening on the cluster.",
            "properties": {
                "profile": {
                    "description": "Hardening profile.",
                    "type": "string"
                },
                "report": {
                    "description": "Option to only generate and display a report on current cluster configuration with respect to the expected configuation required to apply hardening. If his option is set to true, hardening is not applied after the report is displayed. By default, this option is false.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "HardeningResolveItem": {
            "description": "Resolve Issues found on the cluster.",
            "properties": {
                "profile": {
                    "description": "Hardening profile.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HardeningState": {
            "properties": {
                "state": {
                    "$ref": "#/definitions/HardeningStateState",
                    "description": "The state of hardening operation on the cluster."
                }
            },
            "type": "object"
        },
        "HardeningStateState": {
            "properties": {
                "issues_file": {
                    "description": "Full path name of issues file. This file contains all issues found when the cluster configuration is checked against expected configuration.",
                    "type": "string"
                },
                "message": {
                    "description": "This contains more information and details about the operation state.",
                    "type": "string"
                },
                "state": {
                    "description": "The state of the hardening operation. In case there is no operation currently going on, this will display the last state of operation.",
                    "enum": [
                        "Disabled",
                        "Checking_Before_Apply",
                        "Issues_Found_Before_Apply",
                        "Applying",
                        "Enabled",
                        "Checking_Before_Revert",
                        "Issues_Found_Before_Revert",
                        "Reverting",
                        "Failed",
                        "Resolving",
                        "Issues_Resolved",
                        "No_Issues_Found",
                        "Resolved_failed",
                        "Issues_Found_In_Report",
                        "No_Issues_Found_In_Report"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HardeningStatus": {
            "properties": {
                "status": {
                    "$ref": "#/definitions/HardeningStatusStatus",
                    "description": "Hardening Status of the cluster."
                }
            },
            "type": "object"
        },
        "HardeningStatusStatus": {
            "properties": {
                "status_text": {
                    "description": "Status text containing cluster-level and nodewise hardening status. Also includes hardening profile if hardening is enabled on at least one node.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HardwareFcport": {
            "properties": {
                "id": {
                    "description": "The unique display id",
                    "type": "string"
                },
                "rate": {
                    "enum": [
                        "auto",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    "type": "string"
                },
                "state": {
                    "description": "State of the port",
                    "enum": [
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "topology": {
                    "enum": [
                        "auto",
                        "ptp",
                        "loop"
                    ],
                    "type": "string"
                },
                "wwnn": {
                    "description": "World wide node name of the port",
                    "type": "string"
                },
                "wwpn": {
                    "description": "World wide port name of the port",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HardwareFcports": {
            "properties": {
                "id": {
                    "description": "The unique display id",
                    "type": "string"
                },
                "port": {
                    "description": "Port ID",
                    "type": "string"
                },
                "rate": {
                    "enum": [
                        "auto",
                        "1",
                        "2",
                        "4",
                        "8"
                    ],
                    "type": "string"
                },
                "state": {
                    "description": "State of the port",
                    "enum": [
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "topology": {
                    "enum": [
                        "auto",
                        "ptp",
                        "loop"
                    ],
                    "type": "string"
                },
                "wwnn": {
                    "description": "World wide node name of the port",
                    "type": "string"
                },
                "wwpn": {
                    "description": "World wide port name of the port",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HardwareTapeNameParams": {
            "properties": {
                "name": {
                    "description": "The name of the device",
                    "type": "string"
                },
                "state": {
                    "description": "Set the device state to close",
                    "enum": [
                        "closed"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HardwareTapes": {
            "description": "Get list Tape and Changer devices",
            "properties": {
                "devices": {
                    "media_changers": {
                        "properties": {
                            "id": {
                                "description": "The unique display id.",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name of the device",
                                "type": "string"
                            },
                            "opencount": {
                                "description": "Number of open",
                                "type": "integer"
                            },
                            "paths": {
                                "description": "Accessible paths of the device",
                                "properties": {
                                    "LUN": {
                                        "description": "Logic unit number of the device on the path",
                                        "type": "integer"
                                    },
                                    "devname": {
                                        "description": "Device driver file name",
                                        "type": "string"
                                    },
                                    "opencount": {
                                        "description": "Number of open",
                                        "type": "integer"
                                    },
                                    "passname": {
                                        "description": "Pass through device driver file name",
                                        "type": "string"
                                    },
                                    "path": {
                                        "description": "Path of the device",
                                        "type": "string"
                                    },
                                    "portid": {
                                        "description": "Port ID on the path",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "path state",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "type": "string"
                                    },
                                    "wwpn": {
                                        "description": "World wide port name",
                                        "type": "string"
                                    }
                                },
                                "type": "array"
                            },
                            "product": {
                                "description": "Product information string including vendor, model, and revision",
                                "type": "string"
                            },
                            "serial": {
                                "description": "Serial number of the device",
                                "type": "string"
                            },
                            "state": {
                                "description": "Device state",
                                "enum": [
                                    "read/write",
                                    "write only",
                                    "read only",
                                    "raw",
                                    "closed"
                                ],
                                "type": "string"
                            },
                            "wwnn": {
                                "description": "World wide node name of the port",
                                "type": "string"
                            }
                        },
                        "type": "array"
                    },
                    "tapes": {
                        "properties": {
                            "id": {
                                "description": "The unique display id.",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name of the device",
                                "type": "string"
                            },
                            "opencount": {
                                "description": "Number of open",
                                "type": "integer"
                            },
                            "paths": {
                                "description": "Accessible paths of the device",
                                "properties": {
                                    "LUN": {
                                        "description": "Logic unit number of the device on the path",
                                        "type": "integer"
                                    },
                                    "devname": {
                                        "description": "Device driver file name",
                                        "type": "string"
                                    },
                                    "opencount": {
                                        "description": "Number of open",
                                        "type": "integer"
                                    },
                                    "passname": {
                                        "description": "Pass through device driver file name",
                                        "type": "string"
                                    },
                                    "path": {
                                        "description": "Path of the device",
                                        "type": "string"
                                    },
                                    "portid": {
                                        "description": "Port ID on the path",
                                        "type": "string"
                                    },
                                    "state": {
                                        "description": "path state",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "type": "string"
                                    },
                                    "wwpn": {
                                        "description": "World wide port name",
                                        "type": "string"
                                    }
                                },
                                "type": "array"
                            },
                            "product": {
                                "description": "Product information string including vendor, model, and revision",
                                "type": "string"
                            },
                            "serial": {
                                "description": "Serial number of the device",
                                "type": "string"
                            },
                            "state": {
                                "description": "Device state",
                                "enum": [
                                    "read/write",
                                    "write only",
                                    "read only",
                                    "raw",
                                    "closed"
                                ],
                                "type": "string"
                            },
                            "wwnn": {
                                "description": "World wide node name of the port",
                                "type": "string"
                            }
                        },
                        "type": "array"
                    }
                },
                "resume": {
                    "description": "Resume string returned by previous query.",
                    "type": "string"
                },
                "total": {
                    "description": "The number of devices",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HdfsLogLevel": {
            "properties": {
                "level": {
                    "description": "Setup the HDFS service log level for this node",
                    "enum": [
                        "always",
                        "error",
                        "warning",
                        "info",
                        "verbose",
                        "debug",
                        "trace",
                        "default"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HdfsProxyuser": {
            "properties": {
                "id": {
                    "description": "The ID of the role.",
                    "type": "string"
                },
                "members": {
                    "description": "Users or groups impersonated by proxyuser.",
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the proxyuser.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "members",
                "name"
            ],
            "type": "object"
        },
        "HdfsProxyusers": {
            "properties": {
                "proxyusers": {
                    "items": {
                        "$ref": "#/definitions/HdfsProxyuser",
                        "description": "This is hdfs impersonation information of a proxyuser"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HdfsRack": {
            "description": "This is schema that contains HDFS rack properties.",
            "properties": {
                "client_ip_ranges": {
                    "description": "Array of IP ranges. Clients from one of these IP ranges are served by corresponding nodes from ip_pools array.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ip_pools": {
                    "description": "Array of IP pool names to use for serving clients from client_ip_ranges.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the rack",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HdfsRackExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/HdfsRack"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The ID of the rack.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "HdfsRacks": {
            "properties": {
                "racks": {
                    "items": {
                        "$ref": "#/definitions/HdfsRackExtended",
                        "description": "This is schema that contains HDFS rack properties."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HdfsRacksExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/HdfsRacks"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "HdfsSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/HdfsSettingsSettings",
                    "description": "This is schema that contains HDFS protocol properties."
                }
            },
            "type": "object"
        },
        "HdfsSettingsSettings": {
            "properties": {
                "default_block_size": {
                    "description": "Block size (size=2**value) reported by HDFS server.",
                    "type": "integer"
                },
                "default_checksum_type": {
                    "description": "Checksum type reported by HDFS server.",
                    "enum": [
                        "none",
                        "crc32",
                        "crc32c"
                    ],
                    "type": "string"
                },
                "hdfs_ambari_namenode": {
                    "description": "NameNode of Ambari server",
                    "type": "string"
                },
                "hdfs_ambari_server": {
                    "description": "Ambari server",
                    "type": "string"
                },
                "hdfs_authentication": {
                    "description": "Type of authentication for HDFS protocol.",
                    "enum": [
                        "all",
                        "simple_only",
                        "kerberos_only"
                    ],
                    "type": "string"
                },
                "hdfs_root_directory": {
                    "description": "HDFS root directory",
                    "type": "string"
                },
                "service": {
                    "description": "Enable or disable the HDFS service.",
                    "type": "boolean"
                },
                "webhdfs_enabled": {
                    "description": "Enable or disable WebHDFS",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "HistoryFile": {
            "properties": {
                "statistics": {
                    "items": {
                        "$ref": "#/definitions/HistoryFileStatistic",
                        "description": "A synciq performance report."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "HistoryFileStatistic": {
            "properties": {
                "allocated": {
                    "description": "Nodes allocated for the sync action.",
                    "type": "integer"
                },
                "id": {
                    "description": "An ID for a single performance report.",
                    "type": "integer"
                },
                "limit": {
                    "description": "Sync action limit.",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "Timestamp for the performance report.",
                    "type": "integer"
                },
                "total": {
                    "description": "Total usage for the performance report.",
                    "type": "integer"
                }
            },
            "required": [
                "timestamp",
                "allocated",
                "total",
                "limit",
                "id"
            ],
            "type": "object"
        },
        "HttpSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/HttpSettingsSettings",
                    "description": "This is schema that contains HTTP protocol properties."
                }
            },
            "type": "object"
        },
        "HttpSettingsSettings": {
            "properties": {
                "access_control": {
                    "description": "Enable Access Control Authentication",
                    "type": "boolean"
                },
                "basic_authentication": {
                    "description": "Enable Basic Authentication",
                    "type": "boolean"
                },
                "dav": {
                    "description": "Enable DAV specification",
                    "type": "boolean"
                },
                "enable_access_log": {
                    "description": "Enable HTTP access logging",
                    "type": "boolean"
                },
                "integrated_authentication": {
                    "description": "Enable Integrated Authentication",
                    "type": "boolean"
                },
                "server_root": {
                    "description": "Document root directory. Must be within /ifs.",
                    "type": "string"
                },
                "service": {
                    "description": "Enable/disable the HTTP service or redirect to WebUI.",
                    "enum": [
                        "enabled",
                        "disabled",
                        "redirect"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobEvent": {
            "properties": {
                "flags": {
                    "description": "Event flags.",
                    "type": "string"
                },
                "id": {
                    "description": "Job event ID.",
                    "type": "string"
                },
                "job_id": {
                    "description": "Job ID.",
                    "minimum": 1,
                    "type": "integer"
                },
                "job_type": {
                    "description": "Job Type.",
                    "type": "string"
                },
                "key": {
                    "description": "Event key name.",
                    "type": "string"
                },
                "phase": {
                    "description": "Job phase number at time of event.",
                    "type": "integer"
                },
                "time": {
                    "description": "Time of event in Unix epoch seconds.",
                    "type": "integer"
                },
                "value": {
                    "description": "Event value.",
                    "type": "string"
                }
            },
            "required": [
                "job_id",
                "job_type",
                "value",
                "flags",
                "key",
                "time",
                "phase",
                "id"
            ],
            "type": "object"
        },
        "JobEvents": {
            "properties": {
                "events": {
                    "items": {
                        "$ref": "#/definitions/JobEvent",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobJob": {
            "properties": {
                "policy": {
                    "description": "Impact policy of this job instance.",
                    "type": "string"
                },
                "priority": {
                    "description": "Priority of this job instance; lower numbers preempt higher numbers.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "state": {
                    "description": "Desired new state of this job instance.",
                    "enum": [
                        "run",
                        "pause",
                        "cancel"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobJobAvscanParams": {
            "properties": {
                "force_run": {
                    "description": "Force files to be scanned, even if excluded by the policy.",
                    "type": "boolean"
                },
                "policy": {
                    "description": "The antivirus scan policy to run.",
                    "minLength": 1,
                    "type": "string"
                },
                "report_id": {
                    "description": "An optional report id for the scan.",
                    "maxLength": 15,
                    "minLength": 1,
                    "type": "string"
                },
                "update": {
                    "description": "Update the last run time for the policy.",
                    "type": "boolean"
                }
            },
            "required": [
                "policy"
            ],
            "type": "object"
        },
        "JobJobAwsrestoreParams": {
            "properties": {
                "synciq_policy": {
                    "description": "The name of the SyncIQ policy to restore from AWS.",
                    "type": "string"
                }
            },
            "required": [
                "synciq_policy"
            ],
            "type": "object"
        },
        "JobJobChangelistcreateParams": {
            "properties": {
                "newer_snapid": {
                    "description": "Newer snapshot ID.",
                    "minimum": 1,
                    "type": "integer"
                },
                "older_snapid": {
                    "description": "Older snapshot ID.",
                    "minimum": 1,
                    "type": "integer"
                },
                "retain_repstate": {
                    "description": "Whether to retain the replication record after a changelist is created. Retaining a replication record allows a changelist to be recreated later.",
                    "required": false,
                    "type": "boolean"
                }
            },
            "required": [
                "newer_snapid",
                "older_snapid"
            ],
            "type": "object"
        },
        "JobJobCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobJob"
                },
                {
                    "properties": {
                        "allow_dup": {
                            "description": "Whether or not to queue the job if one of the same type is already running or queued.",
                            "type": "boolean"
                        },
                        "avscan_params": {
                            "$ref": "#/definitions/JobJobAvscanParams",
                            "description": ""
                        },
                        "awsrestore_params": {
                            "$ref": "#/definitions/JobJobAwsrestoreParams",
                            "description": ""
                        },
                        "changelistcreate_params": {
                            "$ref": "#/definitions/JobJobChangelistcreateParams",
                            "description": ""
                        },
                        "domainmark_params": {
                            "$ref": "#/definitions/JobJobDomainmarkParams",
                            "description": ""
                        },
                        "paths": {
                            "description": "For jobs which take paths, the IFS paths to pass to the job.",
                            "items": {
                                "required": true,
                                "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                        },
                        "prepair_params": {
                            "$ref": "#/definitions/JobJobPrepairParams",
                            "description": ""
                        },
                        "smartpoolstree_params": {
                            "$ref": "#/definitions/JobJobSmartpoolstreeParams",
                            "description": ""
                        },
                        "snaprevert_params": {
                            "$ref": "#/definitions/JobJobSnaprevertParams",
                            "description": ""
                        },
                        "type": {
                            "description": "Job type to queue.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object"
                }
            ]
        },
        "JobJobDomainmarkParams": {
            "properties": {
                "delete": {
                    "description": "Whether this is a delete operation.",
                    "required": false,
                    "type": "boolean"
                },
                "root": {
                    "description": "Base IFS path to associate with the domain.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of domain.",
                    "enum": [
                        "SnapRevert",
                        "SyncIQ",
                        "Worm"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type",
                "root"
            ],
            "type": "object"
        },
        "JobJobExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobJob"
                },
                {
                    "properties": {
                        "control_state": {
                            "description": "State to which the job is transitioning; if control_state is identical to state, the job's state is stable.",
                            "enum": [
                                "running",
                                "paused_user",
                                "paused_system",
                                "paused_policy",
                                "paused_priority",
                                "cancelled_user",
                                "cancelled_system",
                                "failed",
                                "succeeded",
                                "unknown"
                            ],
                            "required": false,
                            "type": "string"
                        },
                        "create_time": {
                            "description": "The time the job was queued, in seconds since the epoch.",
                            "type": "integer"
                        },
                        "current_phase": {
                            "description": "The current phase of the job.",
                            "type": "integer"
                        },
                        "description": {
                            "description": "A text representation of the job.",
                            "type": "string"
                        },
                        "end_time": {
                            "description": "The time the job ended, in seconds since the Epoch.",
                            "type": "integer"
                        },
                        "id": {
                            "description": "The ID of the job.",
                            "minimum": 1,
                            "type": "integer"
                        },
                        "impact": {
                            "description": "The current impact of the job.",
                            "enum": [
                                "Low",
                                "Medium",
                                "High",
                                "Paused"
                            ],
                            "type": "string"
                        },
                        "participants": {
                            "description": "The set of devids working on the job.",
                            "items": {
                                "required": true,
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "paths": {
                            "description": "Paths for which the job was queued.",
                            "items": {
                                "required": true,
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "progress": {
                            "description": "A text representation of the job's progress.",
                            "type": "string"
                        },
                        "retries_remaining": {
                            "description": "The number of retries remaining if the job fails.",
                            "type": "integer"
                        },
                        "running_time": {
                            "description": "The number of seconds the job has executed.",
                            "type": "integer"
                        },
                        "start_time": {
                            "description": "The time the job started, in seconds since the Epoch.",
                            "type": "integer"
                        },
                        "total_phases": {
                            "description": "The total number of phases of the job type.",
                            "type": "integer"
                        },
                        "type": {
                            "description": "The job type.",
                            "type": "string"
                        },
                        "waiting_on": {
                            "description": "The ID of a job for which this job is waiting.",
                            "type": "integer"
                        },
                        "waiting_reason": {
                            "description": "The reason the job is waiting.",
                            "enum": [
                                "blocked_by_priority"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "impact",
                        "type",
                        "state",
                        "priority",
                        "create_time",
                        "policy",
                        "retries_remaining",
                        "total_phases",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "JobJobPrepairParams": {
            "properties": {
                "mapping_type": {
                    "description": "Type of permissions; not accepted with mode=clone or mode=inherit.",
                    "enum": [
                        "global",
                        "sid",
                        "unix",
                        "native"
                    ],
                    "type": "string"
                },
                "mode": {
                    "description": "Type of PermissionRepair operation.",
                    "enum": [
                        "clone",
                        "inherit",
                        "convert"
                    ],
                    "type": "string"
                },
                "template": {
                    "description": "IFS file or directory to use as a template; required with mode=clone and mode=inherit, not accepted with mode=convert.",
                    "type": "string"
                },
                "zone": {
                    "description": "Authentication zone; not accepted with mode=clone or mode=inherit.",
                    "type": "string"
                }
            },
            "required": [
                "mode"
            ],
            "type": "object"
        },
        "JobJobSmartpoolstreeParams": {
            "properties": {
                "directory_only": {
                    "description": "Skip processing of regular files.",
                    "required": false,
                    "type": "boolean"
                },
                "nop": {
                    "description": "Calculate what would be done (dry run).",
                    "required": false,
                    "type": "boolean"
                },
                "policy_only": {
                    "description": "Apply policies but skip restriping.",
                    "required": false,
                    "type": "boolean"
                },
                "recurse": {
                    "description": "Process children, recursively.",
                    "required": false,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "JobJobSnaprevertParams": {
            "properties": {
                "snapid": {
                    "description": "Snapshot to revert.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "snapid"
            ],
            "type": "object"
        },
        "JobJobSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/JobJobSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "JobJobSummarySummary": {
            "properties": {
                "cluster_is_degraded": {
                    "description": "Whether the cluster is in a degraded state.  Note this is from the perspective of the node handling the query, which might be different from another node.",
                    "type": "boolean"
                },
                "connected": {
                    "description": "Whether isi_job_d instances on all up nodes in the cluster are connected to the coordinator.",
                    "type": "boolean"
                },
                "coordinator": {
                    "description": "The devid of the job engine coordinator.",
                    "type": "integer"
                },
                "disconnected_nodes": {
                    "description": "If connected=false, this is the set of devids that are not connected to the coordinator.",
                    "items": {
                        "required": true,
                        "type": "integer"
                    },
                    "type": "array"
                },
                "down_or_read_only_nodes": {
                    "description": "Whether the cluster has any down or read-only nodes.  These nodes are not considered in the connected property.",
                    "type": "boolean"
                },
                "next_jid": {
                    "description": "The job ID to be assigned to the next job.",
                    "type": "integer"
                },
                "run_degraded": {
                    "description": "Whether the job engine would allow most jobs to run even when the cluster is in a degraded state.",
                    "type": "boolean"
                },
                "stats_ready": {
                    "description": "Whether the coordinator has recently gathered statistics for all nodes in the cluster.",
                    "type": "boolean"
                }
            },
            "required": [
                "coordinator",
                "stats_ready",
                "next_jid",
                "down_or_read_only_nodes",
                "connected",
                "cluster_is_degraded",
                "run_degraded"
            ],
            "type": "object"
        },
        "JobJobs": {
            "properties": {
                "jobs": {
                    "items": {
                        "$ref": "#/definitions/JobJobExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobJobsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobJobs"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "JobPolicies": {
            "properties": {
                "types": {
                    "items": {
                        "$ref": "#/definitions/JobPoliciesType",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobPoliciesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobPolicies"
                },
                {
                    "properties": {
                        "policies": {
                            "items": {
                                "$ref": "#/definitions/JobPoliciesType",
                                "description": ""
                            },
                            "type": "array"
                        },
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "JobPoliciesType": {
            "properties": {
                "description": {
                    "description": "A helpful human-readable description of the impact policy.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the impact policy.",
                    "type": "string"
                },
                "intervals": {
                    "items": {
                        "$ref": "#/definitions/JobPolicyInterval",
                        "description": ""
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The name of the impact policy.",
                    "minLength": 1,
                    "type": "string"
                },
                "system": {
                    "description": "Whether or not this is a read-only system impact policy.",
                    "required": false,
                    "type": "boolean"
                }
            },
            "required": [
                "intervals",
                "description",
                "name",
                "id"
            ],
            "type": "object"
        },
        "JobPolicy": {
            "properties": {
                "description": {
                    "description": "A helpful human-readable description of the impact policy.",
                    "required": false,
                    "type": "string"
                },
                "intervals": {
                    "items": {
                        "$ref": "#/definitions/JobPolicyInterval",
                        "description": ""
                    },
                    "required": false,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobPolicyCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobPolicy"
                },
                {
                    "properties": {
                        "name": {
                            "description": "The name of the impact policy.",
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "JobPolicyInterval": {
            "properties": {
                "begin": {
                    "description": "Beginning time for the corresponding impact, in the format 'WWWW HH:MM', where 'WWWW' is the full English name of the day of the week, 'HH' is the hour (00-23), and 'MM' is the minute (00-59).",
                    "type": "string"
                },
                "end": {
                    "description": "Ending time for the corresponding impact, in the format 'WWWW HH:MM', where 'WWWW' is the full English name of the day of the week, 'HH' is the hour (00-23), and 'MM' is the minute (00-59).",
                    "type": "string"
                },
                "impact": {
                    "description": "Impact for the corresponding time span.",
                    "enum": [
                        "Low",
                        "Medium",
                        "High",
                        "Paused"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "impact",
                "begin",
                "end"
            ],
            "type": "object"
        },
        "JobRecent": {
            "properties": {
                "recent": {
                    "items": {
                        "$ref": "#/definitions/JobRecentRecentItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobRecentRecentItem": {
            "properties": {
                "control_state": {
                    "description": "State to which the job is transitioning; if control_state is identical to state, the job's state is stable.",
                    "enum": [
                        "running",
                        "paused_user",
                        "paused_system",
                        "paused_policy",
                        "paused_priority",
                        "cancelled_user",
                        "cancelled_system",
                        "failed",
                        "succeeded",
                        "unknown"
                    ],
                    "required": false,
                    "type": "string"
                },
                "create_time": {
                    "description": "The time the job was queued, in seconds since the epoch.",
                    "type": "integer"
                },
                "current_phase": {
                    "description": "The current phase of the job.",
                    "type": "integer"
                },
                "description": {
                    "description": "A text representation of the job.",
                    "type": "string"
                },
                "end_time": {
                    "description": "The time the job ended, in seconds since the Epoch.",
                    "type": "integer"
                },
                "id": {
                    "description": "The ID of the job.",
                    "minimum": 1,
                    "type": "integer"
                },
                "impact": {
                    "description": "The current impact of the job.",
                    "enum": [
                        "Low",
                        "Medium",
                        "High",
                        "Paused"
                    ],
                    "type": "string"
                },
                "participants": {
                    "description": "The set of devids working on the job.",
                    "items": {
                        "required": true,
                        "type": "integer"
                    },
                    "type": "array"
                },
                "paths": {
                    "description": "Paths for which the job was queued.",
                    "items": {
                        "required": true,
                        "type": "string"
                    },
                    "type": "array"
                },
                "policy": {
                    "description": "Current impact policy of the job.",
                    "type": "string"
                },
                "priority": {
                    "description": "Current priority of the job; lower numbers preempt higher numbers.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "progress": {
                    "description": "A text representation of the job's progress.",
                    "type": "string"
                },
                "retries_remaining": {
                    "description": "The number of retries remaining if the job fails.",
                    "type": "integer"
                },
                "running_time": {
                    "description": "The number of seconds the job has executed.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started, in seconds since the Epoch.",
                    "type": "integer"
                },
                "state": {
                    "description": "Current state of the job.",
                    "enum": [
                        "running",
                        "paused_user",
                        "paused_system",
                        "paused_policy",
                        "paused_priority",
                        "cancelled_user",
                        "cancelled_system",
                        "failed",
                        "succeeded",
                        "unknown"
                    ],
                    "type": "string"
                },
                "total_phases": {
                    "description": "The total number of phases of the job type.",
                    "type": "integer"
                },
                "type": {
                    "description": "The job type.",
                    "type": "string"
                },
                "waiting_on": {
                    "description": "The ID of a job for which this job is waiting.",
                    "type": "integer"
                },
                "waiting_reason": {
                    "description": "The reason the job is waiting.",
                    "enum": [
                        "blocked_by_priority"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "impact",
                "type",
                "state",
                "priority",
                "create_time",
                "policy",
                "retries_remaining",
                "total_phases",
                "id"
            ],
            "type": "object"
        },
        "JobReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/JobEvent",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobStatistics": {
            "properties": {
                "jobs": {
                    "items": {
                        "$ref": "#/definitions/JobStatisticsJob",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "JobStatisticsJob": {
            "properties": {
                "job_id": {
                    "description": "The job ID.",
                    "type": "integer"
                },
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/JobStatisticsJobNode",
                        "description": ""
                    },
                    "type": "array"
                },
                "phase": {
                    "description": "The current phase of the job.",
                    "type": "integer"
                },
                "total_nodes": {
                    "description": "The number of nodes participating in the job.",
                    "type": "integer"
                }
            },
            "required": [
                "phase",
                "nodes",
                "job_id",
                "total_nodes"
            ],
            "type": "object"
        },
        "JobStatisticsJobNode": {
            "properties": {
                "cpu": {
                    "$ref": "#/definitions/JobStatisticsJobNodeCpu",
                    "description": ""
                },
                "io": {
                    "$ref": "#/definitions/JobStatisticsJobNodeIo",
                    "description": ""
                },
                "memory": {
                    "$ref": "#/definitions/JobStatisticsJobNodeMemory",
                    "description": ""
                },
                "node": {
                    "description": "The devid of the node.",
                    "type": "integer"
                },
                "pid": {
                    "description": "The process ID of the job on this node.",
                    "type": "integer"
                },
                "total_workers": {
                    "description": "The number of workers for this job on this node.",
                    "type": "integer"
                },
                "workers": {
                    "items": {
                        "$ref": "#/definitions/JobStatisticsJobNodeWorker",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "node",
                "workers",
                "pid",
                "total_workers",
                "io",
                "memory"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeCpu": {
            "properties": {
                "average": {
                    "description": "The average CPU utilization of the job on this node.",
                    "type": "number"
                },
                "current": {
                    "description": "The current CPU utilization of the job on this node.",
                    "type": "number"
                },
                "maximum": {
                    "description": "The maximum CPU utilization of the job on this node.",
                    "type": "number"
                },
                "minimum": {
                    "description": "The minimum CPU utilization of the job on this node.",
                    "type": "number"
                }
            },
            "required": [
                "current",
                "minimum",
                "maximum"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeIo": {
            "properties": {
                "read": {
                    "$ref": "#/definitions/JobStatisticsJobNodeIoRead",
                    "description": ""
                },
                "write": {
                    "$ref": "#/definitions/JobStatisticsJobNodeIoWrite",
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "JobStatisticsJobNodeIoRead": {
            "properties": {
                "bytes": {
                    "description": "The number of bytes recently read by this job on this node.",
                    "type": "integer"
                },
                "ops": {
                    "description": "The number of read operations recently performed by this job on this node.",
                    "type": "integer"
                }
            },
            "required": [
                "bytes",
                "ops"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeIoWrite": {
            "properties": {
                "bytes": {
                    "description": "The number of bytes recently written by this job on this node.",
                    "type": "integer"
                },
                "ops": {
                    "description": "The number of write operations recently performed by this job on this node.",
                    "type": "integer"
                }
            },
            "required": [
                "bytes",
                "ops"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeMemory": {
            "properties": {
                "physical": {
                    "$ref": "#/definitions/JobStatisticsJobNodeMemoryPhysical",
                    "description": ""
                },
                "virtual": {
                    "$ref": "#/definitions/JobStatisticsJobNodeMemoryVirtual",
                    "description": ""
                }
            },
            "required": true,
            "type": "object"
        },
        "JobStatisticsJobNodeMemoryPhysical": {
            "properties": {
                "average": {
                    "description": "The average physical memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "current": {
                    "description": "The current physical memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "maximum": {
                    "description": "The maximum physical memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "minimum": {
                    "description": "The minimum physical memory utilization of the job on this node, in KB.",
                    "type": "number"
                }
            },
            "required": [
                "current",
                "minimum",
                "maximum"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeMemoryVirtual": {
            "properties": {
                "average": {
                    "description": "The average virtual memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "current": {
                    "description": "The current virtual memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "maximum": {
                    "description": "The maximum virtual memory utilization of the job on this node, in KB.",
                    "type": "number"
                },
                "minimum": {
                    "description": "The minimum virtual memory utilization of the job on this node, in KB.",
                    "type": "number"
                }
            },
            "required": [
                "current",
                "minimum",
                "maximum"
            ],
            "type": "object"
        },
        "JobStatisticsJobNodeWorker": {
            "properties": {
                "stw": {
                    "description": "The sleep-to-work ratio of this worker; how much time it spends sleeping compared to working.",
                    "type": "number"
                },
                "task": {
                    "description": "A representation of the task the worker is currently processing; not intended to be read by humans.",
                    "type": "string"
                },
                "task_result": {
                    "description": "A representation of the most recent task result produced by the worker; not intended to be read by humans.",
                    "type": "string"
                },
                "worker": {
                    "description": "The worker ID.",
                    "type": "integer"
                }
            },
            "required": [
                "worker"
            ],
            "type": "object"
        },
        "JobType": {
            "properties": {
                "enabled": {
                    "description": "Whether the job type is enabled and able to run.",
                    "type": "boolean"
                },
                "policy": {
                    "description": "Default impact policy of this job type.",
                    "type": "string"
                },
                "priority": {
                    "description": "Default priority of this job type; lower numbers preempt higher numbers.",
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                },
                "schedule": {
                    "description": "The schedule on which this job type is queued, if any.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JobTypeExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobType"
                },
                {
                    "properties": {
                        "allow_multiple_instances": {
                            "description": "Whether multiple instances of this job type may run simultaneously.",
                            "type": "boolean"
                        },
                        "description": {
                            "description": "Brief description of the job type.",
                            "type": "string"
                        },
                        "exclusion_set": {
                            "description": "The set(s) of mutually-exclusive job types to which this job belongs.  No job in this set may run with any other job in this set.  Obsolete; this value will always be an empty string, as exclusion sets are no longer a job type property.",
                            "type": "string"
                        },
                        "hidden": {
                            "description": "Whether this job type is normally visible in the UI.",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "Job type ID.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "priority",
                        "description",
                        "schedule",
                        "enabled",
                        "exclusion_set",
                        "policy",
                        "hidden",
                        "allow_multiple_instances",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "JobTypes": {
            "properties": {
                "types": {
                    "items": {
                        "$ref": "#/definitions/JobTypeExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JobTypesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/JobTypes"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "LibrarytestExample": {
            "description": "An example json schema.",
            "properties": {
                "field": {
                    "description": "An example field.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LicenseLicense": {
            "properties": {
                "duration": {
                    "description": "Total duration in seconds for temporary licenses.",
                    "type": "integer"
                },
                "expiration": {
                    "description": "Unix epoch time the license will expire.",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique identifier for the license.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the licensed feature.",
                    "type": "string"
                },
                "status": {
                    "description": "Current status of the license.",
                    "enum": [
                        "Activated",
                        "Evaluation",
                        "Expired",
                        "Inactive",
                        "Unknown"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "duration",
                "status",
                "expiration",
                "name",
                "id"
            ],
            "type": "object"
        },
        "LicenseLicenses": {
            "properties": {
                "licenses": {
                    "items": {
                        "$ref": "#/definitions/LicenseLicense",
                        "description": "Information about an application license."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingDump": {
            "properties": {
                "identities": {
                    "items": {
                        "description": "On-disk identity mapping entry",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "MappingIdentities": {
            "properties": {
                "identities": {
                    "items": {
                        "$ref": "#/definitions/MappingIdentity",
                        "description": "Identity mapping entry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingIdentity": {
            "properties": {
                "id": {
                    "description": "The identity mapping entry id",
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "targets": {
                    "items": {
                        "$ref": "#/definitions/MappingIdentityTarget",
                        "description": "Target identity mappings."
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "targets"
            ],
            "type": "object"
        },
        "MappingIdentityCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/MappingIdentity"
                },
                {
                    "description": "Identity mapping entry",
                    "properties": {},
                    "required": [
                        "targets"
                    ],
                    "type": "object"
                }
            ]
        },
        "MappingIdentityTarget": {
            "properties": {
                "on_disk": {
                    "description": "Identity is preferred on-disk.",
                    "required": false,
                    "type": "boolean"
                },
                "target": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "type": {
                    "description": "Origin of identity mapping.",
                    "enum": [
                        "auto",
                        "external",
                        "manual"
                    ],
                    "required": false,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MappingImport": {
            "properties": {
                "identities": {
                    "items": {
                        "description": "On-disk identity mapping entry",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingUsersLookup": {
            "properties": {
                "mapping": {
                    "description": "Lookup a user access token.",
                    "items": {
                        "$ref": "#/definitions/MappingUsersLookupMappingItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingUsersLookupMappingItem": {
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/MappingUsersLookupMappingItemGroup",
                        "description": "Configuration for a user."
                    },
                    "type": "array"
                },
                "privileges": {
                    "items": {
                        "$ref": "#/definitions/AuthIdNtokenPrivilegeItem",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                },
                "user": {
                    "$ref": "#/definitions/MappingUsersLookupMappingItemUser",
                    "description": "Configuration for a user."
                },
                "zid": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "MappingUsersLookupMappingItemGroup": {
            "properties": {
                "dn": {
                    "type": "string"
                },
                "dns_domain": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "email": {
                    "description": "Specifies an Email address.",
                    "required": false,
                    "type": "string"
                },
                "enabled": {
                    "description": "Auth user is enabled.",
                    "required": false,
                    "type": "boolean"
                },
                "expired": {
                    "description": "Auth user is expired.",
                    "required": false,
                    "type": "boolean"
                },
                "expiry": {
                    "description": "Epoch time at which the auth user will expire.",
                    "required": false,
                    "type": "integer"
                },
                "gecos": {
                    "description": "Sets GECOS value (usually full name).",
                    "required": false,
                    "type": "string"
                },
                "generated_gid": {
                    "required": false,
                    "type": "boolean"
                },
                "generated_uid": {
                    "required": false,
                    "type": "boolean"
                },
                "generated_upn": {
                    "required": false,
                    "type": "boolean"
                },
                "gid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "home_directory": {
                    "description": "Specifies user's home directory.",
                    "required": false,
                    "type": "string"
                },
                "id": {
                    "description": "The user or group ID.",
                    "type": "string"
                },
                "locked": {
                    "description": "Specifies if account is locked out.",
                    "required": false,
                    "type": "boolean"
                },
                "max_password_age": {
                    "description": "The maximum age in seconds allowed for the password before it expires.",
                    "required": false,
                    "type": "integer"
                },
                "member_of": {
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "A user or group name.",
                    "type": "string"
                },
                "on_disk_group_identity": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "on_disk_user_identity": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "password_expired": {
                    "description": "Specifies whether the password has expired.",
                    "required": false,
                    "type": "boolean"
                },
                "password_expires": {
                    "description": "Password is allowed to expire.",
                    "required": false,
                    "type": "boolean"
                },
                "password_expiry": {
                    "description": "Specifies the time in epoch seconds the password will expire.",
                    "required": false,
                    "type": "integer"
                },
                "password_last_set": {
                    "description": "Specifies the last time the password was set.",
                    "required": false,
                    "type": "integer"
                },
                "primary_group_sid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "prompt_password_change": {
                    "description": "Prompts the user to change their password on next login.",
                    "required": false,
                    "type": "boolean"
                },
                "provider": {
                    "description": "Specifies an authentication provider.",
                    "type": "string"
                },
                "sam_account_name": {
                    "type": "string"
                },
                "shell": {
                    "description": "Sets path to user's shell.",
                    "required": false,
                    "type": "string"
                },
                "sid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "upn": {
                    "description": "The user principal name.",
                    "required": false,
                    "type": "string"
                },
                "user_can_change_password": {
                    "description": "Specifies whether the user's password can be changed.",
                    "required": false,
                    "type": "boolean"
                }
            },
            "required": [
                "domain",
                "sam_account_name",
                "dns_domain",
                "id",
                "provider",
                "type",
                "dn",
                "name"
            ],
            "type": "object"
        },
        "MappingUsersLookupMappingItemUser": {
            "properties": {
                "dn": {
                    "type": "string"
                },
                "dns_domain": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "email": {
                    "description": "Specifies an Email address.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Auth user is enabled.",
                    "type": "boolean"
                },
                "expired": {
                    "description": "Auth user is expired.",
                    "type": "boolean"
                },
                "expiry": {
                    "description": "Epoch time at which the auth user will expire.",
                    "type": "integer"
                },
                "gecos": {
                    "description": "Sets GECOS value (usually full name).",
                    "type": "string"
                },
                "generated_gid": {
                    "type": "boolean"
                },
                "generated_uid": {
                    "type": "boolean"
                },
                "generated_upn": {
                    "type": "boolean"
                },
                "gid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "home_directory": {
                    "description": "Specifies user's home directory.",
                    "type": "string"
                },
                "id": {
                    "description": "The user or group ID.",
                    "type": "string"
                },
                "locked": {
                    "description": "Specifies if account is locked out.",
                    "type": "boolean"
                },
                "max_password_age": {
                    "description": "The maximum age in seconds allowed for the password before it expires.",
                    "type": "integer"
                },
                "member_of": {
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "name": {
                    "description": "A user or group name.",
                    "type": "string"
                },
                "on_disk_group_identity": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "on_disk_user_identity": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "password_expired": {
                    "description": "Specifies whether the password has expired.",
                    "type": "boolean"
                },
                "password_expires": {
                    "description": "Password is allowed to expire.",
                    "type": "boolean"
                },
                "password_expiry": {
                    "description": "Specifies the time in epoch seconds the password will expire.",
                    "type": "integer"
                },
                "password_last_set": {
                    "description": "Specifies the last time the password was set.",
                    "type": "integer"
                },
                "primary_group_sid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "prompt_password_change": {
                    "description": "Prompts the user to change their password on next login.",
                    "type": "boolean"
                },
                "provider": {
                    "description": "Specifies an authentication provider.",
                    "type": "string"
                },
                "sam_account_name": {
                    "type": "string"
                },
                "shell": {
                    "description": "Sets path to user's shell.",
                    "type": "string"
                },
                "sid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "upn": {
                    "description": "The user principal name.",
                    "type": "string"
                },
                "user_can_change_password": {
                    "description": "Specifies whether the user's password can be changed.",
                    "type": "boolean"
                }
            },
            "required": [
                "domain",
                "generated_gid",
                "password_expires",
                "sam_account_name",
                "dns_domain",
                "password_expired",
                "id",
                "generated_upn",
                "password_last_set",
                "provider",
                "max_password_age",
                "type",
                "email",
                "dn",
                "shell",
                "expiry",
                "password_expiry",
                "user_can_change_password",
                "expired",
                "upn",
                "locked",
                "name",
                "enabled",
                "gecos",
                "generated_uid",
                "home_directory",
                "prompt_password_change"
            ],
            "type": "object"
        },
        "MappingUsersRules": {
            "properties": {
                "rules": {
                    "$ref": "#/definitions/MappingUsersRulesRules",
                    "description": "This object contains rules for user mapping."
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRule": {
            "properties": {
                "operator": {
                    "description": "The operator used to make rules on specified users or groups.",
                    "enum": [
                        "append",
                        "insert",
                        "replace",
                        "trim",
                        "union"
                    ],
                    "type": "string"
                },
                "options": {
                    "$ref": "#/definitions/MappingUsersRulesRuleOptions",
                    "description": "These are options that can be applied to user mapping rules."
                },
                "user1": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2",
                    "description": ""
                },
                "user2": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2",
                    "description": ""
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRuleOptions": {
            "properties": {
                "break": {
                    "description": "If this rule applies successfully, stop processing further.",
                    "type": "boolean"
                },
                "default_user": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2",
                    "description": ""
                },
                "group": {
                    "description": "Specifies that the primary GID and primary group SID should be copied to the existing credential.",
                    "type": "boolean"
                },
                "groups": {
                    "description": "Specifies that all additional identifiers should be copied to the existing credential.",
                    "type": "boolean"
                },
                "user": {
                    "description": "Specifies that the primary UID and primary user SID should be copied to the existing credential.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRuleUser2": {
            "properties": {
                "domain": {
                    "description": "The domain of the user that is being mapped.",
                    "type": "string"
                },
                "user": {
                    "description": "The name of the user that is being mapped.",
                    "type": "string"
                }
            },
            "required": [
                "user"
            ],
            "type": "object"
        },
        "MappingUsersRulesRules": {
            "properties": {
                "parameters": {
                    "$ref": "#/definitions/MappingUsersRulesRulesParameters",
                    "description": "If the final credential does not have valid UID/GID then it is replaced with default unix user."
                },
                "rules": {
                    "description": "The list of user mapping rules.",
                    "items": {
                        "$ref": "#/definitions/MappingUsersRulesRule",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "MappingUsersRulesRulesParameters": {
            "properties": {
                "default_unix_user": {
                    "$ref": "#/definitions/MappingUsersRulesRuleUser2",
                    "description": ""
                }
            },
            "type": "object"
        },
        "NdmpContextsBre": {
            "properties": {
                "contexts": {
                    "items": {
                        "$ref": "#/definitions/NdmpContextsBreContext",
                        "description": "List IDs of all BRE contexts on the cluster"
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NdmpContextsBreContext": {
            "properties": {
                "bre_context_id": {
                    "description": "Unique ID of NDMP BRE context",
                    "type": "string"
                },
                "id": {
                    "description": "Unique display id.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NdmpDiagnostics": {
            "properties": {
                "diagnostics": {
                    "$ref": "#/definitions/NdmpDiagnosticsDiagnostics",
                    "description": ""
                }
            },
            "type": "object"
        },
        "NdmpDiagnosticsDiagnostics": {
            "properties": {
                "diag_level": {
                    "description": "Diagnostics level for ndmp.",
                    "type": "integer"
                },
                "protocol_version": {
                    "description": "The version of the ndmp protocol.",
                    "type": "integer"
                },
                "trace_level": {
                    "description": "Trace level for ndmp.",
                    "enum": [
                        "none",
                        "standard",
                        "include-file-history",
                        "log-file-history"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NdmpLogs": {
            "description": "Get NDMP logs.",
            "properties": {
                "logs": {
                    "description": "NDMP logs",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NdmpSession": {
            "properties": {
                "data_bytes_transferred": {
                    "description": "Bytes transferred to/from the filesystem",
                    "type": "integer"
                },
                "data_state": {
                    "description": "State of the NDMP Data Service",
                    "enum": [
                        "IDLE",
                        "LISTEN",
                        "ACTIVE",
                        "CONNECTED",
                        "HALTED",
                        "INVALID"
                    ],
                    "type": "string"
                },
                "dest_path": {
                    "description": "The path being recovered to",
                    "type": "string"
                },
                "dma_ip_addr": {
                    "description": "IP address of the DMA",
                    "type": "string"
                },
                "elapsed_time": {
                    "description": "Number of seconds elapsed since the backup was started",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique display ID.",
                    "type": "string"
                },
                "mover_bytes_transferred": {
                    "description": "Bytes transferred to/from tape or remote writer",
                    "type": "integer"
                },
                "mover_state": {
                    "description": "State of the NDMP Mover Service",
                    "enum": [
                        "IDLE",
                        "LISTEN",
                        "ACTIVE",
                        "PAUSED",
                        "HALTED",
                        "INVALID"
                    ],
                    "type": "string"
                },
                "operation": {
                    "description": "The type of backup session",
                    "enum": [
                        "None",
                        "Backup",
                        "Recover",
                        "Recover file history"
                    ],
                    "type": "string"
                },
                "remote_ip_addr": {
                    "description": "IP address of the remote NDMP participant",
                    "type": "string"
                },
                "scsi_device": {
                    "description": "Name of the media changer device used if any",
                    "type": "string"
                },
                "session": {
                    "description": "Session ID in form <lnn>.<pid>.",
                    "type": "string"
                },
                "source_path": {
                    "description": "The path being backed up",
                    "type": "string"
                },
                "start_time": {
                    "description": "Time backup was started in seconds since epoch",
                    "type": "integer"
                },
                "tape_device": {
                    "description": "Name of the tape device used if any",
                    "type": "string"
                },
                "tape_open_mode": {
                    "description": "Describes the mode in which the tape is opened",
                    "enum": [
                        "Read",
                        "Read/Write",
                        "Raw",
                        "Invalid"
                    ],
                    "type": "string"
                },
                "throughput": {
                    "description": "The throughput in MB/s",
                    "type": "integer"
                }
            },
            "required": [
                "tape_device",
                "mover_bytes_transferred",
                "source_path",
                "start_time",
                "scsi_device",
                "data_bytes_transferred",
                "elapsed_time",
                "mover_state",
                "session",
                "throughput",
                "tape_open_mode",
                "dest_path",
                "data_state",
                "operation",
                "dma_ip_addr",
                "id",
                "remote_ip_addr"
            ],
            "type": "object"
        },
        "NdmpSessions": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "sessions": {
                    "items": {
                        "$ref": "#/definitions/NdmpSession",
                        "description": "Describes various attributes of a backup session"
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NdmpSettingsGlobal": {
            "properties": {
                "global": {
                    "$ref": "#/definitions/NdmpSettingsGlobalGlobal",
                    "description": ""
                }
            },
            "type": "object"
        },
        "NdmpSettingsGlobalGlobal": {
            "properties": {
                "bre_max_num_contexts": {
                    "description": "Maximum number of BRE contexts.",
                    "type": "integer"
                },
                "dma": {
                    "description": "A unique identifier for the dma vendor.",
                    "enum": [
                        "generic",
                        "atempo",
                        "bakbone",
                        "commvault",
                        "emc",
                        "symantec",
                        "tivoli",
                        "symantec-netbackup",
                        "symantec-backupexec"
                    ],
                    "type": "string"
                },
                "msb_context_retention_duration": {
                    "description": "Multi-Stream Backup context retention duration.",
                    "type": "integer"
                },
                "msr_context_retention_duration": {
                    "description": "Multi-Stream Restore context retention duration.",
                    "type": "integer"
                },
                "port": {
                    "description": "The port to listen on.",
                    "type": "integer"
                },
                "service": {
                    "description": "Property to enable/diable the NDMP service.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NdmpSettingsVariable": {
            "properties": {
                "value": {
                    "description": "The value of environment variable.",
                    "type": "string"
                }
            },
            "required": [
                "value"
            ],
            "type": "object"
        },
        "NdmpUser": {
            "properties": {
                "password": {
                    "description": "The password for the NDMP administrator.",
                    "type": "string"
                }
            },
            "required": [
                "password"
            ],
            "type": "object"
        },
        "NdmpUserCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/NdmpUser"
                },
                {
                    "properties": {
                        "name": {
                            "description": "A unique user name for NDMP administrator.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "password",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "NdmpUsers": {
            "properties": {
                "id": {
                    "description": "Unique display ID.",
                    "type": "string"
                },
                "name": {
                    "description": "A unique user name for NDMP administrator.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NdmpUsersExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NdmpUsers"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        },
                        "users": {
                            "items": {
                                "$ref": "#/definitions/NdmpUsers",
                                "description": ""
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NetworkDnscache": {
            "properties": {
                "settings": {
                    "items": {
                        "$ref": "#/definitions/NetworkDnscacheSetting",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NetworkDnscacheSetting": {
            "properties": {
                "cache_entry_limit": {
                    "description": "DNS cache entry limit",
                    "maximum": 1048576,
                    "minimum": 1024,
                    "type": "integer"
                },
                "cluster_timeout": {
                    "description": "Timeout value for calls made to other nodes in the cluster",
                    "maximum": 60,
                    "minimum": 0,
                    "type": "integer"
                },
                "dns_timeout": {
                    "description": "Timeout value for calls made to the dns resolvers",
                    "maximum": 60,
                    "minimum": 0,
                    "type": "integer"
                },
                "eager_refresh": {
                    "description": "Lead time to refresh cache entries nearing expiration",
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer"
                },
                "testping_delta": {
                    "description": "Deltas for checking cbind cluster health",
                    "maximum": 60,
                    "minimum": 0,
                    "type": "integer"
                },
                "ttl_max_noerror": {
                    "description": "Upper bound on ttl for cache hits",
                    "maximum": 3600,
                    "minimum": 0,
                    "type": "integer"
                },
                "ttl_max_nxdomain": {
                    "description": "Upper bound on ttl for nxdomain",
                    "maximum": 3600,
                    "minimum": 0,
                    "type": "integer"
                },
                "ttl_max_other": {
                    "description": "Upper bound on ttl for non-nxdomain failures",
                    "maximum": 3600,
                    "minimum": 0,
                    "type": "integer"
                },
                "ttl_max_servfail": {
                    "description": "Upper bound on ttl for server failures",
                    "maximum": 3600,
                    "minimum": 0,
                    "type": "integer"
                },
                "ttl_min_noerror": {
                    "description": "Lower bound on ttl for cache hits",
                    "maximum": 3600,
                    "minimum": 0,
                    "type": "integer"
                },
                "ttl_min_nxdomain": {
                    "description": "Lower bound on ttl for nxdomain",
                    "maximum": 3600,
                    "minimum": 0,
                    "type": "integer"
                },
                "ttl_min_other": {
                    "description": "Lower bound on ttl for non-nxdomain failures",
                    "maximum": 3600,
                    "minimum": 0,
                    "type": "integer"
                },
                "ttl_min_servfail": {
                    "description": "Lower bound on ttl for server failures",
                    "maximum": 3600,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "testping_delta",
                "ttl_max_servfail",
                "eager_refresh",
                "ttl_max_other",
                "ttl_min_other",
                "cluster_timeout",
                "ttl_min_nxdomain",
                "ttl_max_noerror",
                "ttl_min_noerror",
                "ttl_max_nxdomain",
                "cache_entry_limit",
                "ttl_min_servfail",
                "dns_timeout"
            ],
            "type": "object"
        },
        "NetworkExternal": {
            "properties": {
                "settings": {
                    "items": {
                        "$ref": "#/definitions/NetworkExternalSetting",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NetworkExternalExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkExternal"
                },
                {
                    "properties": {
                        "sbr": {
                            "description": "Enable or disable Source Based Routing (Defaults to false)",
                            "type": "boolean"
                        },
                        "sc_rebalance_delay": {
                            "description": "Delay in seconds for IP rebalance.",
                            "maximum": 10,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "tcp_ports": {
                            "description": "List of client TCP ports.",
                            "items": {
                                "maximum": 65535,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NetworkExternalSetting": {
            "properties": {
                "default_groupnet": {
                    "description": "Default client-side DNS settings for non-multitenancy aware programs",
                    "type": "string"
                },
                "sbr": {
                    "description": "Enable or disable Source Based Routing (Defaults to false)",
                    "type": "boolean"
                },
                "sc_rebalance_delay": {
                    "description": "Delay in seconds for IP rebalance.",
                    "maximum": 10,
                    "minimum": 0,
                    "type": "integer"
                },
                "tcp_ports": {
                    "description": "List of client TCP ports.",
                    "items": {
                        "maximum": 65535,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "sbr",
                "sc_rebalance_delay",
                "default_groupnet",
                "tcp_ports"
            ],
            "type": "object"
        },
        "NetworkGroupnet": {
            "properties": {
                "description": {
                    "description": "A description of the groupnet.",
                    "maxLength": 128,
                    "type": "string"
                },
                "dns_cache_enabled": {
                    "description": "DNS caching is enabled or disabled.",
                    "type": "boolean"
                },
                "dns_options": {
                    "description": "List of DNS resolver options.",
                    "items": {
                        "enum": [
                            "rotate"
                        ],
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "dns_search": {
                    "description": "List of DNS search suffixes.",
                    "items": {
                        "type": "string"
                    },
                    "maxItems": 6,
                    "type": "array"
                },
                "dns_servers": {
                    "description": "List of Domain Name Server IP addresses.",
                    "items": {
                        "type": "string"
                    },
                    "maxItems": 3,
                    "type": "array"
                },
                "name": {
                    "description": "The name of the groupnet.",
                    "maxLength": 32,
                    "type": "string"
                },
                "server_side_dns_search": {
                    "description": "Enable or disable appending nodes DNS search  list to client DNS inquiries directed at SmartConnect service IP.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NetworkGroupnetExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkGroupnet"
                },
                {
                    "properties": {
                        "id": {
                            "description": "Unique Interface ID.",
                            "type": "string"
                        },
                        "subnets": {
                            "description": "Name of the subnets in the groupnet.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NetworkGroupnets": {
            "properties": {
                "groupnets": {
                    "items": {
                        "$ref": "#/definitions/NetworkGroupnetExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NetworkGroupnetsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NetworkGroupnets"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NetworkPools": {
            "properties": {
                "pools": {
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPool",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NetworkRules": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "rules": {
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolRulesRule",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NetworkSubnets": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "subnets": {
                    "items": {
                        "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnet",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NfsAliase": {
            "description": "aliases are names for physical paths in the file system",
            "properties": {
                "health": {
                    "description": "The health of the alias.",
                    "enum": [
                        "good",
                        "illegal file type",
                        "illegal path",
                        "name conflict",
                        "not exported",
                        "path not found",
                        "unknown"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The name by which the alias can be referenced",
                    "type": "string"
                },
                "path": {
                    "description": "The path to which the alias points",
                    "type": "string"
                },
                "zone": {
                    "description": "The zone in which the alias is valid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NfsAliaseExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsAliase"
                },
                {
                    "properties": {
                        "id": {
                            "description": "String representing the unique location of this alias",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsAliases": {
            "properties": {
                "aliases": {
                    "items": {
                        "$ref": "#/definitions/NfsAliaseExtended",
                        "description": "aliases are names for physical paths in the file system"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsAliasesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsAliases"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsCheck": {
            "properties": {
                "id": {
                    "description": "The ID of the export.",
                    "type": "integer"
                },
                "messages": {
                    "description": "The message about the export.",
                    "type": "string"
                }
            },
            "required": [
                "messages",
                "id"
            ],
            "type": "object"
        },
        "NfsCheckExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsCheck"
                },
                {
                    "description": "Validation information about NFS exports.",
                    "properties": {
                        "checks": {
                            "items": {
                                "$ref": "#/definitions/NfsCheck",
                                "description": ""
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsExport": {
            "description": "NFS export configuration values.",
            "properties": {
                "all_dirs": {
                    "description": "If true, all directories under the specified paths are mountable.",
                    "type": "boolean"
                },
                "block_size": {
                    "description": "The block size returned by the NFS STATFS procedure.",
                    "type": "integer"
                },
                "can_set_time": {
                    "description": "If true, the client may  set file  times using the NFS SETATTR request.  This  option is advisory and the server always behaves as if it is true.",
                    "type": "boolean"
                },
                "case_insensitive": {
                    "description": "If true, the server will report that it ignores case for file names.",
                    "type": "boolean"
                },
                "case_preserving": {
                    "description": "If true, the server will report that it always preserves case for file names.",
                    "type": "boolean"
                },
                "chown_restricted": {
                    "description": "If true, the server will report that only the superuser may change file ownership.",
                    "type": "boolean"
                },
                "clients": {
                    "description": "Clients that have access to the export.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "commit_asynchronous": {
                    "description": "If true, allows NFS  commit  requests to  execute asynchronously.",
                    "type": "boolean"
                },
                "description": {
                    "description": "A human readable description of the export.",
                    "type": "string"
                },
                "directory_transfer_size": {
                    "description": "The preferred size for directory read operations.  This option is advisory.",
                    "type": "integer"
                },
                "encoding": {
                    "description": "The character encoding of clients connecting to the export.",
                    "type": "string"
                },
                "link_max": {
                    "description": "The reported maximum number of links to a file.",
                    "type": "integer"
                },
                "map_all": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_failure": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_full": {
                    "description": "If true, user mappings queries the OneFS user database.  If false, only local authentication is queried.",
                    "type": "boolean"
                },
                "map_lookup_uid": {
                    "description": "If true, incoming UIDs are mapped to users in the OneFS user database.  If false, incoming UIDs are applied directly to file operations.",
                    "type": "boolean"
                },
                "map_non_root": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_retry": {
                    "description": "Determines whether lookups for users specified in map_all, map_root or map_nonroot are retried if the look fails.",
                    "type": "boolean"
                },
                "map_root": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "max_file_size": {
                    "description": "The maximum file size in the export.",
                    "type": "integer"
                },
                "name_max_size": {
                    "description": "The reported maximum length of a file name.",
                    "type": "integer"
                },
                "no_truncate": {
                    "description": "If true, report that too-long file names result in an error",
                    "type": "boolean"
                },
                "paths": {
                    "description": "The paths under /ifs that are exported.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "read_only": {
                    "description": "If true, the export is read-only.",
                    "type": "boolean"
                },
                "read_only_clients": {
                    "description": "Clients that have read only access to the export.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "read_transfer_max_size": {
                    "description": "The maximum buffer size that clients should use on NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_transfer_multiple": {
                    "description": "The preferred multiple size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_transfer_size": {
                    "description": "The optimal size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_write_clients": {
                    "description": "Clients that have read and write access to the export, even if the export is read-only.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "readdirplus": {
                    "description": "If true, readdirplus requests are enabled.",
                    "type": "boolean"
                },
                "readdirplus_prefetch": {
                    "description": "This field is deprecated and does not do anything.",
                    "type": "integer"
                },
                "return_32bit_file_ids": {
                    "description": "Limits the size of file identifiers returned by NFSv3+ to 32-bit values.",
                    "type": "boolean"
                },
                "root_clients": {
                    "description": "Clients that have root access to the export.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "security_flavors": {
                    "description": "The authentication flavors that are supported for this export.",
                    "items": {
                        "description": "The security type.",
                        "enum": [
                            "unix",
                            "krb5",
                            "krb5i",
                            "krb5p"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "setattr_asynchronous": {
                    "description": "If true, allows setattr operations to execute asynchronously.",
                    "type": "boolean"
                },
                "snapshot": {
                    "description": "Use this snapshot for all mounts.",
                    "type": "string"
                },
                "symlinks": {
                    "description": "If true, paths reachable by symlinks are exported.",
                    "type": "boolean"
                },
                "time_delta": {
                    "description": "The resolution of all time values that are returned to clients.",
                    "type": "number"
                },
                "write_datasync_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_datasync_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_filesync_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_filesync_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_transfer_max_size": {
                    "description": "The maximum buffer size that clients should use on NFS write requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_transfer_multiple": {
                    "description": "The preferred multiple size for NFS write requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_transfer_size": {
                    "description": "The optimal size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_unstable_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_unstable_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "zone": {
                    "description": "The zone in which the export is valid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NfsExportExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsExport"
                },
                {
                    "properties": {
                        "conflicting_paths": {
                            "description": "Paths that conflict with another export.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "id": {
                            "description": "Unique ID for the export.",
                            "type": "integer"
                        },
                        "unresolved_clients": {
                            "description": "Clients that cannot be resolved.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsExportMapAll": {
            "properties": {
                "enabled": {
                    "description": "Should this user mapping be applied",
                    "type": "boolean"
                },
                "primary_group": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                },
                "secondary_groups": {
                    "items": {
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'.",
                        "properties": {
                            "id": {
                                "description": "Serialized form (e.g. 'UID:0', 'USER:name', 'GID:0', 'GROUP:wheel', 'SID:S-1-1').",
                                "type": "string"
                            },
                            "name": {
                                "description": "Persona name, must be combined with type.",
                                "type": "string"
                            },
                            "type": {
                                "description": "Type of persona when using name.",
                                "enum": [
                                    "user",
                                    "group",
                                    "wellknown"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "user": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                }
            },
            "type": "object"
        },
        "NfsExports": {
            "properties": {
                "exports": {
                    "items": {
                        "$ref": "#/definitions/NfsExportExtended",
                        "description": "NFS export configuration values."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsExportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsExports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsExportsSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/NfsExportsSummarySummary",
                    "description": "The summary of a collection of objects."
                }
            },
            "type": "object"
        },
        "NfsExportsSummarySummary": {
            "properties": {
                "count": {
                    "description": "The count of objects in the collection",
                    "type": "integer"
                }
            },
            "required": [
                "count"
            ],
            "type": "object"
        },
        "NfsLogLevel": {
            "properties": {
                "level": {
                    "description": "Valid NFS logging levels",
                    "enum": [
                        "always",
                        "error",
                        "warning",
                        "info",
                        "verbose",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NfsNlmLocks": {
            "properties": {
                "locks": {
                    "items": {
                        "$ref": "#/definitions/NfsNlmLocksLock",
                        "description": "Information for an NLM lock on NFS."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NfsNlmLocksLock": {
            "properties": {
                "client": {
                    "description": "The client host name.",
                    "type": "string"
                },
                "client_id": {
                    "description": "The client ID.",
                    "type": "string"
                },
                "created": {
                    "description": "Time of lock creation.",
                    "type": "integer"
                },
                "id": {
                    "description": "The lock ID.",
                    "type": "string"
                },
                "lin": {
                    "description": "The LIN in ifs that is locked.",
                    "type": "string"
                },
                "lock_type": {
                    "description": "The type of lock.",
                    "type": "string"
                },
                "path": {
                    "description": "The path in ifs that is locked.",
                    "type": "string"
                },
                "range": {
                    "description": "The byte range within the file that is locked.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsNlmSessions": {
            "properties": {
                "sessions": {
                    "items": {
                        "$ref": "#/definitions/NfsNlmSessionsSession",
                        "description": "Describes host/callback information for a NSM monitor entry"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsNlmSessionsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NfsNlmSessions"
                },
                {
                    "properties": {
                        "clients": {
                            "items": {
                                "$ref": "#/definitions/NfsNlmSessionsSession",
                                "description": "Describes host/callback information for a NSM monitor entry"
                            },
                            "type": "array"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NfsNlmSessionsSession": {
            "properties": {
                "delegates": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "host_type": {
                    "description": "The sort of host that this entry represents",
                    "enum": [
                        "client",
                        "server",
                        "reverse",
                        "expired"
                    ],
                    "type": "string"
                },
                "hostname": {
                    "description": "The host being monitored",
                    "type": "string"
                },
                "is_active": {
                    "description": "Whether or not the client is actively being monitored",
                    "type": "boolean"
                },
                "last_modified": {
                    "description": "Unix time in seconds that the client was last modified (monitored or unmonitored)",
                    "type": "integer"
                },
                "node_ip": {
                    "description": "An IP address for which NSM has client records",
                    "type": "string"
                },
                "notify_attempts_remaining": {
                    "description": "Number of times we will attempt to notify this client before giving up",
                    "type": "integer"
                },
                "notify_error": {
                    "description": "Last error recieved attempting to notify this client",
                    "type": "string"
                },
                "notify_last_attempt": {
                    "description": "Unix time in seconds when we last attempted to notify this clients",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NfsNlmWaiters": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                },
                "waiters": {
                    "items": {
                        "$ref": "#/definitions/NfsNlmLocksLock",
                        "description": "Information for an NLM lock on NFS."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NfsSettingsExport": {
            "description": "Default NFS export configuration values.",
            "properties": {
                "settings": {
                    "$ref": "#/definitions/NfsSettingsExportSettings",
                    "description": "NFS export configuration values."
                }
            },
            "type": "object"
        },
        "NfsSettingsExportSettings": {
            "properties": {
                "all_dirs": {
                    "description": "If true, all directories under the specified paths are mountable.",
                    "type": "boolean"
                },
                "block_size": {
                    "description": "The block size returned by the NFS STATFS procedure.",
                    "type": "integer"
                },
                "can_set_time": {
                    "description": "If true, the client may  set file  times using the NFS SETATTR request.  This  option is advisory and the server always behaves as if it is true.",
                    "type": "boolean"
                },
                "case_insensitive": {
                    "description": "If true, the server will report that it ignores case for file names.",
                    "type": "boolean"
                },
                "case_preserving": {
                    "description": "If true, the server will report that it always preserves case for file names.",
                    "type": "boolean"
                },
                "chown_restricted": {
                    "description": "If true, the server will report that only the superuser may change file ownership.",
                    "type": "boolean"
                },
                "commit_asynchronous": {
                    "description": "If true, allows NFS  commit  requests to  execute asynchronously.",
                    "type": "boolean"
                },
                "directory_transfer_size": {
                    "description": "The preferred size for directory read operations.  This option is advisory.",
                    "type": "integer"
                },
                "encoding": {
                    "description": "The character encoding of clients connecting to the export.",
                    "type": "string"
                },
                "link_max": {
                    "description": "The reported maximum number of links to a file.",
                    "type": "integer"
                },
                "map_all": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_failure": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_full": {
                    "description": "If true, user mappings queries the OneFS user database.  If false, only local authentication is queried.",
                    "type": "boolean"
                },
                "map_lookup_uid": {
                    "description": "If true, incoming UIDs are mapped to users in the OneFS user database.  If false, incoming UIDs are applied directly to file operations.",
                    "type": "boolean"
                },
                "map_non_root": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "map_retry": {
                    "description": "Determines whether lookups for users specified in map_all, map_root or map_nonroot are retried if the look fails.",
                    "type": "boolean"
                },
                "map_root": {
                    "$ref": "#/definitions/NfsExportMapAll",
                    "description": "User and group mapping."
                },
                "max_file_size": {
                    "description": "The maximum file size in the export.",
                    "type": "integer"
                },
                "name_max_size": {
                    "description": "The reported maximum length of a file name.",
                    "type": "integer"
                },
                "no_truncate": {
                    "description": "If true, report that too-long file names result in an error",
                    "type": "boolean"
                },
                "read_only": {
                    "description": "If true, the export is read-only.",
                    "type": "boolean"
                },
                "read_transfer_max_size": {
                    "description": "The maximum buffer size that clients should use on NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_transfer_multiple": {
                    "description": "The preferred multiple size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "read_transfer_size": {
                    "description": "The optimal size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "readdirplus": {
                    "description": "If true, readdirplus requests are enabled.",
                    "type": "boolean"
                },
                "readdirplus_prefetch": {
                    "description": "This field is deprecated and does not do anything.",
                    "type": "integer"
                },
                "return_32bit_file_ids": {
                    "description": "Limits the size of file identifiers returned by NFSv3+ to 32-bit values.",
                    "type": "boolean"
                },
                "security_flavors": {
                    "description": "The authentication flavors that are supported for this export.",
                    "items": {
                        "description": "The security type.",
                        "enum": [
                            "unix",
                            "krb5",
                            "krb5i",
                            "krb5p"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "setattr_asynchronous": {
                    "description": "If true, allows setattr operations to execute asynchronously.",
                    "type": "boolean"
                },
                "snapshot": {
                    "description": "Use this snapshot for all mounts.",
                    "type": "string"
                },
                "symlinks": {
                    "description": "If true, paths reachable by symlinks are exported.",
                    "type": "boolean"
                },
                "time_delta": {
                    "description": "The resolution of all time values that are returned to clients.",
                    "type": "number"
                },
                "write_datasync_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_datasync_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_filesync_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_filesync_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_transfer_max_size": {
                    "description": "The maximum buffer size that clients should use on NFS write requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_transfer_multiple": {
                    "description": "The preferred multiple size for NFS write requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_transfer_size": {
                    "description": "The optimal size for NFS read requests.  This option is advisory.",
                    "type": "integer"
                },
                "write_unstable_action": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "write_unstable_reply": {
                    "description": "The synchronization type.",
                    "enum": [
                        "DATASYNC",
                        "FILESYNC",
                        "UNSTABLE"
                    ],
                    "type": "string"
                },
                "zone": {
                    "description": "The zone in which the export is valid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NfsSettingsGlobal": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/NfsSettingsGlobalSettings",
                    "description": "Global NFS configuration."
                }
            },
            "type": "object"
        },
        "NfsSettingsGlobalSettings": {
            "properties": {
                "nfsv3_enabled": {
                    "description": "Enable or disable NFSv3.",
                    "type": "boolean"
                },
                "nfsv4_enabled": {
                    "description": "Enable or disable NFSv4.",
                    "type": "boolean"
                },
                "rpc_maxthreads": {
                    "description": "Maximum number of threads in the nfs server thread pool.",
                    "type": "integer"
                },
                "rpc_minthreads": {
                    "description": "Minimum number of threads in the nfs server thread pool.",
                    "type": "integer"
                },
                "service": {
                    "description": "Enable or disable the nfs service.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NfsSettingsZone": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/NfsSettingsZoneSettings",
                    "description": "Per-zone NFS configuration."
                }
            },
            "type": "object"
        },
        "NfsSettingsZoneSettings": {
            "properties": {
                "nfsv4_allow_numeric_ids": {
                    "description": "Send owners/groups as UIDs/GIDs when lookups fail or if no_names=1 (v4)",
                    "type": "boolean"
                },
                "nfsv4_domain": {
                    "description": "The domain or realm used to associate users and groups.",
                    "type": "string"
                },
                "nfsv4_no_domain": {
                    "description": "Send owners/groups without domainname (v4)",
                    "type": "boolean"
                },
                "nfsv4_no_domain_uids": {
                    "description": "Send UIDs/GIDs without domainname (v4)",
                    "type": "boolean"
                },
                "nfsv4_no_names": {
                    "description": "Always send owners/groups as UIDs/GIDs (v4)",
                    "type": "boolean"
                },
                "nfsv4_replace_domain": {
                    "description": "Replace owner/group domain with nfs domainname. (v4)",
                    "type": "boolean"
                },
                "zone": {
                    "description": "The zone in which these settings apply",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnDrives": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnDrivesNode",
                        "description": "Information about this node's drives."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesDriveidFirmware": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnDrivesDriveidFirmwareNode",
                        "description": "Information about this node's drive firmware."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesDriveidFirmwareNode": {
            "properties": {
                "drives": {
                    "description": "List of the firmware revisions on the drives in this node.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnDrivesDriveidFirmwareNodeDrive",
                        "description": "Drive firmware information."
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesDriveidFirmwareNodeDrive": {
            "properties": {
                "baynum": {
                    "description": "Numerical representation of this drive's bay.",
                    "type": "integer"
                },
                "current_firmware": {
                    "description": "This drive's current firmware revision",
                    "type": "string"
                },
                "desired_firmware": {
                    "description": "This drive's desired firmware revision.",
                    "type": "string"
                },
                "devname": {
                    "description": "This drive's device name.",
                    "type": "string"
                },
                "lnum": {
                    "description": "This drive's logical drive number in IFS.",
                    "type": "integer"
                },
                "locnstr": {
                    "description": "String representation of this drive's physical location.",
                    "type": "string"
                },
                "model": {
                    "description": "This drive's manufacturer and model.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesDriveidFirmwareUpdate": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnDrivesDriveidFirmwareUpdateNode",
                        "description": "Drive firmware update information."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesDriveidFirmwareUpdateItem": {
            "description": "Drive firmware update information.",
            "properties": {
                "cluster_wide": {
                    "description": "Indicates whether this is a cluster wide drive firwmare update or not",
                    "type": "boolean"
                }
            },
            "required": [
                "cluster_wide"
            ],
            "type": "object"
        },
        "NodesLnnDrivesDriveidFirmwareUpdateNode": {
            "properties": {
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/NodesLnnDrivesDriveidFirmwareUpdateNodeStatus",
                    "description": "Drive firmware update status information."
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesDriveidFirmwareUpdateNodeStatus": {
            "properties": {
                "failed": {
                    "description": "The number of drives that did not successfully complete firmware updates update on the node.",
                    "type": "integer"
                },
                "finish_time": {
                    "description": "Time when drive firmware update finished on node.",
                    "type": "string"
                },
                "remaining": {
                    "description": "Number of drives remaining to be updated on node.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "Time when drive firmware update started on node.",
                    "type": "string"
                },
                "status": {
                    "description": "Overall status of this nodes firmware updates.",
                    "type": "string"
                },
                "updated": {
                    "description": "The number of drives that completed firmware updates on the node.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesDriveidFormatItem": {
            "description": "Drive purpose information.",
            "properties": {
                "purpose": {
                    "description": "The purpose to which this drive should be formatted. If not specified, defaults to 'None', which will be automatically purposed based on node configuration and drive type.",
                    "required": false,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesDriveidPurposeItem": {
            "description": "Drive purpose information.",
            "properties": {
                "purpose": {
                    "description": "The purpose to which this drive should be assigned. This field is required for the 'purpose' action.",
                    "type": "string"
                }
            },
            "required": [
                "purpose"
            ],
            "type": "object"
        },
        "NodesLnnDrivesNode": {
            "properties": {
                "drives": {
                    "description": "List of the drives in this node.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnDrivesNodeDrive",
                        "description": "Drive information."
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesNodeDrive": {
            "properties": {
                "baynum": {
                    "description": "Numerical representation of this drive's bay.",
                    "type": "integer"
                },
                "blocks": {
                    "description": "Number of blocks on this drive.",
                    "type": "integer"
                },
                "chassis": {
                    "description": "The chassis number which contains this drive.",
                    "type": "integer"
                },
                "devname": {
                    "description": "This drive's device name.",
                    "type": "string"
                },
                "firmware": {
                    "$ref": "#/definitions/NodesLnnDrivesNodeDriveFirmware",
                    "description": "Drive firmware information."
                },
                "handle": {
                    "description": "Drive_d's handle representation for this drive",
                    "type": "integer"
                },
                "interface_type": {
                    "description": "String representtation of this drive's interface type.",
                    "type": "string"
                },
                "lnum": {
                    "description": "This drive's logical drive number in IFS.",
                    "type": "integer"
                },
                "locnstr": {
                    "description": "String representation of this drive's physical location.",
                    "type": "string"
                },
                "logical_block_length": {
                    "description": "Size of a logical block on this drive.",
                    "type": "integer"
                },
                "media_type": {
                    "description": "String representation of this drive's media type.",
                    "type": "string"
                },
                "model": {
                    "description": "This drive's manufacturer and model.",
                    "type": "string"
                },
                "physical_block_length": {
                    "description": "Size of a physical block on this drive.",
                    "type": "integer"
                },
                "present": {
                    "description": "Indicates whether this drive is physically present in the node.",
                    "type": "boolean"
                },
                "purpose": {
                    "description": "This drive's purpose in the DRV state machine.",
                    "type": "string"
                },
                "purpose_description": {
                    "description": "Description of this drive's purpose.",
                    "type": "string"
                },
                "serial": {
                    "description": "Serial number for this drive.",
                    "type": "string"
                },
                "ui_state": {
                    "description": "This drive's state as presented to the UI.",
                    "type": "string"
                },
                "wwn": {
                    "description": "The drive's 'worldwide name' from its NAA identifiers.",
                    "type": "string"
                },
                "x_loc": {
                    "description": "This drive's x-axis grid location.",
                    "type": "integer"
                },
                "y_loc": {
                    "description": "This drive's y-axis grid location.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesNodeDriveFirmware": {
            "properties": {
                "current_firmware": {
                    "description": "This drive's current firmware revision",
                    "type": "string"
                },
                "desired_firmware": {
                    "description": "This drive's desired firmware revision.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesPurposelist": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnDrivesPurposelistNode",
                        "description": "Information about this node's drive purposes."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesPurposelistNode": {
            "properties": {
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "purposes": {
                    "description": "List of the drive purposes available on this node.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnDrivesPurposelistNodePurpose",
                        "description": "Purpose information."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NodesLnnDrivesPurposelistNodePurpose": {
            "properties": {
                "purpose": {
                    "description": "String representation of this purpose for API use.",
                    "type": "string"
                },
                "purpose_description": {
                    "description": "A description of this purpose.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnHardware": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnHardwareNode",
                        "description": "Node hardware identifying information (static)."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnHardwareNode": {
            "properties": {
                "chassis": {
                    "description": "Name of this node's chassis.",
                    "type": "string"
                },
                "chassis_code": {
                    "description": "Chassis code of this node (1U, 2U, etc.).",
                    "type": "string"
                },
                "chassis_count": {
                    "description": "Number of chassis making up this node.",
                    "type": "string"
                },
                "class": {
                    "description": "Class of this node (storage, accelerator, etc.).",
                    "type": "string"
                },
                "configuration_id": {
                    "description": "Node configuration ID.",
                    "type": "string"
                },
                "cpu": {
                    "description": "Manufacturer and model of this node's CPU.",
                    "type": "string"
                },
                "disk_controller": {
                    "description": "Manufacturer and model of this node's disk controller.",
                    "type": "string"
                },
                "disk_expander": {
                    "description": "Manufacturer and model of this node's disk expander.",
                    "type": "string"
                },
                "family_code": {
                    "description": "Family code of this node (X, S, NL, etc.).",
                    "type": "string"
                },
                "flash_drive": {
                    "description": "Manufacturer, model, and device id of this node's flash drive.",
                    "type": "string"
                },
                "generation_code": {
                    "description": "Generation code of this node.",
                    "type": "string"
                },
                "hwgen": {
                    "description": "Isilon hardware generation name.",
                    "type": "string"
                },
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "imb_version": {
                    "description": "Version of this node's Isilon Management Board.",
                    "type": "string"
                },
                "infiniband": {
                    "description": "Infiniband card type.",
                    "type": "string"
                },
                "lcd_version": {
                    "description": "Version of the LCD panel.",
                    "type": "string"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "motherboard": {
                    "description": "Manufacturer and model of this node's motherboard.",
                    "type": "string"
                },
                "net_interfaces": {
                    "description": "Description of all this node's network interfaces.",
                    "type": "string"
                },
                "nvram": {
                    "description": "Manufacturer and model of this node's NVRAM board.",
                    "type": "string"
                },
                "powersupplies": {
                    "description": "Description strings for each power supply on this node.",
                    "items": {
                        "description": "Manufacturer and firmware of this power supply.",
                        "type": "string"
                    },
                    "type": "array"
                },
                "processor": {
                    "description": "Number of processors and cores on this node.",
                    "type": "string"
                },
                "product": {
                    "description": "Isilon product name.",
                    "type": "string"
                },
                "ram": {
                    "description": "Size of RAM in bytes.",
                    "type": "integer"
                },
                "serial_number": {
                    "description": "Serial number of this node.",
                    "type": "string"
                },
                "series": {
                    "description": "Series of this node (X, I, NL, etc.).",
                    "type": "string"
                },
                "storage_class": {
                    "description": "Storage class of this node (storage or diskless).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnPartitions": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnPartitionsNode",
                        "description": "Node partition information."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnPartitionsNode": {
            "properties": {
                "count": {
                    "description": "Count of how many partitions are included.",
                    "type": "integer"
                },
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "partitions": {
                    "description": "Partition information.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnPartitionsNodePartition",
                        "description": "Node partition information."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NodesLnnPartitionsNodePartition": {
            "properties": {
                "block_size": {
                    "description": "The block size used for the reported partition information.",
                    "type": "integer"
                },
                "capacity": {
                    "description": "Total blocks on this file system partition.",
                    "type": "integer"
                },
                "component_devices": {
                    "description": "Comma separated list of devices used for this file system partition.",
                    "type": "string"
                },
                "mount_point": {
                    "description": "Directory on which this partition is mounted.",
                    "type": "string"
                },
                "percent_used": {
                    "description": "Used blocks on this file system partition, expressed as a percentage.",
                    "type": "string"
                },
                "statfs": {
                    "$ref": "#/definitions/NodesLnnPartitionsNodePartitionStatfs",
                    "description": "System partition details as provided by statfs(2)."
                },
                "used": {
                    "description": "Used blocks on this file system partition.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnPartitionsNodePartitionStatfs": {
            "properties": {
                "f_bavail": {
                    "description": "Free blocks available to non-superuser on this partition.",
                    "type": "integer"
                },
                "f_bfree": {
                    "description": "Free blocks on this partition.",
                    "type": "integer"
                },
                "f_blocks": {
                    "description": "Total data blocks on this partition.",
                    "type": "integer"
                },
                "f_bsize": {
                    "description": "Filesystem fragment size; block size in OneFS.",
                    "type": "integer"
                },
                "f_ffree": {
                    "description": "Free file nodes avail to non-superuser.",
                    "type": "integer"
                },
                "f_files": {
                    "description": "Total file nodes in filesystem.",
                    "type": "integer"
                },
                "f_flags": {
                    "description": "Mount exported flags.",
                    "type": "integer"
                },
                "f_fstypename": {
                    "description": "File system type name.",
                    "type": "string"
                },
                "f_iosize": {
                    "description": "Optimal transfer block size.",
                    "type": "integer"
                },
                "f_mntfromname": {
                    "description": "Names of devices this partition is mounted from.",
                    "type": "string"
                },
                "f_mntonname": {
                    "description": "Directory this partition is mounted to.",
                    "type": "string"
                },
                "f_namemax": {
                    "description": "Maximum filename length.",
                    "type": "integer"
                },
                "f_owner": {
                    "description": "UID of user that mounted the filesystem.",
                    "type": "integer"
                },
                "f_type": {
                    "description": "Type of filesystem.",
                    "type": "integer"
                },
                "f_version": {
                    "description": "statfs() structure version number.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnSensors": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnSensorsNode",
                        "description": "Node sensor information (hardware reported)."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnSensorsNode": {
            "properties": {
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "sensors": {
                    "description": "This node's sensor information.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnSensorsNodeSensor",
                        "description": "Node sensor information."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NodesLnnSensorsNodeSensor": {
            "properties": {
                "count": {
                    "description": "The count of values in this sensor group.",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of this sensor group.",
                    "type": "string"
                },
                "values": {
                    "description": "The list of specific sensor value info in this sensor group.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnSensorsNodeSensorValue",
                        "description": "Specific sensor value info."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NodesLnnSensorsNodeSensorValue": {
            "properties": {
                "desc": {
                    "description": "The descriptive name of this sensor.",
                    "type": "string"
                },
                "name": {
                    "description": "The identifier name of this sensor.",
                    "type": "string"
                },
                "units": {
                    "description": "The units of this sensor.",
                    "type": "string"
                },
                "value": {
                    "description": "The value of this sensor.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnState": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnStateNode",
                        "description": "Node state information (reported and modifiable)."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnStateNode": {
            "properties": {
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "readonly": {
                    "$ref": "#/definitions/NodesLnnStateNodeReadonly",
                    "description": "Node readonly state."
                },
                "servicelight": {
                    "$ref": "#/definitions/NodesLnnStateNodeServicelight",
                    "description": "Node service light state."
                },
                "smartfail": {
                    "$ref": "#/definitions/NodesLnnStateNodeSmartfail",
                    "description": "Node smartfail state."
                }
            },
            "type": "object"
        },
        "NodesLnnStateNodeReadonly": {
            "properties": {
                "allowed": {
                    "description": "The current read-only mode allowed status for the node.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "The current read-only user mode status for the node. NOTE: If read-only mode is currently disallowed for this node, it will remain read/write until read-only mode is allowed again. This value only sets or clears any user-specified requests for read-only mode. If the node has been placed into read-only mode by the system, it will remain in read-only mode until the system conditions which triggered read-only mode have cleared.",
                    "type": "boolean"
                },
                "mode": {
                    "description": "The current read-only mode status for the node.",
                    "type": "boolean"
                },
                "status": {
                    "description": "The current read-only mode status description for the node.",
                    "type": "string"
                },
                "valid": {
                    "description": "The read-only state values are valid (False = Error).",
                    "type": "boolean"
                },
                "value": {
                    "description": "The current read-only value (enumerated bitfield) for the node.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnStateNodeServicelight": {
            "properties": {
                "enabled": {
                    "description": "The node service light state (True = on).",
                    "type": "boolean"
                },
                "present": {
                    "description": "This node has a service light.",
                    "type": "boolean"
                },
                "supported": {
                    "description": "This node supports a service light.",
                    "type": "boolean"
                },
                "valid": {
                    "description": "The node service light state is valid (False = Error).",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ],
            "type": "object"
        },
        "NodesLnnStateNodeSmartfail": {
            "properties": {
                "dead": {
                    "description": "This node is dead (dead_devs).",
                    "type": "boolean"
                },
                "down": {
                    "description": "This node is down (down_devs).",
                    "type": "boolean"
                },
                "in_cluster": {
                    "description": "This node is in the cluster (all_devs).",
                    "type": "boolean"
                },
                "readonly": {
                    "description": "This node is readonly (ro_devs).",
                    "type": "boolean"
                },
                "shutdown_readonly": {
                    "description": "This node is shutdown readonly (down_devs).",
                    "type": "boolean"
                },
                "smartfailed": {
                    "description": "This node is smartfailed (soft_devs).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NodesLnnStateReadonly": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnStateReadonlyNode",
                        "description": "Node readonly state."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnStateReadonlyExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NodesLnnStateReadonly"
                },
                {
                    "description": "Node readonly state.",
                    "properties": {
                        "allowed": {
                            "description": "The current read-only mode allowed status for the node.",
                            "type": "boolean"
                        },
                        "enabled": {
                            "description": "The current read-only user mode status for the node. NOTE: If read-only mode is currently disallowed for this node, it will remain read/write until read-only mode is allowed again. This value only sets or clears any user-specified requests for read-only mode. If the node has been placed into read-only mode by the system, it will remain in read-only mode until the system conditions which triggered read-only mode have cleared.",
                            "type": "boolean"
                        },
                        "mode": {
                            "description": "The current read-only mode status for the node.",
                            "type": "boolean"
                        },
                        "status": {
                            "description": "The current read-only mode status description for the node.",
                            "type": "string"
                        },
                        "valid": {
                            "description": "The read-only state values are valid (False = Error).",
                            "type": "boolean"
                        },
                        "value": {
                            "description": "The current read-only value (enumerated bitfield) for the node.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NodesLnnStateReadonlyNode": {
            "properties": {
                "allowed": {
                    "description": "The current read-only mode allowed status for the node.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "The current read-only user mode status for the node. NOTE: If read-only mode is currently disallowed for this node, it will remain read/write until read-only mode is allowed again. This value only sets or clears any user-specified requests for read-only mode. If the node has been placed into read-only mode by the system, it will remain in read-only mode until the system conditions which triggered read-only mode have cleared.",
                    "type": "boolean"
                },
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "mode": {
                    "description": "The current read-only mode status for the node.",
                    "type": "boolean"
                },
                "status": {
                    "description": "The current read-only mode status description for the node.",
                    "type": "string"
                },
                "valid": {
                    "description": "The read-only state values are valid (False = Error).",
                    "type": "boolean"
                },
                "value": {
                    "description": "The current read-only value (enumerated bitfield) for the node.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnStateServicelight": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnStateServicelightNode",
                        "description": "Node service light state."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnStateServicelightExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NodesLnnStateServicelight"
                },
                {
                    "description": "Node service light state.",
                    "properties": {
                        "enabled": {
                            "description": "The node service light state (True = on).",
                            "type": "boolean"
                        },
                        "present": {
                            "description": "This node has a service light.",
                            "type": "boolean"
                        },
                        "supported": {
                            "description": "This node supports a service light.",
                            "type": "boolean"
                        },
                        "valid": {
                            "description": "The node service light state is valid (False = Error).",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NodesLnnStateServicelightNode": {
            "properties": {
                "enabled": {
                    "description": "The node service light state (True = on).",
                    "type": "boolean"
                },
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "present": {
                    "description": "This node has a service light.",
                    "type": "boolean"
                },
                "supported": {
                    "description": "This node supports a service light.",
                    "type": "boolean"
                },
                "valid": {
                    "description": "The node service light state is valid (False = Error).",
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ],
            "type": "object"
        },
        "NodesLnnStateSmartfail": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnStateSmartfailNode",
                        "description": "Node smartfail state."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnStateSmartfailExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NodesLnnStateSmartfail"
                },
                {
                    "description": "Node smartfail state.",
                    "properties": {
                        "dead": {
                            "description": "This node is dead (dead_devs).",
                            "type": "boolean"
                        },
                        "down": {
                            "description": "This node is down (down_devs).",
                            "type": "boolean"
                        },
                        "in_cluster": {
                            "description": "This node is in the cluster (all_devs).",
                            "type": "boolean"
                        },
                        "readonly": {
                            "description": "This node is readonly (ro_devs).",
                            "type": "boolean"
                        },
                        "shutdown_readonly": {
                            "description": "This node is shutdown readonly (down_devs).",
                            "type": "boolean"
                        },
                        "smartfailed": {
                            "description": "This node is smartfailed (soft_devs).",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NodesLnnStateSmartfailNode": {
            "properties": {
                "dead": {
                    "description": "This node is dead (dead_devs).",
                    "type": "boolean"
                },
                "down": {
                    "description": "This node is down (down_devs).",
                    "type": "boolean"
                },
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "in_cluster": {
                    "description": "This node is in the cluster (all_devs).",
                    "type": "boolean"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "readonly": {
                    "description": "This node is readonly (ro_devs).",
                    "type": "boolean"
                },
                "shutdown_readonly": {
                    "description": "This node is shutdown readonly (down_devs).",
                    "type": "boolean"
                },
                "smartfailed": {
                    "description": "This node is smartfailed (soft_devs).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NodesLnnStatus": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnStatusNode",
                        "description": "Node status information (hardware reported)."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusBatterystatus": {
            "properties": {
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/NodesLnnStatusBatterystatusNode",
                        "description": "Battery status information."
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusBatterystatusNode": {
            "properties": {
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "last_test_time1": {
                    "description": "The last battery test time for battery 1.",
                    "type": "string"
                },
                "last_test_time2": {
                    "description": "The last battery test time for battery 2.",
                    "type": "string"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "next_test_time1": {
                    "description": "The next checkup for battery 1.",
                    "type": "string"
                },
                "next_test_time2": {
                    "description": "The next checkup for battery 2.",
                    "type": "string"
                },
                "present": {
                    "description": "Node has battery status.",
                    "type": "boolean"
                },
                "result1": {
                    "description": "The result of the last battery test for battery 1.",
                    "type": "string"
                },
                "result2": {
                    "description": "The result of the last battery test for battery 2.",
                    "type": "string"
                },
                "status1": {
                    "description": "The status of battery 1.",
                    "type": "string"
                },
                "status2": {
                    "description": "The status of battery 2.",
                    "type": "string"
                },
                "supported": {
                    "description": "Node supports battery status.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusNode": {
            "properties": {
                "batterystatus": {
                    "$ref": "#/definitions/NodesLnnStatusNodeBatterystatus",
                    "description": "Battery status information."
                },
                "capacity": {
                    "description": "Storage capacity of this node.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnStatusNodeCapacityItem",
                        "description": "Node capacity information."
                    },
                    "type": "array"
                },
                "cpu": {
                    "$ref": "#/definitions/NodesLnnStatusNodeCpu",
                    "description": "CPU status information for this node."
                },
                "id": {
                    "description": "Node ID (Device Number) of this node.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "Logical Node Number (LNN) of this node.",
                    "type": "integer"
                },
                "nvram": {
                    "$ref": "#/definitions/NodesLnnStatusNodeNvram",
                    "description": "Node NVRAM information."
                },
                "powersupplies": {
                    "$ref": "#/definitions/NodesLnnStatusNodePowersupplies",
                    "description": "Information about this node's power supplies."
                },
                "release": {
                    "description": "OneFS release.",
                    "type": "string"
                },
                "uptime": {
                    "description": "Seconds this node has been online.",
                    "type": "integer"
                },
                "version": {
                    "description": "OneFS version.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusNodeBatterystatus": {
            "properties": {
                "last_test_time1": {
                    "description": "The last battery test time for battery 1.",
                    "type": "string"
                },
                "last_test_time2": {
                    "description": "The last battery test time for battery 2.",
                    "type": "string"
                },
                "next_test_time1": {
                    "description": "The next checkup for battery 1.",
                    "type": "string"
                },
                "next_test_time2": {
                    "description": "The next checkup for battery 2.",
                    "type": "string"
                },
                "present": {
                    "description": "Node has battery status.",
                    "type": "boolean"
                },
                "result1": {
                    "description": "The result of the last battery test for battery 1.",
                    "type": "string"
                },
                "result2": {
                    "description": "The result of the last battery test for battery 2.",
                    "type": "string"
                },
                "status1": {
                    "description": "The status of battery 1.",
                    "type": "string"
                },
                "status2": {
                    "description": "The status of battery 2.",
                    "type": "string"
                },
                "supported": {
                    "description": "Node supports battery status.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusNodeCapacityItem": {
            "properties": {
                "bytes": {
                    "description": "Total device storage bytes.",
                    "type": "integer"
                },
                "count": {
                    "description": "Total device count.",
                    "type": "integer"
                },
                "type": {
                    "description": "Device type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusNodeCpu": {
            "properties": {
                "model": {
                    "description": "Manufacturer model description of this CPU.",
                    "type": "string"
                },
                "overtemp": {
                    "description": "CPU overtemp state.",
                    "type": "string"
                },
                "proc": {
                    "description": "Type of processor and core of this CPU.",
                    "type": "string"
                },
                "speed_limit": {
                    "description": "CPU throttling (expressed as a percentage).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusNodeNvram": {
            "properties": {
                "batteries": {
                    "description": "This node's NVRAM battery status information.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnStatusNodeNvramBattery",
                        "description": "NVRAM battery status information."
                    },
                    "type": "array"
                },
                "battery_count": {
                    "description": "This node's NVRAM battery count.",
                    "type": "integer"
                },
                "charge_status": {
                    "description": "This node's NVRAM battery charge status, as a color.",
                    "type": "string"
                },
                "charge_status_number": {
                    "description": "This node's NVRAM battery charge status, as a number.",
                    "type": "integer"
                },
                "device": {
                    "description": "This node's NVRAM device name with path.",
                    "type": "string"
                },
                "present": {
                    "description": "This node has NVRAM.",
                    "type": "boolean"
                },
                "present_flash": {
                    "description": "This node has NVRAM with flash storage.",
                    "type": "boolean"
                },
                "present_size": {
                    "description": "The size of the NVRAM, in bytes.",
                    "type": "integer"
                },
                "present_type": {
                    "description": "This node's NVRAM type.",
                    "type": "string"
                },
                "ship_mode": {
                    "description": "This node's current ship mode state for NVRAM batteries.",
                    "type": "integer"
                },
                "supported": {
                    "description": "This node supports NVRAM.",
                    "type": "boolean"
                },
                "supported_flash": {
                    "description": "This node supports NVRAM with flash storage.",
                    "type": "boolean"
                },
                "supported_size": {
                    "description": "The maximum size of the NVRAM, in bytes.",
                    "type": "integer"
                },
                "supported_type": {
                    "description": "This node's supported NVRAM type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusNodeNvramBattery": {
            "properties": {
                "color": {
                    "description": "The current status color of the NVRAM battery.",
                    "type": "string"
                },
                "id": {
                    "description": "Identifying index for the NVRAM battery.",
                    "type": "integer"
                },
                "status": {
                    "description": "The current status message of the NVRAM battery.",
                    "type": "string"
                },
                "voltage": {
                    "description": "The current voltage of the NVRAM battery.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusNodePowersupplies": {
            "properties": {
                "count": {
                    "description": "Count of how many power supplies are supported.",
                    "type": "integer"
                },
                "failures": {
                    "description": "Count of how many power supplies have failed.",
                    "type": "integer"
                },
                "has_cff": {
                    "description": "Does this node have a CFF power supply.",
                    "type": "boolean"
                },
                "status": {
                    "description": "A descriptive status string for this node's power supplies.",
                    "type": "string"
                },
                "supplies": {
                    "description": "List of this node's power supplies.",
                    "items": {
                        "$ref": "#/definitions/NodesLnnStatusNodePowersuppliesSupply",
                        "description": "Power supply information."
                    },
                    "type": "array"
                },
                "supports_cff": {
                    "description": "Does this node support CFF power supplies.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NodesLnnStatusNodePowersuppliesSupply": {
            "properties": {
                "chassis": {
                    "description": "Which node chassis is this power supply in.",
                    "type": "integer"
                },
                "firmware": {
                    "description": "The current firmware revision of this power supply.",
                    "type": "string"
                },
                "good": {
                    "description": "Is this power supply in a failure state.",
                    "type": "string"
                },
                "id": {
                    "description": "Identifying index for this power supply.",
                    "type": "integer"
                },
                "name": {
                    "description": "Complete identifying string for this power supply.",
                    "type": "string"
                },
                "status": {
                    "description": "A descriptive status string for this power supply.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of this power supply.",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "NtpServer": {
            "description": "NTP server.",
            "properties": {
                "key": {
                    "description": "Key value from key_file that maps to this server.",
                    "type": "string"
                }
            },
            "required": [
                "key"
            ],
            "type": "object"
        },
        "NtpServerCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/NtpServer"
                },
                {
                    "description": "NTP server.",
                    "properties": {
                        "name": {
                            "description": "NTP server name.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "NtpServerExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NtpServer"
                },
                {
                    "properties": {
                        "id": {
                            "description": "Field ID.",
                            "type": "string"
                        },
                        "name": {
                            "description": "NTP server name.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "key",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "NtpServers": {
            "properties": {
                "servers": {
                    "items": {
                        "$ref": "#/definitions/NtpServerExtended",
                        "description": "NTP server."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NtpServersExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/NtpServers"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NtpSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/NtpSettingsSettings",
                    "description": "NTP settings."
                }
            },
            "type": "object"
        },
        "NtpSettingsSettings": {
            "properties": {
                "chimers": {
                    "description": "Number of nodes that will contact the NTP servers.",
                    "minimum": 1,
                    "type": "integer"
                },
                "excluded": {
                    "description": "Node number (LNN) for nodes excluded from chimer duty.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "key_file": {
                    "description": "Path to NTP key file within /ifs.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersAd": {
            "description": "An ADS provider of authentication.",
            "properties": {
                "allocate_gids": {
                    "description": "Allocate GIDs for unmapped AD groups.",
                    "type": "boolean"
                },
                "allocate_uids": {
                    "description": "Enables allocation of UIDs for unmapped AD users.",
                    "type": "boolean"
                },
                "assume_default_domain": {
                    "description": "Enables lookup of unqualified user names in the primary domain.",
                    "type": "boolean"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "controller_time": {
                    "description": "The domain controllers current time.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "domain_controller": {
                    "description": "A preferred domain controller to which the authentication service should send requests",
                    "type": "string"
                },
                "domain_offline_alerts": {
                    "description": "Send an alert if the domain goes offline.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "ignore_all_trusts": {
                    "description": "Ignores all trusted domains.",
                    "type": "boolean"
                },
                "ignored_trusted_domains": {
                    "description": "Includes trusted domains when ignore_all_trusts false.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "include_trusted_domains": {
                    "description": "Includes trusted domains when ignore_all_trusts is true.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "instance": {
                    "description": "Specifies Active Directory provider instnace.",
                    "type": "string"
                },
                "ldap_sign_and_seal": {
                    "description": "Uses encryption and signing on LDAP requests.",
                    "type": "boolean"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "lookup_domains": {
                    "description": "Limits user and group lookups to the specified domains.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lookup_groups": {
                    "description": "Looks up AD groups in other providers before allocating a GID.",
                    "type": "boolean"
                },
                "lookup_normalize_groups": {
                    "description": "Normalizes AD group names to lowercase before lookup.",
                    "type": "boolean"
                },
                "lookup_normalize_users": {
                    "description": "Normalize AD user names to lowercase before lookup.",
                    "type": "boolean"
                },
                "lookup_users": {
                    "description": "Looks up AD users in other providers before allocating a UID.",
                    "type": "boolean"
                },
                "machine_name": {
                    "description": "Specifies name to join AD as.",
                    "type": "string"
                },
                "machine_password_changes": {
                    "description": "Enables periodic changes of machine password for security.",
                    "type": "boolean"
                },
                "machine_password_lifespan": {
                    "description": "Sets maximum age of a password in seconds.",
                    "maximum": 31536000,
                    "minimum": 3600,
                    "type": "integer"
                },
                "node_dc_affinity": {
                    "description": "Specifies the domain controller to which the node should affinitize",
                    "type": "string"
                },
                "node_dc_affinity_timeout": {
                    "description": "Specifies the timeout for the local node affinity to a domain controller",
                    "type": "integer"
                },
                "nss_enumeration": {
                    "description": "Enables the Active Directory provider to respond to getpwent and getgrent requests.",
                    "type": "boolean"
                },
                "password": {
                    "description": "Password used during domain join.",
                    "type": "string"
                },
                "reset_schannel": {
                    "description": "Reset the secure channel to the primary domain.",
                    "type": "boolean"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "sfu_support": {
                    "description": "Specifies whether to support RFC 2307 attributes for Windows domain controllers.",
                    "enum": [
                        "none",
                        "rfc2307"
                    ],
                    "type": "string"
                },
                "spns": {
                    "description": "Currently configured SPNs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "store_sfu_mappings": {
                    "description": "Stores SFU mappings permanently in the ID mapper.",
                    "type": "boolean"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user": {
                    "description": "User name with permission to join machine to the given domain.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersAdCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersAd"
                },
                {
                    "description": "An ADS provider of authentication.",
                    "properties": {
                        "account": {
                            "description": "Machine account name to use in AD. Default is the cluster name.",
                            "type": "string"
                        },
                        "dns_domain": {
                            "description": "The DNS search domain.  Set if DNS search domain differs.",
                            "type": "string"
                        },
                        "groupnet": {
                            "description": "Groupnet identifier.",
                            "type": "string"
                        },
                        "kerberos_hdfs_spn": {
                            "description": "SPN for using Kerberized HDFS.",
                            "type": "boolean"
                        },
                        "kerberos_nfs_spn": {
                            "description": "SPN for using Kerberized NFS.",
                            "type": "boolean"
                        },
                        "name": {
                            "description": "Specifies Active Directory provider name.",
                            "type": "string"
                        },
                        "organizational_unit": {
                            "description": "The organizational unit.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "user",
                        "password",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "ProvidersAdExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersAd"
                },
                {
                    "properties": {
                        "forest": {
                            "description": "The active directory forest.",
                            "type": "string"
                        },
                        "groupnet": {
                            "description": "Groupnet identifier.",
                            "type": "string"
                        },
                        "hostname": {
                            "description": "The fully qualified hostname stored in the machine account.",
                            "type": "string"
                        },
                        "id": {
                            "description": "Specifies Active Directory provider ID.",
                            "type": "string"
                        },
                        "machine_account": {
                            "description": "The SAM account name of the machine account.",
                            "type": "string"
                        },
                        "name": {
                            "description": "Specifies Active Directory provider name.",
                            "type": "string"
                        },
                        "netbios_domain": {
                            "description": "NetBIOS domain name associated with the machine account.",
                            "type": "string"
                        },
                        "primary_domain": {
                            "description": "The AD domain to which the provider is joined.",
                            "type": "string"
                        },
                        "site": {
                            "description": "The active directory site.",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status of the provider.",
                            "type": "string"
                        },
                        "system": {
                            "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ProvidersAds": {
            "properties": {
                "ads": {
                    "items": {
                        "$ref": "#/definitions/ProvidersAdExtended",
                        "description": "An ADS provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersAdsIdControllers": {
            "properties": {
                "controllers": {
                    "items": {
                        "$ref": "#/definitions/ProvidersAdsIdControllersController",
                        "description": "A controller for an ADS provider."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersAdsIdControllersController": {
            "properties": {
                "dc_address": {
                    "description": "The domain controller's address.",
                    "type": "string"
                },
                "dc_name": {
                    "description": "The domain controller's name.",
                    "type": "string"
                },
                "id": {
                    "description": "This field is the same as the domain controller's Address.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersAdsIdDomains": {
            "properties": {
                "domains": {
                    "items": {
                        "$ref": "#/definitions/ProvidersAdsIdDomainsDomain",
                        "description": "An object representing an ADS domain."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersAdsIdDomainsDomain": {
            "properties": {
                "client_site": {
                    "description": "The Nodes Site.",
                    "type": "string"
                },
                "dc_address": {
                    "description": "The domain controller's address.",
                    "type": "string"
                },
                "dc_name": {
                    "description": "The domain controller's name.",
                    "type": "string"
                },
                "dc_site": {
                    "description": "The DC Site.",
                    "type": "string"
                },
                "domain": {
                    "description": "The domain's name.",
                    "type": "string"
                },
                "guid": {
                    "description": "The domain's GUID.",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for every domain returned.",
                    "type": "string"
                },
                "netbios_name": {
                    "description": "The domain's NetBIOS name.",
                    "type": "string"
                },
                "sid": {
                    "description": "The domain's SID.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the domain.",
                    "type": "string"
                },
                "trust_type": {
                    "description": "Specifies the type of trust with this domain.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersAdsIdSearch": {
            "properties": {
                "objects": {
                    "items": {
                        "$ref": "#/definitions/ProvidersAdsIdSearchObject",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersAdsIdSearchObject": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                }
            },
            "type": "object"
        },
        "ProvidersFile": {
            "properties": {
                "file": {
                    "items": {
                        "$ref": "#/definitions/ProvidersFileFileItem",
                        "description": "A file provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersFileFileItem": {
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enables the file provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_file": {
                    "description": "Location of the file containing group information.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "id": {
                    "description": "Specifies file provider ID.",
                    "type": "string"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "modifiable_groups": {
                    "description": "Specifies groups that can be modified in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "modifiable_users": {
                    "description": "Specifies users that can be modified in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Specifies file provider name.",
                    "type": "string"
                },
                "netgroup_file": {
                    "description": "Path to a netgroups replacement file.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "password_file": {
                    "description": "Location of the file containing user information.",
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "restrict_modifiable": {
                    "description": "Check the provider for filtered lists of modifiable and unmodifiable users and groups.",
                    "type": "boolean"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                    "type": "boolean"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unmodifiable_groups": {
                    "description": "Specifies a group that cannot be modified by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unmodifiable_users": {
                    "description": "Specifies a user that cannot be modified by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersFileIdParams": {
            "description": "A file provider of authentication.",
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enables the file provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_file": {
                    "description": "Location of the file containing group information.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "modifiable_groups": {
                    "description": "Specifies groups that can be modified in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "modifiable_users": {
                    "description": "Specifies users that can be modified in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Specifies file provider name.",
                    "type": "string"
                },
                "netgroup_file": {
                    "description": "Path to a netgroups replacement file.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "password_file": {
                    "description": "Location of the file containing user information.",
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "restrict_modifiable": {
                    "description": "Check the provider for filtered lists of modifiable and unmodifiable users and groups.",
                    "type": "boolean"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unmodifiable_groups": {
                    "description": "Specifies a group that cannot be modified by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unmodifiable_users": {
                    "description": "Specifies a user that cannot be modified by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5": {
            "properties": {
                "krb5": {
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5Krb5Item",
                        "description": "A Kerberos provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5Extended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersKrb5"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "ProvidersKrb5IdParams": {
            "description": "A Kerberos provider of authentication.",
            "properties": {
                "keytab_entries": {
                    "description": "Service principal names to register",
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5IdParamsKeytabEntry",
                        "description": "Krb5 SPN Key info"
                    },
                    "type": "array"
                },
                "keytab_file": {
                    "description": "Path to a keytab file to import",
                    "type": "string"
                },
                "manual_keying": {
                    "description": "Indicates keys are managed manually rather than with kadmin",
                    "type": "boolean"
                },
                "name": {
                    "description": "Specifies Kerberos provider name.",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "realm": {
                    "description": "Name of realm we are joined to",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "user": {
                    "description": "Name of the user to use for kadmin tasks",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5IdParamsKeytabEntry": {
            "properties": {
                "encryption": {
                    "description": "List of encryption types.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "kvno": {
                    "description": "Version number of the SPN key.",
                    "type": "integer"
                },
                "spn": {
                    "description": "The service principal name.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Time the key was created.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5Item": {
            "description": "A Kerberos provider of authentication.",
            "properties": {
                "groupnet": {
                    "description": "Groupnet identifier.",
                    "type": "string"
                },
                "keytab_entries": {
                    "description": "Service principal names to register",
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5IdParamsKeytabEntry",
                        "description": "Krb5 SPN Key info"
                    },
                    "type": "array"
                },
                "keytab_file": {
                    "description": "Path to a keytab file to import",
                    "type": "string"
                },
                "manual_keying": {
                    "description": "Indicates keys are managed manually rather than with kadmin",
                    "type": "boolean"
                },
                "name": {
                    "description": "Specifies Kerberos provider name.",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "realm": {
                    "description": "Name of realm we are joined to",
                    "type": "string"
                },
                "user": {
                    "description": "Name of the user to use for kadmin tasks",
                    "type": "string"
                }
            },
            "required": [
                "realm"
            ],
            "type": "object"
        },
        "ProvidersKrb5Krb5Item": {
            "properties": {
                "groupnet": {
                    "description": "Groupnet identifier.",
                    "type": "string"
                },
                "id": {
                    "description": "Specifies Kerberos provider ID.",
                    "type": "string"
                },
                "keytab_entries": {
                    "description": "Service principal names to register",
                    "items": {
                        "$ref": "#/definitions/ProvidersKrb5IdParamsKeytabEntry",
                        "description": "Krb5 SPN Key info"
                    },
                    "type": "array"
                },
                "keytab_file": {
                    "description": "Path to a keytab file to import",
                    "type": "string"
                },
                "manual_keying": {
                    "description": "Indicates keys are managed manually rather than with kadmin",
                    "type": "boolean"
                },
                "name": {
                    "description": "Specifies Kerberos provider name.",
                    "type": "string"
                },
                "realm": {
                    "description": "Name of realm we are joined to",
                    "type": "string"
                },
                "recommended_spns": {
                    "description": "Service principal names advised to be populated",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed",
                    "type": "boolean"
                },
                "user": {
                    "description": "Name of the user to use for kadmin tasks",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersKrb5Krb5ItemExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersKrb5Krb5Item"
                },
                {
                    "properties": {
                        "password": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ProvidersLdap": {
            "properties": {
                "ldap": {
                    "items": {
                        "$ref": "#/definitions/ProvidersLdapLdapItem",
                        "description": "An LDAP provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersLdapIdParams": {
            "description": "An LDAP provider of authentication.",
            "properties": {
                "alternate_security_identities_attribute": {
                    "description": "Specifies attribute name used when searching for alternate security identities.",
                    "type": "string"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "balance_servers": {
                    "description": "Makes provider connect to a random server.",
                    "type": "boolean"
                },
                "base_dn": {
                    "description": "Sets root of tree in which to search identities.",
                    "type": "string"
                },
                "bind_dn": {
                    "description": "Sets distinguished name used when binding to LDAP server.",
                    "type": "string"
                },
                "bind_mechanism": {
                    "description": "Bind mechanism to use when connecting to an LDAP server; 'simple' is the only supported option.",
                    "enum": [
                        "simple",
                        "gssapi",
                        "digest-md5"
                    ],
                    "type": "string"
                },
                "bind_password": {
                    "description": "Sets password for distinguished name used when binding to the LDAP server.",
                    "type": "string"
                },
                "bind_timeout": {
                    "description": "Sets timeout in seconds when binding to LDAP server.",
                    "type": "integer"
                },
                "certificate_authority_file": {
                    "description": "Sets path to root certificates file.",
                    "type": "string"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "cn_attribute": {
                    "description": "Specifies canonical name.",
                    "type": "string"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "crypt_password_attribute": {
                    "description": "Sets hashed password value.",
                    "type": "string"
                },
                "email_attribute": {
                    "description": "Sets the LDAP Email attribute.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Enables the LDAP provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gecos_attribute": {
                    "description": "Sets the LDAP GECOS attribute.",
                    "type": "string"
                },
                "gid_attribute": {
                    "description": "Sets the LDAP GID attribute.",
                    "type": "string"
                },
                "group_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for groups.",
                    "type": "string"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_filter": {
                    "description": "Sets LDAP filter for group objects.",
                    "type": "string"
                },
                "group_members_attribute": {
                    "description": "Sets the LDAP Group Members attribute.",
                    "type": "string"
                },
                "group_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "homedir_attribute": {
                    "description": "Sets the LDAP Homedir attribute.",
                    "type": "string"
                },
                "ignore_tls_errors": {
                    "description": "Continues over secure connection even if identity checks fail.",
                    "type": "boolean"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "member_of_attribute": {
                    "description": "Sets the LDAP Query Member Of attribute, which is used for reverse membership queries",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the name of the LDAP provider.",
                    "type": "string"
                },
                "name_attribute": {
                    "description": "Sets the LDAP UID attribute, which is used as the login name.",
                    "type": "string"
                },
                "netgroup_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start the LDAP search for netgroups.",
                    "type": "string"
                },
                "netgroup_filter": {
                    "description": "Sets LDAP filter for netgroup objects.",
                    "type": "string"
                },
                "netgroup_members_attribute": {
                    "description": "Sets the LDAP Netgroup Members attribute.",
                    "type": "string"
                },
                "netgroup_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "netgroup_triple_attribute": {
                    "description": "Sets the LDAP Netgroup Triple attribute.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "nt_password_attribute": {
                    "description": "Sets the LDAP NT Password attribute.",
                    "type": "string"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "require_secure_connection": {
                    "description": "Specifies whether to continue over non-TLS connection.",
                    "type": "boolean"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "search_scope": {
                    "description": "Defines the default depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "search_timeout": {
                    "description": "Sets search timeout period in seconds.",
                    "type": "integer"
                },
                "server_uris": {
                    "description": "Sets server URIs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "shell_attribute": {
                    "description": "Sets the LDAP Shell attribute.",
                    "type": "string"
                },
                "uid_attribute": {
                    "description": "Sets the LDAP UID Number attribute.",
                    "type": "string"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unique_group_members_attribute": {
                    "description": "Sets the LDAP Unique Group Members attribute.",
                    "type": "string"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for users.",
                    "type": "string"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                },
                "user_filter": {
                    "description": "Sets LDAP filter for user objects.",
                    "type": "string"
                },
                "user_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersLdapItem": {
            "description": "An LDAP provider of authentication.",
            "properties": {
                "alternate_security_identities_attribute": {
                    "description": "Specifies attribute name used when searching for alternate security identities.",
                    "type": "string"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "balance_servers": {
                    "description": "Makes provider connect to a random server.",
                    "type": "boolean"
                },
                "base_dn": {
                    "description": "Sets root of tree in which to search identities.",
                    "type": "string"
                },
                "bind_dn": {
                    "description": "Sets distinguished name used when binding to LDAP server.",
                    "type": "string"
                },
                "bind_mechanism": {
                    "description": "Bind mechanism to use when connecting to an LDAP server; 'simple' is the only supported option.",
                    "enum": [
                        "simple",
                        "gssapi",
                        "digest-md5"
                    ],
                    "type": "string"
                },
                "bind_password": {
                    "description": "Sets password for distinguished name used when binding to the LDAP server.",
                    "type": "string"
                },
                "bind_timeout": {
                    "description": "Sets timeout in seconds when binding to LDAP server.",
                    "type": "integer"
                },
                "certificate_authority_file": {
                    "description": "Sets path to root certificates file.",
                    "type": "string"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "cn_attribute": {
                    "description": "Specifies canonical name.",
                    "type": "string"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "crypt_password_attribute": {
                    "description": "Sets hashed password value.",
                    "type": "string"
                },
                "email_attribute": {
                    "description": "Sets the LDAP Email attribute.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Enables the LDAP provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gecos_attribute": {
                    "description": "Sets the LDAP GECOS attribute.",
                    "type": "string"
                },
                "gid_attribute": {
                    "description": "Sets the LDAP GID attribute.",
                    "type": "string"
                },
                "group_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for groups.",
                    "type": "string"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_filter": {
                    "description": "Sets LDAP filter for group objects.",
                    "type": "string"
                },
                "group_members_attribute": {
                    "description": "Sets the LDAP Group Members attribute.",
                    "type": "string"
                },
                "group_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "groupnet": {
                    "description": "Groupnet identifier.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "homedir_attribute": {
                    "description": "Sets the LDAP Homedir attribute.",
                    "type": "string"
                },
                "ignore_tls_errors": {
                    "description": "Continues over secure connection even if identity checks fail.",
                    "type": "boolean"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "member_of_attribute": {
                    "description": "Sets the LDAP Query Member Of attribute, which is used for reverse membership queries",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the name of the LDAP provider.",
                    "type": "string"
                },
                "name_attribute": {
                    "description": "Sets the LDAP UID attribute, which is used as the login name.",
                    "type": "string"
                },
                "netgroup_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start the LDAP search for netgroups.",
                    "type": "string"
                },
                "netgroup_filter": {
                    "description": "Sets LDAP filter for netgroup objects.",
                    "type": "string"
                },
                "netgroup_members_attribute": {
                    "description": "Sets the LDAP Netgroup Members attribute.",
                    "type": "string"
                },
                "netgroup_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "netgroup_triple_attribute": {
                    "description": "Sets the LDAP Netgroup Triple attribute.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "nt_password_attribute": {
                    "description": "Sets the LDAP NT Password attribute.",
                    "type": "string"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "require_secure_connection": {
                    "description": "Specifies whether to continue over non-TLS connection.",
                    "type": "boolean"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "search_scope": {
                    "description": "Defines the default depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "search_timeout": {
                    "description": "Sets search timeout period in seconds.",
                    "type": "integer"
                },
                "server_uris": {
                    "description": "Sets server URIs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "shell_attribute": {
                    "description": "Sets the LDAP Shell attribute.",
                    "type": "string"
                },
                "uid_attribute": {
                    "description": "Sets the LDAP UID Number attribute.",
                    "type": "string"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unique_group_members_attribute": {
                    "description": "Sets the LDAP Unique Group Members attribute.",
                    "type": "string"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for users.",
                    "type": "string"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                },
                "user_filter": {
                    "description": "Sets LDAP filter for user objects.",
                    "type": "string"
                },
                "user_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "base_dn",
                "server_uris",
                "name"
            ],
            "type": "object"
        },
        "ProvidersLdapLdapItem": {
            "properties": {
                "alternate_security_identities_attribute": {
                    "description": "Specifies attribute name used when searching for alternate security identities.",
                    "type": "string"
                },
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "balance_servers": {
                    "description": "Makes provider connect to a random server.",
                    "type": "boolean"
                },
                "base_dn": {
                    "description": "Sets root of tree in which to search identities.",
                    "type": "string"
                },
                "bind_dn": {
                    "description": "Sets distinguished name used when binding to LDAP server.",
                    "type": "string"
                },
                "bind_mechanism": {
                    "description": "Bind mechanism to use when connecting to an LDAP server; 'simple' is the only supported option.",
                    "enum": [
                        "simple",
                        "gssapi",
                        "digest-md5"
                    ],
                    "type": "string"
                },
                "bind_timeout": {
                    "description": "Sets timeout in seconds when binding to LDAP server.",
                    "type": "integer"
                },
                "certificate_authority_file": {
                    "description": "Sets path to root certificates file.",
                    "type": "string"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "cn_attribute": {
                    "description": "Specifies canonical name.",
                    "type": "string"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "crypt_password_attribute": {
                    "description": "Sets hashed password value.",
                    "type": "string"
                },
                "email_attribute": {
                    "description": "Sets the LDAP Email attribute.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Enables the LDAP provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "gecos_attribute": {
                    "description": "Sets the LDAP GECOS attribute.",
                    "type": "string"
                },
                "gid_attribute": {
                    "description": "Sets the LDAP GID attribute.",
                    "type": "string"
                },
                "group_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for groups.",
                    "type": "string"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "group_filter": {
                    "description": "Sets LDAP filter for group objects.",
                    "type": "string"
                },
                "group_members_attribute": {
                    "description": "Sets the LDAP Group Members attribute.",
                    "type": "string"
                },
                "group_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "groupnet": {
                    "description": "Groupnet identifier.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "homedir_attribute": {
                    "description": "Sets the LDAP Homedir attribute.",
                    "type": "string"
                },
                "id": {
                    "description": "Specifies the ID of the LDAP provider.",
                    "type": "string"
                },
                "ignore_tls_errors": {
                    "description": "Continues over secure connection even if identity checks fail.",
                    "type": "boolean"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "member_of_attribute": {
                    "description": "Sets the LDAP Query Member Of attribute, which is used for reverse membership queries",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the name of the LDAP provider.",
                    "type": "string"
                },
                "name_attribute": {
                    "description": "Sets the LDAP UID attribute, which is used as the login name.",
                    "type": "string"
                },
                "netgroup_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start the LDAP search for netgroups.",
                    "type": "string"
                },
                "netgroup_filter": {
                    "description": "Sets LDAP filter for netgroup objects.",
                    "type": "string"
                },
                "netgroup_members_attribute": {
                    "description": "Sets the LDAP Netgroup Members attribute.",
                    "type": "string"
                },
                "netgroup_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "netgroup_triple_attribute": {
                    "description": "Sets the LDAP Netgroup Triple attribute.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "nt_password_attribute": {
                    "description": "Sets the LDAP NT Password attribute.",
                    "type": "string"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "require_secure_connection": {
                    "description": "Specifies whether to continue over non-TLS connection.",
                    "type": "boolean"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "search_scope": {
                    "description": "Defines the default depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                },
                "search_timeout": {
                    "description": "Sets search timeout period in seconds.",
                    "type": "integer"
                },
                "server_uris": {
                    "description": "Sets server URIs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "shell_attribute": {
                    "description": "Sets the LDAP Shell attribute.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                    "type": "boolean"
                },
                "uid_attribute": {
                    "description": "Sets the LDAP UID Number attribute.",
                    "type": "string"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unique_group_members_attribute": {
                    "description": "Sets the LDAP Unique Group Members attribute.",
                    "type": "string"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_base_dn": {
                    "description": "Sets distinguished name of the entry at which to start LDAP searches for users.",
                    "type": "string"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                },
                "user_filter": {
                    "description": "Sets LDAP filter for user objects.",
                    "type": "string"
                },
                "user_search_scope": {
                    "description": "Defines the depth from the base DN to perform LDAP searches.",
                    "enum": [
                        "default",
                        "base",
                        "onelevel",
                        "subtree",
                        "children"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersLocal": {
            "properties": {
                "local": {
                    "items": {
                        "$ref": "#/definitions/ProvidersLocalLocalItem",
                        "description": "A local provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersLocalIdParams": {
            "description": "A local provider of authentication.",
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "lockout_duration": {
                    "description": "Sets length of time in seconds that an account will be inaccessible after multiple failed login attempts.",
                    "type": "integer"
                },
                "lockout_threshold": {
                    "description": "Sets the number of failed login attempts necessary for an account to be locked out.",
                    "type": "integer"
                },
                "lockout_window": {
                    "description": "Sets the time in seconds in which lockout_threshold failed attempts must be made for an account to be locked out.",
                    "type": "integer"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "machine_name": {
                    "description": "Specifies domain used to qualify user and group names for this provider.",
                    "type": "string"
                },
                "max_password_age": {
                    "description": "Sets maximum password age in seconds.",
                    "type": "integer"
                },
                "min_password_age": {
                    "description": "Sets minimum password age in seconds.",
                    "type": "integer"
                },
                "min_password_length": {
                    "description": "Sets minimum password length.",
                    "type": "integer"
                },
                "name": {
                    "description": "Specifies local provider name.",
                    "type": "string"
                },
                "password_complexity": {
                    "description": "List of cases required in a password. Options are lowercase, uppercase, numeric and symbol",
                    "items": {
                        "enum": [
                            "lowercase",
                            "uppercase",
                            "numeric",
                            "symbol"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "password_history_length": {
                    "description": "The number of previous passwords to store.",
                    "type": "integer"
                },
                "password_prompt_time": {
                    "description": "Specifies time in seconds remaining before prompting for password change.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ProvidersLocalLocalItem": {
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "id": {
                    "description": "Specifies local provider ID.",
                    "type": "string"
                },
                "lockout_duration": {
                    "description": "Sets length of time in seconds that an account will be inaccessible after multiple failed login attempts.",
                    "type": "integer"
                },
                "lockout_threshold": {
                    "description": "Sets the number of failed login attempts necessary for an account to be locked out.",
                    "type": "integer"
                },
                "lockout_window": {
                    "description": "Sets the time in seconds in which lockout_threshold failed attempts must be made for an account to be locked out.",
                    "type": "integer"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "machine_name": {
                    "description": "Specifies domain used to qualify user and group names for this provider.",
                    "type": "string"
                },
                "max_password_age": {
                    "description": "Sets maximum password age in seconds.",
                    "type": "integer"
                },
                "min_password_age": {
                    "description": "Sets minimum password age in seconds.",
                    "type": "integer"
                },
                "min_password_length": {
                    "description": "Sets minimum password length.",
                    "type": "integer"
                },
                "name": {
                    "description": "Specifies local provider name.",
                    "type": "string"
                },
                "password_complexity": {
                    "description": "List of cases required in a password. Options are lowercase, uppercase, numeric and symbol",
                    "items": {
                        "enum": [
                            "lowercase",
                            "uppercase",
                            "numeric",
                            "symbol"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "password_history_length": {
                    "description": "The number of previous passwords to store.",
                    "type": "integer"
                },
                "password_prompt_time": {
                    "description": "Specifies time in seconds remaining before prompting for password change.",
                    "type": "integer"
                },
                "status": {
                    "description": "The status of the provider.",
                    "type": "string"
                },
                "system": {
                    "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProvidersNi": {
            "description": "A NIS provider of authentication.",
            "properties": {
                "authentication": {
                    "description": "Enables use of provider for authentication as well as identity.",
                    "type": "boolean"
                },
                "balance_servers": {
                    "description": "Makes provider connect to a random server.",
                    "type": "boolean"
                },
                "check_online_interval": {
                    "description": "Specifies time in seconds between provider online checks.",
                    "type": "integer"
                },
                "create_home_directory": {
                    "description": "Automatically create home directory on first login.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enables NIS provider.",
                    "type": "boolean"
                },
                "enumerate_groups": {
                    "description": "Enables provider to enumerate groups.",
                    "type": "boolean"
                },
                "enumerate_users": {
                    "description": "Enables provider to enumerate users.",
                    "type": "boolean"
                },
                "findable_groups": {
                    "description": "Sets list of groups that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "findable_users": {
                    "description": "Sets list of users that can be resolved.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "group_domain": {
                    "description": "Domain used to qualify groups for this provider.",
                    "type": "string"
                },
                "home_directory_template": {
                    "description": "Specifies home directory template path.",
                    "type": "string"
                },
                "hostname_lookup": {
                    "description": "Enables host name lookups.",
                    "type": "boolean"
                },
                "listable_groups": {
                    "description": "Specifies groups that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "listable_users": {
                    "description": "Specifies users that can be viewed in the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "login_shell": {
                    "description": "Sets login shell path.",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies NIS provider name.",
                    "type": "string"
                },
                "nis_domain": {
                    "description": "Specifies NIS domain name.",
                    "type": "string"
                },
                "normalize_groups": {
                    "description": "Normalizes group name to lowercase before lookup.",
                    "type": "boolean"
                },
                "normalize_users": {
                    "description": "Normalizes user name to lowercase before lookup.",
                    "type": "boolean"
                },
                "ntlm_support": {
                    "description": "For users with NTLM-compatible credentials, specify what NTLM versions to support.",
                    "enum": [
                        "all",
                        "v2only",
                        "none"
                    ],
                    "type": "string"
                },
                "provider_domain": {
                    "description": "Specifies the provider domain.",
                    "type": "string"
                },
                "request_timeout": {
                    "description": "Specifies the request timeout interval in seconds.",
                    "type": "integer"
                },
                "restrict_findable": {
                    "description": "Check the provider for filtered lists of findable and unfindable users and groups.",
                    "type": "boolean"
                },
                "restrict_listable": {
                    "description": "Check the provider for filtered lists of listable and unlistable users and groups.",
                    "type": "boolean"
                },
                "retry_time": {
                    "description": "Sets timeout period in seconds after which a request will be retried.",
                    "type": "integer"
                },
                "servers": {
                    "description": "Adds a NIS server to be used by this provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_groups": {
                    "description": "Specifies groups that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unfindable_users": {
                    "description": "Specifies users that cannot be resolved by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_groups": {
                    "description": "Specifies a group that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "unlistable_users": {
                    "description": "Specifies a user that cannot be listed by the provider.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "user_domain": {
                    "description": "Domain used to qualify users for this provider.",
                    "type": "string"
                },
                "ypmatch_using_tcp": {
                    "description": "Uses TCP for YP Match operations.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ProvidersNiCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersNi"
                },
                {
                    "description": "A NIS provider of authentication.",
                    "properties": {
                        "groupnet": {
                            "description": "Groupnet identifier.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "servers",
                        "nis_domain",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "ProvidersNiExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProvidersNi"
                },
                {
                    "properties": {
                        "groupnet": {
                            "description": "Groupnet identifier.",
                            "type": "string"
                        },
                        "id": {
                            "description": "Specifies NIS provider ID.",
                            "type": "string"
                        },
                        "status": {
                            "description": "The status of the provider.",
                            "type": "string"
                        },
                        "system": {
                            "description": "If true, this provider instance was created by OneFS and cannot be removed.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ProvidersNis": {
            "properties": {
                "nis": {
                    "items": {
                        "$ref": "#/definitions/ProvidersNiExtended",
                        "description": "A NIS provider of authentication."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersSummary": {
            "properties": {
                "provider_instances": {
                    "items": {
                        "$ref": "#/definitions/ProvidersSummaryProviderInstance",
                        "description": "Summary information for an authentication provider."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ProvidersSummaryProviderInstance": {
            "properties": {
                "active_server": {
                    "description": "The server the provider is using to serve authentication requests. Null if no server is set or is not applicable for that provider.",
                    "type": "string"
                },
                "client_site": {
                    "description": "The Nodes Site.",
                    "type": "string"
                },
                "connections": {
                    "items": {
                        "$ref": "#/definitions/ProvidersSummaryProviderInstanceConnection",
                        "description": ""
                    },
                    "type": "array"
                },
                "dc_site": {
                    "description": "The DC Site.",
                    "type": "string"
                },
                "forest": {
                    "description": "The active directory forest. Null if not applicable.",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the provider.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the provider.",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the provider.",
                    "enum": [
                        "offline",
                        "active",
                        "online",
                        "initializing",
                        "joining",
                        "disabled"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The type of provider.",
                    "enum": [
                        "file",
                        "ldap",
                        "local",
                        "nis",
                        "ads",
                        "krb5",
                        "unknown"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ProvidersSummaryProviderInstanceConnection": {
            "properties": {
                "address": {
                    "description": "IP address of Provider",
                    "type": "string"
                },
                "last_used": {
                    "description": "Last time server was contacted",
                    "type": "string"
                },
                "server": {
                    "description": "FQDN of Server",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuotaQuota": {
            "properties": {
                "container": {
                    "description": "If true, SMB shares using the quota directory see the quota thresholds as share size.",
                    "type": "boolean"
                },
                "enforced": {
                    "description": "True if the quota provides enforcement, otherwise a accounting quota.",
                    "type": "boolean"
                },
                "linked": {
                    "description": "If false and the quota is linked, attempt to unlink.",
                    "type": "boolean"
                },
                "thresholds": {
                    "$ref": "#/definitions/QuotaQuotaThresholds",
                    "description": ""
                },
                "thresholds_include_overhead": {
                    "description": "If true, thresholds apply to data plus filesystem overhead required to store the data (i.e. 'physical' usage).",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "QuotaQuotaCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaQuota"
                },
                {
                    "properties": {
                        "force": {
                            "description": "Force creation of quotas on the root of /ifs.",
                            "required": false,
                            "type": "boolean"
                        },
                        "include_snapshots": {
                            "description": "If true, quota governs snapshot data as well as head data.",
                            "type": "boolean"
                        },
                        "path": {
                            "description": "The /ifs path governed.",
                            "type": "string"
                        },
                        "persona": {
                            "$ref": "#/definitions/GroupsGroupMember",
                            "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                        },
                        "type": {
                            "description": "The type of quota.",
                            "enum": [
                                "directory",
                                "user",
                                "group",
                                "default-user",
                                "default-group"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "enforced",
                        "include_snapshots",
                        "thresholds_include_overhead",
                        "path",
                        "type"
                    ],
                    "type": "object"
                }
            ]
        },
        "QuotaQuotaExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaQuota"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The system ID given to the quota.",
                            "type": "string"
                        },
                        "include_snapshots": {
                            "description": "If true, quota governs snapshot data as well as head data.",
                            "type": "boolean"
                        },
                        "notifications": {
                            "description": "Summary of notifications: 'custom' indicates one or more notification rules available from the notifications sub-resource; 'default' indicates system default rules are used; 'disabled' indicates that no notifications will be used for this quota.",
                            "enum": [
                                "custom",
                                "default",
                                "disabled"
                            ],
                            "type": "string"
                        },
                        "path": {
                            "description": "The /ifs path governed.",
                            "type": "string"
                        },
                        "persona": {
                            "$ref": "#/definitions/GroupsGroupMember",
                            "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                        },
                        "ready": {
                            "description": "True if the accounting is accurate on the quota.  If false, this quota is waiting on completion of a QuotaScan job.",
                            "type": "boolean"
                        },
                        "type": {
                            "description": "The type of quota.",
                            "enum": [
                                "directory",
                                "user",
                                "group",
                                "default-user",
                                "default-group"
                            ],
                            "type": "string"
                        },
                        "usage": {
                            "$ref": "#/definitions/QuotaQuotaUsage",
                            "description": ""
                        }
                    },
                    "required": [
                        "enforced",
                        "include_snapshots",
                        "container",
                        "linked",
                        "notifications",
                        "thresholds_include_overhead",
                        "ready",
                        "path",
                        "type",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "QuotaQuotaThresholds": {
            "properties": {
                "advisory": {
                    "description": "Usage bytes at which notifications will be sent but writes will not be denied.",
                    "minimum": 1,
                    "type": "integer"
                },
                "hard": {
                    "description": "Usage bytes at which further writes will be denied.",
                    "minimum": 1,
                    "type": "integer"
                },
                "soft": {
                    "description": "Usage bytes at which notifications will be sent and soft grace time will be started.",
                    "minimum": 1,
                    "type": "integer"
                },
                "soft_grace": {
                    "description": "Time in seconds after which the soft threshold has been hit before writes will be denied.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "QuotaQuotaThresholdsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaQuotaThresholds"
                },
                {
                    "properties": {
                        "advisory_exceeded": {
                            "description": "True if the advisory threshold has been hit.",
                            "type": "boolean"
                        },
                        "advisory_last_exceeded": {
                            "description": "Time at which advisory threshold was hit.",
                            "type": "integer"
                        },
                        "hard_exceeded": {
                            "description": "True if the hard threshold has been hit.",
                            "type": "boolean"
                        },
                        "hard_last_exceeded": {
                            "description": "Time at which hard threshold was hit.",
                            "type": "integer"
                        },
                        "soft_exceeded": {
                            "description": "True if the soft threshold has been hit.",
                            "type": "boolean"
                        },
                        "soft_last_exceeded": {
                            "description": "Time at which soft threshold was hit",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "advisory",
                        "soft_last_exceeded",
                        "hard_last_exceeded",
                        "soft_exceeded",
                        "hard_exceeded",
                        "hard",
                        "advisory_last_exceeded",
                        "advisory_exceeded",
                        "soft_grace",
                        "soft"
                    ],
                    "type": "object"
                }
            ]
        },
        "QuotaQuotaUsage": {
            "properties": {
                "inodes": {
                    "description": "Number of inodes (filesystem entities) used by governed data.",
                    "type": "integer"
                },
                "logical": {
                    "description": "Apparent bytes used by governed data.",
                    "type": "integer"
                },
                "physical": {
                    "description": "Bytes used for governed data and filesystem overhead.",
                    "type": "integer"
                }
            },
            "required": [
                "logical",
                "inodes",
                "physical"
            ],
            "type": "object"
        },
        "QuotaQuotas": {
            "properties": {
                "quotas": {
                    "items": {
                        "$ref": "#/definitions/QuotaQuotaExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QuotaQuotasExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotaQuotas"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "QuotaQuotasSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/QuotaQuotasSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "QuotaQuotasSummarySummary": {
            "properties": {
                "count": {
                    "description": "Total number of quotas.",
                    "type": "integer"
                },
                "default_group_quotas_count": {
                    "description": "Total number of default-group quotas.",
                    "type": "integer"
                },
                "default_user_quotas_count": {
                    "description": "Total number of default-user quotas.",
                    "type": "integer"
                },
                "directory_quotas_count": {
                    "description": "Total number of directory quotas.",
                    "type": "integer"
                },
                "group_quotas_count": {
                    "description": "Total number of -group quotas.",
                    "type": "integer"
                },
                "linked_quotas_count": {
                    "description": "Total number of user and group totals that are linked.",
                    "type": "integer"
                },
                "user_quotas_count": {
                    "description": "Total number of user quotas.",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "directory_quotas_count",
                "user_quotas_count",
                "default_group_quotas_count",
                "group_quotas_count",
                "default_user_quotas_count",
                "linked_quotas_count"
            ],
            "type": "object"
        },
        "QuotaReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/ReportsRidAboutReport",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "QuotasQidNotification": {
            "properties": {
                "action_alert": {
                    "description": "Send alert when rule matches.",
                    "type": "boolean"
                },
                "action_email_address": {
                    "description": "Email a specific email address when rule matches.",
                    "type": "string"
                },
                "action_email_owner": {
                    "description": "Email quota domain owner when rule matches.",
                    "type": "boolean"
                },
                "email_template": {
                    "description": "Path of optional /ifs template file used for email actions.",
                    "type": "string"
                },
                "holdoff": {
                    "description": "Time to wait between detections for rules triggered by user actions.",
                    "type": "integer"
                },
                "schedule": {
                    "description": "Schedule for rules that repeatedly notify.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "QuotasQidNotificationCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotasQidNotification"
                },
                {
                    "properties": {
                        "condition": {
                            "description": "The condition detected.",
                            "enum": [
                                "exceeded",
                                "denied",
                                "violated",
                                "expired"
                            ],
                            "type": "string"
                        },
                        "threshold": {
                            "description": "The quota threshold detected.",
                            "enum": [
                                "hard",
                                "soft",
                                "advisory"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "threshold",
                        "condition"
                    ],
                    "type": "object"
                }
            ]
        },
        "QuotasQidNotifications": {
            "properties": {
                "notifications": {
                    "items": {
                        "$ref": "#/definitions/QuotasQidNotificationsNotification",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "QuotasQidNotificationsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/QuotasQidNotifications"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "QuotasQidNotificationsNotification": {
            "properties": {
                "action_alert": {
                    "description": "Send alert when rule matches.",
                    "type": "boolean"
                },
                "action_email_address": {
                    "description": "Email a specific email address when rule matches.",
                    "type": "string"
                },
                "action_email_owner": {
                    "description": "Email quota domain owner when rule matches.",
                    "type": "boolean"
                },
                "condition": {
                    "description": "The condition detected.",
                    "enum": [
                        "exceeded",
                        "denied",
                        "violated",
                        "expired"
                    ],
                    "type": "string"
                },
                "email_template": {
                    "description": "Path of optional /ifs template file used for email actions.",
                    "type": "string"
                },
                "holdoff": {
                    "description": "Time to wait between detections for rules triggered by user actions.",
                    "type": "integer"
                },
                "id": {
                    "description": "The system ID given to the rule.",
                    "type": "string"
                },
                "schedule": {
                    "description": "Schedule for rules that repeatedly notify.",
                    "type": "string"
                },
                "threshold": {
                    "description": "The quota threshold detected.",
                    "enum": [
                        "hard",
                        "soft",
                        "advisory"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "action_email_owner",
                "email_template",
                "schedule",
                "action_email_address",
                "id",
                "holdoff",
                "threshold",
                "action_alert",
                "condition"
            ],
            "type": "object"
        },
        "RemotesupportConnectemc": {
            "properties": {
                "connectemc": {
                    "$ref": "#/definitions/RemotesupportConnectemcConnectemc",
                    "description": ""
                }
            },
            "type": "object"
        },
        "RemotesupportConnectemcConnectemc": {
            "properties": {
                "email_customer_on_failure": {
                    "description": "Email the customer if all transmission methods fail.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Enable ConnectEMC.",
                    "type": "boolean"
                },
                "gateway_access_pools": {
                    "description": "List of network subnets that are able to connect to the ESRS gateway.  Necessary to enable ConnectEMC.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "primary_esrs_gateway": {
                    "description": "Primary ESRS Gateway. Necessary to enable ConnectEMC.",
                    "type": "string"
                },
                "secondary_esrs_gateway": {
                    "description": "Secondary ESRS Gateway. Used if Primary is unavailable.",
                    "type": "string"
                },
                "use_smtp_failover": {
                    "description": "Use SMPT if primary and secondary gateways are unavailable.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ReportsRidAbout": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/ReportsRidAboutReport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportsRidAboutReport": {
            "properties": {
                "generated": {
                    "description": "Whether report was manually requested (live) or scheduled.",
                    "enum": [
                        "manual",
                        "scheduled"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "The system ID given to the report.",
                    "type": "string"
                },
                "time": {
                    "description": "Unix epoch time the report was taken.",
                    "type": "integer"
                },
                "type": {
                    "description": "Whether this is a summary or detail report.",
                    "enum": [
                        "summary",
                        "detail"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "generated",
                "type",
                "id",
                "time"
            ],
            "type": "object"
        },
        "ReportsRidSubreports": {
            "properties": {
                "subreports": {
                    "items": {
                        "$ref": "#/definitions/ReportsRidSubreportsSubreport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportsRidSubreportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportsRidSubreports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ReportsRidSubreportsSubreport": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "enum": [
                        "resync_prep",
                        "allow_write",
                        "allow_write_revert",
                        "test",
                        "run"
                    ],
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes transferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transferred by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs transferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/ReportsRidSubreportsSubreportPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy": {
                    "$ref": "#/definitions/ReportsRidSubreportsSubreportPolicy",
                    "description": ""
                },
                "policy_action": {
                    "description": "This is the action the policy is configured to perform.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "skipped",
                        "pending",
                        "unknown"
                    ],
                    "type": "string"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "policy",
                "fifos_replicated",
                "source_directories_linked",
                "start_time",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "end_time",
                "source_directories_visited",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "duration",
                "sparse_data_bytes",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "job_id",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "error_net_files_skipped",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "policy_action",
                "running_chunks",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "ReportsRidSubreportsSubreportPhase": {
            "properties": {
                "end_time": {
                    "description": "The time the job ended this phase.",
                    "type": "integer"
                },
                "phase": {
                    "description": "The phase that the job was in.",
                    "type": "string"
                },
                "start_time": {
                    "description": "The time the job began this phase.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ReportsRidSubreportsSubreportPolicy": {
            "properties": {
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/ReportsRidSubreportsSubreportPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "ReportsRidSubreportsSubreportPolicyFileMatchingPattern": {
            "properties": {
                "or_criteria": {
                    "description": "An array containing objects with \"and_criteria\" properties, each set of and_criteria will be logically OR'ed together to create the full file matching pattern.",
                    "items": {
                        "$ref": "#/definitions/ReportsRidSubreportsSubreportPolicyFileMatchingPatternOrCriteriaItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": false,
            "type": "object"
        },
        "ReportsRidSubreportsSubreportPolicyFileMatchingPatternOrCriteriaItem": {
            "properties": {
                "and_criteria": {
                    "description": "An array containing individual file criterion objects each describing one criterion.  These are logically AND'ed together to form a set of criteria.",
                    "items": {
                        "$ref": "#/definitions/ReportsRidSubreportsSubreportPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem",
                        "description": "An object describing one criterion for finding a matching file, for example \"size is greater than or equal to 10KB\". Note: For time types (accessed_*, birth_*, and changed_*), operator is not required (it is implicitly ==).  For the value, you can use a relative date and time, such as \"two weeks ago\", or specific date and time, such as \"January 1, 2012.\"  Time settings are based on a 24-hour clock."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportsRidSubreportsSubreportPolicyFileMatchingPatternOrCriteriaItemAndCriteriaItem": {
            "properties": {
                "attribute_exists": {
                    "description": "For \"custom_attribute\" type criteria.  The file will match as long as the attribute named by \"field\" exists.  Default is true.",
                    "type": "boolean"
                },
                "case_sensitive": {
                    "description": "If true, the value comparison will be case sensitive.  Default is true.",
                    "type": "boolean"
                },
                "field": {
                    "description": "The name of the file attribute to match on (only required if this is a custom_attribute type criterion).  Default is an empty string \"\".",
                    "type": "string"
                },
                "operator": {
                    "description": "How to compare the specified attribute of each file to the specified value.",
                    "enum": [
                        "==",
                        "!=",
                        ">",
                        ">=",
                        "<",
                        "<=",
                        "!"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The type of this criterion, that is, which file attribute to match on.",
                    "enum": [
                        "name",
                        "path",
                        "accessed_time",
                        "accessed_before",
                        "accessed_after",
                        "birth_time",
                        "birth_before",
                        "birth_after",
                        "changed_time",
                        "changed_before",
                        "changed_after",
                        "size",
                        "file_type",
                        "posix_regex_name",
                        "user_name",
                        "user_id",
                        "group_name",
                        "group_id",
                        "no_user",
                        "no_group"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The value to compare the specified attribute of each file to.",
                    "type": "string"
                },
                "whole_word": {
                    "description": "If true, the attribute must match the entire word.  Default is true.",
                    "type": "boolean"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "ReportsScans": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/ReportsScansReport",
                        "description": "A report for an antivirus scan."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportsScansExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportsScans"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ReportsScansReport": {
            "properties": {
                "bytes_sent": {
                    "description": "The number of bytes sent to the virus definition server to be scanned.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The length of time the job ran for.",
                    "type": "integer"
                },
                "end": {
                    "description": "The time the job ended.",
                    "type": "integer"
                },
                "files": {
                    "description": "The number of file scanned.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for the report.",
                    "type": "string"
                },
                "infections": {
                    "description": "The number of infections found.",
                    "type": "integer"
                },
                "job_id": {
                    "description": "The ID of the job that ran the policy.  If the scan was manually run on a single file, this field will be null.",
                    "type": "integer"
                },
                "policy_id": {
                    "description": "The id of the policy that this scan job executed.",
                    "type": "string"
                },
                "size": {
                    "description": "The cumulative size of the file scanned.",
                    "type": "integer"
                },
                "start": {
                    "description": "The time the job started.",
                    "type": "integer"
                },
                "status": {
                    "description": "The state of the job.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReportsThreats": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/ReportsThreatsReport",
                        "description": "A report for an antivirus threat."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ReportsThreatsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportsThreats"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "ReportsThreatsReport": {
            "properties": {
                "file": {
                    "description": "The file that contained the threat.",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for the report.",
                    "type": "string"
                },
                "policy_id": {
                    "description": "The id of the policy that found this threat.",
                    "type": "string"
                },
                "remediation": {
                    "description": "The action that was taken to remediate the threat.",
                    "type": "string"
                },
                "scan_id": {
                    "description": "The id of the scan report this threat is associated with.",
                    "type": "string"
                },
                "threat": {
                    "description": "A description of the threat that was found.",
                    "type": "string"
                },
                "time": {
                    "description": "The time that the threat was found, in Unix epoch seconds.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ResultsIdDirectoriesTotalUsage": {
            "properties": {
                "ads_cnt": {
                    "description": "Number of ads.",
                    "type": "integer"
                },
                "dir_cnt": {
                    "description": "Number of directories.",
                    "type": "integer"
                },
                "file_cnt": {
                    "description": "Number of files.",
                    "type": "integer"
                },
                "lin": {
                    "description": "Logical inode number.",
                    "type": "integer"
                },
                "log_size_sum": {
                    "description": "Logical size directory in bytes.",
                    "type": "integer"
                },
                "log_size_sum_overflow": {
                    "description": "Logical size sum of overflow in bytes.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of directory.",
                    "type": "string"
                },
                "other_cnt": {
                    "description": "Other count.",
                    "type": "integer"
                },
                "parent": {
                    "description": "Parent directory inode.",
                    "type": "integer"
                },
                "phys_size_sum": {
                    "description": "Physical size directory in bytes.",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "parent",
                "phys_size_sum",
                "lin",
                "other_cnt",
                "file_cnt",
                "dir_cnt",
                "log_size_sum",
                "log_size_sum_overflow",
                "ads_cnt"
            ],
            "type": "object"
        },
        "ResultsIdHistogram": {
            "properties": {
                "atime_enabled": {
                    "description": "Access time enabled.",
                    "type": "boolean"
                },
                "attribute_count": {
                    "description": "User attribute count.",
                    "type": "integer"
                },
                "begin_time": {
                    "description": "Unix Epoch time of start of results collection job.",
                    "type": "integer"
                },
                "histogram": {
                    "description": "Histogram data of specified file count parameter.",
                    "items": {
                        "$ref": "#/definitions/ResultsIdHistogramHistogramItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "atime_enabled",
                "histogram",
                "attribute_count",
                "begin_time"
            ],
            "type": "object"
        },
        "ResultsIdHistogramHistogramItem": {
            "properties": {
                "bucket": {
                    "description": "Bucket for holding file counts within a range.",
                    "type": "integer"
                },
                "value": {
                    "description": "Number of files within the bucket.",
                    "type": "integer"
                }
            },
            "required": [
                "bucket",
                "value"
            ],
            "type": "object"
        },
        "ResultsIdTopDirs": {
            "properties": {
                "change": {
                    "description": "Change in directory ranking from result set comparison.",
                    "required": false,
                    "type": "integer"
                },
                "dir_atime_enabled": {
                    "description": "Directory access time enabled.",
                    "type": "boolean"
                },
                "dirs": {
                    "description": "Directory listing.",
                    "items": {
                        "$ref": "#/definitions/ResultsIdTopDirsDir",
                        "description": ""
                    },
                    "type": "array"
                },
                "top_n_max": {
                    "description": "Limit on number of top results.",
                    "type": "integer"
                },
                "total_count": {
                    "description": "Total count of directory results.",
                    "type": "integer"
                }
            },
            "required": [
                "dirs",
                "top_n_max",
                "dir_atime_enabled",
                "total_count"
            ],
            "type": "object"
        },
        "ResultsIdTopDirsDir": {
            "properties": {
                "atime": {
                    "description": "Directory access time",
                    "type": "integer"
                },
                "btime": {
                    "description": "Directory creation begin time.",
                    "type": "integer"
                },
                "ctime": {
                    "description": "Unix inode change time.",
                    "type": "integer"
                },
                "path": {
                    "description": "Relative directory path under /ifs/.",
                    "type": "string"
                }
            },
            "required": [
                "btime",
                "path",
                "atime",
                "ctime"
            ],
            "type": "object"
        },
        "ResultsIdTopFiles": {
            "properties": {
                "atime_enabled": {
                    "description": "Access time enabled.",
                    "type": "boolean"
                },
                "change": {
                    "description": "Change in file ranking from result set comparison.",
                    "required": false,
                    "type": "integer"
                },
                "dir_atime_enabled": {
                    "description": "Directory access time enabled.",
                    "type": "boolean"
                },
                "files": {
                    "description": "Files listing.",
                    "items": {
                        "$ref": "#/definitions/ResultsIdTopFilesFile",
                        "description": ""
                    },
                    "type": "array"
                },
                "top_n_max": {
                    "description": "Limit on number of top results.",
                    "type": "integer"
                },
                "total_count": {
                    "description": "Total count of file results.",
                    "type": "integer"
                }
            },
            "required": [
                "files",
                "atime_enabled",
                "dir_atime_enabled",
                "top_n_max",
                "total_count"
            ],
            "type": "object"
        },
        "ResultsIdTopFilesFile": {
            "properties": {
                "atime": {
                    "description": "File access time.",
                    "type": "integer"
                },
                "btime": {
                    "description": "File creation begin time.",
                    "type": "integer"
                },
                "ctime": {
                    "description": "Unix inode change time.",
                    "type": "integer"
                },
                "log_size": {
                    "description": "Logical file size in bytes.",
                    "type": "integer"
                },
                "path": {
                    "description": "Relative file path under /ifs/.",
                    "type": "string"
                },
                "phys_size": {
                    "description": "Physical file size in bytes.",
                    "type": "integer"
                }
            },
            "required": [
                "log_size",
                "ctime",
                "btime",
                "phys_size",
                "path",
                "atime"
            ],
            "type": "object"
        },
        "RolesRolePrivileges": {
            "properties": {
                "privileges": {
                    "items": {
                        "$ref": "#/definitions/AuthIdNtokenPrivilegeItem",
                        "description": "A system defined privilege that may be granted to users."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsAccessTime": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SettingsAccessTimeSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SettingsAccessTimeExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SettingsAccessTime"
                },
                {
                    "properties": {
                        "enabled": {
                            "description": "Enable access time tracking.",
                            "type": "boolean"
                        },
                        "precision": {
                            "description": "Access time tracked on each cluster file accurate to this number of seconds.",
                            "maximum": 1576800000,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SettingsAccessTimeSettings": {
            "properties": {
                "enabled": {
                    "description": "Enable access time tracking.",
                    "type": "boolean"
                },
                "precision": {
                    "description": "Access time tracked in seconds for each cluster file if enabled.",
                    "type": "integer"
                }
            },
            "required": [
                "enabled",
                "precision"
            ],
            "type": "object"
        },
        "SettingsAcls": {
            "properties": {
                "acl_policy_settings": {
                    "$ref": "#/definitions/SettingsAclsAclPolicySettings",
                    "description": "ACL policies settings."
                }
            },
            "type": "object"
        },
        "SettingsAclsAclPolicySettings": {
            "properties": {
                "access": {
                    "description": "Access checks (chmod, chown).",
                    "enum": [
                        "unix",
                        "windows"
                    ],
                    "type": "string"
                },
                "calcmode": {
                    "description": "Displayed mode bits.",
                    "enum": [
                        "approx",
                        "777"
                    ],
                    "type": "string"
                },
                "calcmode_group": {
                    "description": "Approximate group mode bits when ACL exists.",
                    "enum": [
                        "group_aces",
                        "group_only"
                    ],
                    "type": "string"
                },
                "calcmode_owner": {
                    "description": "Approximate owner mode bits when ACL exists.",
                    "enum": [
                        "owner_aces",
                        "owner_only"
                    ],
                    "type": "string"
                },
                "chmod": {
                    "description": "chmod on files with existing ACLs.",
                    "enum": [
                        "remove",
                        "replace",
                        "replace_users_and_groups",
                        "merge",
                        "deny",
                        "ignore"
                    ],
                    "type": "string"
                },
                "chmod_007": {
                    "description": "chmod (007) on files with existing ACLs.",
                    "enum": [
                        "default",
                        "remove"
                    ],
                    "type": "string"
                },
                "chmod_inheritable": {
                    "description": "ACLs created on directories by UNIX chmod.",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "type": "string"
                },
                "chown": {
                    "description": "chown/chgrp on files with existing ACLs.",
                    "enum": [
                        "owner_group_and_acl",
                        "owner_group_only",
                        "ignore"
                    ],
                    "type": "string"
                },
                "create_over_smb": {
                    "description": "ACL creation over SMB.",
                    "enum": [
                        "allow",
                        "disallow"
                    ],
                    "type": "string"
                },
                "dos_attr": {
                    "description": " Read only DOS attribute.",
                    "enum": [
                        "deny_smb",
                        "deny_smb_and_nfs"
                    ],
                    "type": "string"
                },
                "group_owner_inheritance": {
                    "description": "Group owner inheritance.",
                    "enum": [
                        "native",
                        "parent",
                        "creator"
                    ],
                    "type": "string"
                },
                "rwx": {
                    "description": "Treatment of 'rwx' permissions.",
                    "enum": [
                        "retain",
                        "full_control"
                    ],
                    "type": "string"
                },
                "synthetic_denies": {
                    "description": "Synthetic 'deny' ACEs.",
                    "enum": [
                        "none",
                        "remove"
                    ],
                    "type": "string"
                },
                "utimes": {
                    "description": "Access check (utimes)",
                    "enum": [
                        "only_owner",
                        "owner_and_write"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsGlobal": {
            "properties": {
                "global_settings": {
                    "$ref": "#/definitions/SettingsGlobalGlobalSettings",
                    "description": "Global settings for authentication."
                }
            },
            "type": "object"
        },
        "SettingsGlobalExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SettingsGlobal"
                },
                {
                    "properties": {
                        "settings": {
                            "$ref": "#/definitions/SettingsGlobalSettings",
                            "description": "Settings for Audit."
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SettingsGlobalGlobalSettings": {
            "properties": {
                "alloc_retries": {
                    "description": "Sets number of times to retry an ID allocation before failing.",
                    "type": "integer"
                },
                "cache_cred_lifetime": {
                    "description": "Sets length of time in seconds to cache credential responses from the ID mapper.",
                    "type": "integer"
                },
                "cache_id_lifetime": {
                    "description": "Sets length of time in seconds to cache ID responses from the ID mapper.",
                    "type": "integer"
                },
                "gid_range_enabled": {
                    "description": "Enables use of a fixed range for allocating GIDs.",
                    "type": "boolean"
                },
                "gid_range_max": {
                    "description": "Specifies ending number for allocating GIDs.",
                    "type": "integer"
                },
                "gid_range_min": {
                    "description": "Specifies starting number for allocating GIDs.",
                    "type": "integer"
                },
                "gid_range_next": {
                    "description": "Specifies the next GID to be allocated.",
                    "type": "integer"
                },
                "group_uid": {
                    "type": "integer"
                },
                "load_providers": {
                    "items": {
                        "enum": [
                            "ActiveDirectory",
                            "Local",
                            "Nss",
                            "File",
                            "Nis",
                            "Ldap",
                            "Krb5"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "min_mapped_rid": {
                    "type": "integer"
                },
                "null_gid": {
                    "type": "integer"
                },
                "null_uid": {
                    "type": "integer"
                },
                "on_disk_identity": {
                    "description": "Specifies type of identity stored on disk.",
                    "enum": [
                        "native",
                        "unix",
                        "sid"
                    ],
                    "type": "string"
                },
                "rpc_block_time": {
                    "description": "Specifies the length of time in milliseconds before an ID mapper request becomes asynchronous.",
                    "type": "integer"
                },
                "rpc_max_requests": {
                    "description": "Specifies the maximum number of simultaneous ID Mapper requests.",
                    "type": "integer"
                },
                "rpc_timeout": {
                    "description": "Specifies the length of time in seconds before an ID mapper request times out.",
                    "type": "integer"
                },
                "send_ntlmv2": {
                    "description": "Specifies whether to send NTLMv2 responses.",
                    "type": "boolean"
                },
                "space_replacement": {
                    "description": "Sets space replacement.",
                    "type": "string"
                },
                "system_gid_threshold": {
                    "type": "integer"
                },
                "system_uid_threshold": {
                    "type": "integer"
                },
                "uid_range_enabled": {
                    "description": "Uses a fixed range for allocating UIDs.",
                    "type": "boolean"
                },
                "uid_range_max": {
                    "description": "Specifies ending number for allocating UIDs.",
                    "type": "integer"
                },
                "uid_range_min": {
                    "description": "Specifies starting number for allocating UIDs.",
                    "type": "integer"
                },
                "uid_range_next": {
                    "description": "Specifies the next UID to be allocated.",
                    "type": "integer"
                },
                "unknown_gid": {
                    "description": "Specifies GID to use for the unknown (anonymous) group.",
                    "type": "integer"
                },
                "unknown_uid": {
                    "description": "Specifies UID to use for the unknown (anonymous) user.",
                    "type": "integer"
                },
                "user_object_cache_size": {
                    "description": "Specifies the maximum size (in bytes) of the security object cache in the authentication daemon.",
                    "type": "integer"
                },
                "workgroup": {
                    "description": "Sets NetBIOS workgroup/domain.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsGlobalSettings": {
            "properties": {
                "audited_zones": {
                    "description": "Zones that are audited when protocol auditing is enabled.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cee_log_time": {
                    "description": "Sets Audit CEE forwarder to forward events past a specified date in 'Topic@YYYY-MM-DD HH:MM:SS' format.",
                    "type": "string"
                },
                "cee_server_uris": {
                    "description": "URIs of backend CEE servers to which to send Audit logs.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "config_auditing_enabled": {
                    "description": "Enables/disables PAPI configuration Audit.",
                    "type": "boolean"
                },
                "config_syslog_enabled": {
                    "description": "Enables/disables config Audit syslog forwarding.",
                    "type": "boolean"
                },
                "hostname": {
                    "description": "Hostname reported in protocol events from this cluster.",
                    "type": "string"
                },
                "protocol_auditing_enabled": {
                    "description": "Enables/disables auditing of I/O requests.",
                    "type": "boolean"
                },
                "syslog_log_time": {
                    "description": "Sets Audit syslog forwarder to forward events past a specified date in 'Topic@YYYY-MM-DD HH:MM:SS' format.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsKrb5Defaults": {
            "properties": {
                "krb5_settings": {
                    "$ref": "#/definitions/SettingsKrb5DefaultsKrb5Settings",
                    "description": "Krb5 global settings for authentication."
                }
            },
            "type": "object"
        },
        "SettingsKrb5DefaultsKrb5Settings": {
            "properties": {
                "always_send_preauth": {
                    "description": "Always attempt to preauth to controller",
                    "type": "boolean"
                },
                "default_realm": {
                    "description": "Realm to use for unqualified names",
                    "type": "string"
                },
                "dns_lookup_kdc": {
                    "description": "Use DNS to find KDCs",
                    "type": "boolean"
                },
                "dns_lookup_realm": {
                    "description": "Use DNS to find realm names",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SettingsKrb5Domain": {
            "description": "Krb5 settings for domain-realm mappings",
            "properties": {
                "realm": {
                    "description": "Name of the realm",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsKrb5DomainCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SettingsKrb5Domain"
                },
                {
                    "description": "Krb5 settings for domain-realm mappings",
                    "properties": {
                        "domain": {
                            "description": "Name of the domain",
                            "type": "string"
                        }
                    },
                    "required": [
                        "domain",
                        "realm"
                    ],
                    "type": "object"
                }
            ]
        },
        "SettingsKrb5Domains": {
            "properties": {
                "domain": {
                    "items": {
                        "$ref": "#/definitions/SettingsKrb5DomainsDomainItem",
                        "description": "Krb5 settings for domain-realm mappings"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SettingsKrb5DomainsDomainItem": {
            "properties": {
                "domain": {
                    "description": "Name of the domain",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the domain",
                    "type": "string"
                },
                "realm": {
                    "description": "Name of the realm",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsKrb5Realm": {
            "description": "Krb5 settings for realm access",
            "properties": {
                "admin_server": {
                    "description": "administrative server hostname",
                    "type": "string"
                },
                "default_domain": {
                    "description": "Default domain mapped to this realm",
                    "type": "string"
                },
                "is_default_realm": {
                    "description": "Specify whether this realm is default",
                    "type": "boolean"
                },
                "kdc": {
                    "description": "List of KDC hostnames",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SettingsKrb5RealmCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SettingsKrb5Realm"
                },
                {
                    "description": "Krb5 settings for realm access",
                    "properties": {
                        "realm": {
                            "description": "Name of realm",
                            "type": "string"
                        }
                    },
                    "required": [
                        "realm"
                    ],
                    "type": "object"
                }
            ]
        },
        "SettingsKrb5Realms": {
            "properties": {
                "realm": {
                    "items": {
                        "$ref": "#/definitions/SettingsKrb5RealmsRealmItem",
                        "description": "Krb5 settings for realm access"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SettingsKrb5RealmsRealmItem": {
            "properties": {
                "admin_server": {
                    "description": "administrative server hostname",
                    "type": "string"
                },
                "default_domain": {
                    "description": "Default domain mapped to this realm",
                    "type": "string"
                },
                "id": {
                    "description": "ID of realm",
                    "type": "string"
                },
                "is_default_realm": {
                    "description": "Specify whether this realm is default",
                    "type": "boolean"
                },
                "is_joined": {
                    "description": "Specify whether this realm is joined",
                    "type": "boolean"
                },
                "kdc": {
                    "description": "List of KDC hostnames",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "realm": {
                    "description": "Name of realm",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsMapping": {
            "properties": {
                "mapping_settings": {
                    "$ref": "#/definitions/SettingsMappingMappingSettings",
                    "description": "Global settings for authentication."
                }
            },
            "type": "object"
        },
        "SettingsMappingCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SettingsMapping"
                },
                {
                    "properties": {
                        "domain": {
                            "description": "The FQDN of the source domain to map.",
                            "type": "string"
                        },
                        "mapping": {
                            "description": "The FQDN of destination domain to map to.",
                            "type": "string"
                        },
                        "type": {
                            "description": "The authentication provider type.",
                            "enum": [
                                "ad",
                                "local",
                                "nis",
                                "ldap"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "domain",
                        "type",
                        "mapping"
                    ],
                    "type": "object"
                }
            ]
        },
        "SettingsMappingExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SettingsMapping"
                },
                {
                    "properties": {
                        "domain": {
                            "description": "The FQDN of the source domain to map.",
                            "type": "string"
                        },
                        "mapping": {
                            "description": "The FQDN of destination domain to map to.",
                            "type": "string"
                        },
                        "type": {
                            "description": "The authentication provider type.",
                            "enum": [
                                "ad",
                                "local",
                                "nis",
                                "ldap"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "domain",
                        "type",
                        "mapping"
                    ],
                    "type": "object"
                }
            ]
        },
        "SettingsMappingMappingSettings": {
            "properties": {
                "cache_entry_expiry": {
                    "description": "Specifies the cache expiry in seconds of the idmapper.",
                    "type": "integer"
                },
                "gid_range_enabled": {
                    "description": "Enables use of a fixed range for allocating GIDs.",
                    "type": "boolean"
                },
                "gid_range_max": {
                    "description": "Specifies ending number for allocating GIDs.",
                    "type": "integer"
                },
                "gid_range_min": {
                    "description": "Specifies starting number for allocating GIDs.",
                    "type": "integer"
                },
                "gid_range_next": {
                    "description": "Specifies the next GID to be allocated.",
                    "type": "integer"
                },
                "uid_range_enabled": {
                    "description": "Uses a fixed range for allocating UIDs.",
                    "type": "boolean"
                },
                "uid_range_max": {
                    "description": "Specifies ending number for allocating UIDs.",
                    "type": "integer"
                },
                "uid_range_min": {
                    "description": "Specifies starting number for allocating UIDs.",
                    "type": "integer"
                },
                "uid_range_next": {
                    "description": "Specifies the next UID to be allocated.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SettingsMappings": {
            "properties": {
                "mappings": {
                    "items": {
                        "$ref": "#/definitions/SettingsMappingExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SettingsNotification": {
            "properties": {
                "action_alert": {
                    "description": "Send alert when rule matches.",
                    "type": "boolean"
                },
                "action_email_address": {
                    "description": "Email a specific email address when rule matches.",
                    "type": "string"
                },
                "action_email_owner": {
                    "description": "Email quota domain owner when rule matches.",
                    "type": "boolean"
                },
                "condition": {
                    "description": "The condition detected.",
                    "enum": [
                        "exceeded",
                        "denied",
                        "violated",
                        "expired"
                    ],
                    "type": "string"
                },
                "email_template": {
                    "description": "Path of optional /ifs template file used for email actions.",
                    "type": "string"
                },
                "holdoff": {
                    "description": "Time to wait between detections for rules triggered by user actions.",
                    "type": "integer"
                },
                "schedule": {
                    "description": "Schedule for rules that repeatedly notify.",
                    "type": "string"
                },
                "threshold": {
                    "description": "The quota threshold detected.",
                    "enum": [
                        "hard",
                        "soft",
                        "advisory"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "threshold",
                "condition"
            ],
            "type": "object"
        },
        "SettingsNotifications": {
            "properties": {
                "notifications": {
                    "items": {
                        "$ref": "#/definitions/QuotasQidNotificationsNotification",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SettingsReportingEulaItem": {
            "properties": {
                "accepted": {
                    "description": "Indicates whether the telemetry collection warning has been acknowledged",
                    "type": "boolean"
                },
                "body": {
                    "description": "The body of the telemetry collection warning",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SettingsReports": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SettingsReportsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SettingsReportsSettings": {
            "properties": {
                "live_dir": {
                    "description": "The directory on /ifs where manual or live reports will be placed.",
                    "type": "string"
                },
                "live_retain": {
                    "description": "The number of manual reports to keep.",
                    "minimum": 1,
                    "type": "integer"
                },
                "schedule": {
                    "description": "The isidate schedule used to generate reports.",
                    "type": "string"
                },
                "scheduled_dir": {
                    "description": "The directory on /ifs where schedule reports will be placed.",
                    "type": "string"
                },
                "scheduled_retain": {
                    "description": "The number of scheduled reports to keep.",
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "live_retain",
                "live_dir",
                "scheduled_retain",
                "scheduled_dir",
                "schedule"
            ],
            "type": "object"
        },
        "SmbLogLevel": {
            "properties": {
                "level": {
                    "description": "Valid SMB logging levels",
                    "enum": [
                        "always",
                        "error",
                        "warning",
                        "info",
                        "verbose",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SmbLogLevelFilter": {
            "properties": {
                "ip_addrs": {
                    "description": "Array of client IP addresses to filter against.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "level": {
                    "description": "Logging level of the filter.",
                    "enum": [
                        "always",
                        "error",
                        "warning",
                        "info",
                        "verbose",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "ops": {
                    "description": "Array of SMB operations to filter against.",
                    "items": {
                        "description": "Valid SMB operations to log",
                        "enum": [
                            "read",
                            "write",
                            "session-setup",
                            "logoff",
                            "flush",
                            "notify",
                            "tree-connect",
                            "tree-disconnect",
                            "create",
                            "delete",
                            "oplock",
                            "locking",
                            "set-info",
                            "query",
                            "close",
                            "create-directory",
                            "delete-directory"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "level"
            ],
            "type": "object"
        },
        "SmbLogLevelFilters": {
            "properties": {
                "filters": {
                    "items": {
                        "$ref": "#/definitions/SmbLogLevelFiltersFilter",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SmbLogLevelFiltersExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SmbLogLevelFilters"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SmbLogLevelFiltersFilter": {
            "properties": {
                "id": {
                    "description": "Unique ID of the log filter.",
                    "type": "integer"
                },
                "ip_addrs": {
                    "description": "Array of client IP addresses to filter against.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "level": {
                    "description": "Logging level of the filter.",
                    "enum": [
                        "always",
                        "error",
                        "warning",
                        "info",
                        "verbose",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "ops": {
                    "description": "Array of SMB operations to filter against.",
                    "items": {
                        "description": "Valid SMB operations to log",
                        "enum": [
                            "read",
                            "write",
                            "session-setup",
                            "logoff",
                            "flush",
                            "notify",
                            "tree-connect",
                            "tree-disconnect",
                            "create",
                            "delete",
                            "oplock",
                            "locking",
                            "set-info",
                            "query",
                            "close",
                            "create-directory",
                            "delete-directory"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "level"
            ],
            "type": "object"
        },
        "SmbOpenfile": {
            "properties": {
                "file": {
                    "description": "Path of file within /ifs.",
                    "type": "string"
                },
                "id": {
                    "description": "The file ID.",
                    "type": "integer"
                },
                "locks": {
                    "description": "Number of locks user holds on file.",
                    "type": "integer"
                },
                "permissions": {
                    "description": "The user's permissions on file.",
                    "items": {
                        "enum": [
                            "read",
                            "write",
                            "create"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "user": {
                    "description": "User holding file open.",
                    "type": "string"
                }
            },
            "required": [
                "locks",
                "user",
                "id",
                "file",
                "permissions"
            ],
            "type": "object"
        },
        "SmbOpenfiles": {
            "properties": {
                "openfiles": {
                    "items": {
                        "$ref": "#/definitions/SmbOpenfile",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SmbSession": {
            "properties": {
                "active_time": {
                    "description": "Number of seconds since session start.",
                    "type": "integer"
                },
                "client_type": {
                    "description": "Client type.",
                    "type": "string"
                },
                "computer": {
                    "description": "Client internet address.",
                    "type": "string"
                },
                "encryption": {
                    "description": "True if session is encrypted.",
                    "type": "boolean"
                },
                "guest_login": {
                    "description": "True for guest logins.",
                    "type": "boolean"
                },
                "id": {
                    "description": "The session ID.",
                    "type": "integer"
                },
                "idle_time": {
                    "description": "Number of seconds since last client operation.",
                    "type": "integer"
                },
                "openfiles": {
                    "description": "Number of files open by client.",
                    "type": "integer"
                },
                "user": {
                    "description": "Local user name.",
                    "type": "string"
                }
            },
            "required": [
                "active_time",
                "computer",
                "encryption",
                "idle_time",
                "client_type",
                "guest_login",
                "openfiles",
                "id",
                "user"
            ],
            "type": "object"
        },
        "SmbSessions": {
            "properties": {
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "sessions": {
                    "items": {
                        "$ref": "#/definitions/SmbSession",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SmbSettingsGlobal": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SmbSettingsGlobalSettings",
                    "description": ""
                }
            },
            "required": [
                "settings"
            ],
            "type": "object"
        },
        "SmbSettingsGlobalSettings": {
            "properties": {
                "access_based_share_enum": {
                    "description": "Only enumerate files and folders the requesting user has access to.",
                    "type": "boolean"
                },
                "audit_fileshare": {
                    "description": "Specify level of file share audit events to log.",
                    "enum": [
                        "all",
                        "success",
                        "failure",
                        "none"
                    ],
                    "type": "string"
                },
                "audit_global_sacl": {
                    "description": "List of permissions to audit.",
                    "items": {
                        "$ref": "#/definitions/SmbSettingsGlobalSettingsAuditGlobalSaclItem",
                        "description": "SACL Access Control Entry."
                    },
                    "type": "array"
                },
                "audit_logon": {
                    "description": "Specify the level of logon audit events to log.",
                    "enum": [
                        "all",
                        "success",
                        "failure",
                        "none"
                    ],
                    "type": "string"
                },
                "dot_snap_accessible_child": {
                    "description": "Allow access to .snapshot directories in share subdirectories.",
                    "type": "boolean"
                },
                "dot_snap_accessible_root": {
                    "description": "Allow access to the .snapshot directory in the root of the share.",
                    "type": "boolean"
                },
                "dot_snap_visible_child": {
                    "description": "Show .snapshot directories in share subdirectories.",
                    "type": "boolean"
                },
                "dot_snap_visible_root": {
                    "description": "Show the .snapshot directory in the root of a share.",
                    "type": "boolean"
                },
                "enable_security_signatures": {
                    "description": "Indicates whether the server supports signed SMB packets.",
                    "type": "boolean"
                },
                "guest_user": {
                    "description": "Specifies the fully-qualified user to use for guest access.",
                    "type": "string"
                },
                "ignore_eas": {
                    "description": "Specify whether to ignore EAs on files.",
                    "type": "boolean"
                },
                "onefs_cpu_multiplier": {
                    "description": "Specify the number of OneFS driver worker threads per CPU.",
                    "maximum": 4,
                    "minimum": 1,
                    "type": "integer"
                },
                "onefs_num_workers": {
                    "description": "Set the maximum number of OneFS driver worker threads.",
                    "maximum": 1024,
                    "minimum": 0,
                    "type": "integer"
                },
                "require_security_signatures": {
                    "description": "Indicates whether the server requires signed SMB packets.",
                    "type": "boolean"
                },
                "server_side_copy": {
                    "description": "Enable Server Side Copy.",
                    "type": "boolean"
                },
                "server_string": {
                    "description": "Provides a description of the server.",
                    "type": "string"
                },
                "service": {
                    "description": "Specify whether service is enabled.",
                    "type": "boolean"
                },
                "srv_cpu_multiplier": {
                    "description": "Specify the number of SRV service worker threads per CPU.",
                    "maximum": 8,
                    "minimum": 1,
                    "type": "integer"
                },
                "srv_num_workers": {
                    "description": "Set the maximum number of SRV service worker threads.",
                    "maximum": 1024,
                    "minimum": 0,
                    "type": "integer"
                },
                "support_multichannel": {
                    "description": "Support multichannel.",
                    "type": "boolean"
                },
                "support_netbios": {
                    "description": "Support NetBIOS.",
                    "type": "boolean"
                },
                "support_smb2": {
                    "description": "Support the SMB2 protocol on the server.",
                    "type": "boolean"
                }
            },
            "required": true,
            "type": "object"
        },
        "SmbSettingsGlobalSettingsAuditGlobalSaclItem": {
            "properties": {
                "flags": {
                    "description": "Audit on success or failure.",
                    "enum": [
                        "successful",
                        "failed"
                    ],
                    "type": "string"
                },
                "permission": {
                    "description": "Array of filesystem rights governed.",
                    "items": {
                        "description": "Filesystem access permission.",
                        "enum": [
                            "generic_all",
                            "generic_read",
                            "generic_write",
                            "generic_exec",
                            "std_delete",
                            "std_read_dac",
                            "std_write_dac",
                            "std_write_owner",
                            "std_synchronize",
                            "std_required",
                            "list",
                            "add_file",
                            "add_subdir",
                            "delete_child",
                            "traverse",
                            "dir_read_attr",
                            "dir_write_attr",
                            "dir_read_ext_attr",
                            "dir_write_ext_attr",
                            "dir_gen_read",
                            "dir_gen_write",
                            "dir_gen_execute",
                            "dir_gen_all",
                            "file_read",
                            "file_write",
                            "append",
                            "execute",
                            "delete_child",
                            "file_read_attr",
                            "file_write_attr",
                            "file_read_ext_attr",
                            "file_write_ext_attr",
                            "file_gen_read",
                            "file_gen_write",
                            "file_gen_execute",
                            "file_gen_all",
                            "modify",
                            "object_inherit",
                            "container_inherit",
                            "no_prop_inherit",
                            "inherit_only",
                            "inherited_ace"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "flags",
                "permission"
            ],
            "type": "object"
        },
        "SmbSettingsShare": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SmbSettingsShareSettings",
                    "description": ""
                }
            },
            "required": [
                "settings"
            ],
            "type": "object"
        },
        "SmbSettingsShareSettings": {
            "properties": {
                "access_based_enumeration": {
                    "description": "Only enumerate files and folders the requesting user has access to.",
                    "type": "boolean"
                },
                "access_based_enumeration_root_only": {
                    "description": "Access-based enumeration on only the root directory of the share.",
                    "type": "boolean"
                },
                "allow_delete_readonly": {
                    "description": "Allow deletion of read-only files in the share.",
                    "type": "boolean"
                },
                "allow_execute_always": {
                    "description": "Allows users to execute files they have read rights for.",
                    "type": "boolean"
                },
                "ca_timeout": {
                    "description": "Persistent open timeout for the share.",
                    "type": "integer"
                },
                "change_notify": {
                    "description": "Specify level of change notification alerts on the share.",
                    "enum": [
                        "all",
                        "norecurse",
                        "none"
                    ],
                    "type": "string"
                },
                "create_permissions": {
                    "description": "Set the create permissions for new files and directories in share.",
                    "enum": [
                        "default acl",
                        "inherit mode bits",
                        "use create mask and mode"
                    ],
                    "type": "string"
                },
                "csc_policy": {
                    "description": "Client-side caching policy for the shares.",
                    "enum": [
                        "manual",
                        "documents",
                        "programs",
                        "none"
                    ],
                    "type": "string"
                },
                "directory_create_mask": {
                    "description": "Unix umask or mode bits.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "directory_create_mode": {
                    "description": "Unix umask or mode bits.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "file_create_mask": {
                    "description": "Unix umask or mode bits.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "file_create_mode": {
                    "description": "Unix umask or mode bits.",
                    "maximum": 511,
                    "minimum": 0,
                    "type": "integer"
                },
                "file_filter_extensions": {
                    "description": "Specifies the list of file extensions.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "file_filter_type": {
                    "description": "Specifies if filter list is for deny or allow. Default is deny.",
                    "enum": [
                        "deny",
                        "allow"
                    ],
                    "type": "string"
                },
                "file_filtering_enabled": {
                    "description": "Enables file filtering on the share.",
                    "type": "boolean"
                },
                "hide_dot_files": {
                    "description": "Hide files and directories that begin with a period '.'.",
                    "type": "boolean"
                },
                "host_acl": {
                    "description": "An ACL expressing which hosts are allowed access. A deny clause must be the final entry.",
                    "items": {
                        "description": "<'allow:'|'deny:'><'ALL'|IP-range|subnet|fqdn>[' EXCEPT '<IP-range|subnet|fqdn>].",
                        "type": "string"
                    },
                    "type": "array"
                },
                "impersonate_guest": {
                    "description": "Specify the condition in which user access is done as the guest account.",
                    "enum": [
                        "always",
                        "bad user",
                        "never"
                    ],
                    "type": "string"
                },
                "impersonate_user": {
                    "description": "User account to be used as guest account.",
                    "type": "string"
                },
                "mangle_byte_start": {
                    "description": "Specifies the wchar_t starting point for automatic byte mangling.",
                    "maximum": 65535,
                    "minimum": 256,
                    "type": "integer"
                },
                "mangle_map": {
                    "description": "Character mangle map.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ntfs_acl_support": {
                    "description": "Support NTFS ACLs on files and directories.",
                    "type": "boolean"
                },
                "oplocks": {
                    "description": "Allow oplock requests.",
                    "type": "boolean"
                },
                "strict_ca_lockout": {
                    "description": "Specifies if persistent opens would do strict lockout on the share.",
                    "type": "boolean"
                },
                "strict_flush": {
                    "description": "Handle SMB flush operations.",
                    "type": "boolean"
                },
                "strict_locking": {
                    "description": "Specifies whether byte range locks contend against SMB I/O.",
                    "type": "boolean"
                },
                "zone": {
                    "description": "Name of the access zone in which to update settings",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "SmbShare": {
            "properties": {
                "access_based_enumeration": {
                    "description": "Only enumerate files and folders the requesting user has access to.",
                    "type": "boolean"
                },
                "access_based_enumeration_root_only": {
                    "description": "Access-based enumeration on only the root directory of the share.",
                    "type": "boolean"
                },
                "allow_delete_readonly": {
                    "description": "Allow deletion of read-only files in the share.",
                    "type": "boolean"
                },
                "allow_execute_always": {
                    "description": "Allows users to execute files they have read rights for.",
                    "type": "boolean"
                },
                "allow_variable_expansion": {
                    "description": "Allow automatic expansion of variables for home directories.",
                    "type": "boolean"
                },
                "auto_create_directory": {
                    "description": "Automatically create home directories.",
                    "type": "boolean"
                },
                "browsable": {
                    "description": "Share is visible in net view and the browse list.",
                    "type": "boolean"
                },
                "ca_timeout": {
                    "description": "Persistent open timeout for the share.",
                    "type": "integer"
                },
                "change_notify": {
                    "description": "Level of change notification alerts on the share.",
                    "enum": [
                        "all",
                        "norecurse",
                        "none"
                    ],
                    "type": "string"
                },
                "create_permissions": {
                    "description": "Create permissions for new files and directories in share.",
                    "enum": [
                        "default acl",
                        "inherit mode bits",
                        "use create mask and mode"
                    ],
                    "type": "string"
                },
                "csc_policy": {
                    "description": "Client-side caching policy for the shares.",
                    "enum": [
                        "manual",
                        "documents",
                        "programs",
                        "none"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Description for this SMB share.",
                    "type": "string"
                },
                "directory_create_mask": {
                    "description": "Directory create mask bits.",
                    "type": "integer"
                },
                "directory_create_mode": {
                    "description": "Directory create mode bits.",
                    "type": "integer"
                },
                "file_create_mask": {
                    "description": "File create mask bits.",
                    "type": "integer"
                },
                "file_create_mode": {
                    "description": "File create mode bits.",
                    "type": "integer"
                },
                "file_filter_extensions": {
                    "description": "Specifies the list of file extensions.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "file_filter_type": {
                    "description": "Specifies if filter list is for deny or allow. Default is deny.",
                    "enum": [
                        "deny",
                        "allow"
                    ],
                    "type": "string"
                },
                "file_filtering_enabled": {
                    "description": "Enables file filtering on this zone.",
                    "type": "boolean"
                },
                "hide_dot_files": {
                    "description": "Hide files and directories that begin with a period '.'.",
                    "type": "boolean"
                },
                "host_acl": {
                    "description": "An ACL expressing which hosts are allowed access. A deny clause must be the final entry.",
                    "items": {
                        "description": "<'allow:'|'deny:'><'ALL'|IP-range|subnet|fqdn>[' EXCEPT '<IP-range|subnet|fqdn>].",
                        "type": "string"
                    },
                    "type": "array"
                },
                "impersonate_guest": {
                    "description": "Specify the condition in which user access is done as the guest account.",
                    "enum": [
                        "always",
                        "bad user",
                        "never"
                    ],
                    "type": "string"
                },
                "impersonate_user": {
                    "description": "User account to be used as guest account.",
                    "type": "string"
                },
                "inheritable_path_acl": {
                    "description": "Set the inheritable ACL on the share path.",
                    "type": "boolean"
                },
                "mangle_byte_start": {
                    "description": "Specifies the wchar_t starting point for automatic byte mangling.",
                    "type": "integer"
                },
                "mangle_map": {
                    "description": "Character mangle map.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Share name.",
                    "type": "string"
                },
                "ntfs_acl_support": {
                    "description": "Support NTFS ACLs on files and directories.",
                    "type": "boolean"
                },
                "oplocks": {
                    "description": "Support oplocks.",
                    "type": "boolean"
                },
                "path": {
                    "description": "Path of share within /ifs.",
                    "type": "string"
                },
                "permissions": {
                    "description": "Ordered list of permission modifications.",
                    "items": {
                        "$ref": "#/definitions/SmbSharePermission",
                        "description": "Access Control Entry."
                    },
                    "type": "array"
                },
                "run_as_root": {
                    "description": "Allow account to run as root.",
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "strict_ca_lockout": {
                    "description": "Specifies if persistent opens would do strict lockout on the share.",
                    "type": "boolean"
                },
                "strict_flush": {
                    "description": "Handle SMB flush operations.",
                    "type": "boolean"
                },
                "strict_locking": {
                    "description": "Specifies whether byte range locks contend against SMB I/O.",
                    "type": "boolean"
                },
                "zone": {
                    "description": "Name of the access zone to which to move this SMB share",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "SmbShareCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SmbShare"
                },
                {
                    "properties": {
                        "continuously_available": {
                            "description": "Specify if persistent opens are allowed on the share.",
                            "type": "boolean"
                        },
                        "create_path": {
                            "description": "Create path if does not exist.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "path",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "SmbShareExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SmbShare"
                },
                {
                    "properties": {
                        "continuously_available": {
                            "description": "Specify if persistent opens are allowed on the share.",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "Share ID.",
                            "type": "string"
                        },
                        "zid": {
                            "description": "Numeric ID of the access zone which contains this SMB share",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "path",
                        "id",
                        "zid",
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "SmbSharePermission": {
            "properties": {
                "permission": {
                    "description": "Filesystem rights governed.",
                    "enum": [
                        "full",
                        "change",
                        "read"
                    ],
                    "type": "string"
                },
                "permission_type": {
                    "description": "Filesystem rights modification.",
                    "enum": [
                        "allow",
                        "deny"
                    ],
                    "type": "string"
                },
                "trustee": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                }
            },
            "required": [
                "permission_type",
                "trustee",
                "permission"
            ],
            "type": "object"
        },
        "SmbShares": {
            "properties": {
                "shares": {
                    "items": {
                        "$ref": "#/definitions/SmbShareExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SmbSharesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SmbShares"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SmbSharesSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/SmbSharesSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SmbSharesSummarySummary": {
            "properties": {
                "count": {
                    "description": "Total number of shares.",
                    "type": "integer"
                }
            },
            "required": [
                "count"
            ],
            "type": "object"
        },
        "SnapshotAliase": {
            "properties": {
                "name": {
                    "description": "The user or system supplied snapshot alias name.",
                    "type": "string"
                },
                "target": {
                    "description": "Target snapshot for this snapshot alias.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotAliaseCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotAliase"
                },
                {
                    "properties": {},
                    "required": [
                        "name",
                        "target"
                    ],
                    "type": "object"
                }
            ]
        },
        "SnapshotAliaseExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotAliase"
                },
                {
                    "properties": {
                        "created": {
                            "description": "The Unix Epoch time the snapshot alias was created.",
                            "type": "integer"
                        },
                        "id": {
                            "description": "The system ID given to the snapshot alias.",
                            "type": "integer"
                        },
                        "target_id": {
                            "description": "The ID of the snapshot pointed to.",
                            "type": "integer"
                        },
                        "target_name": {
                            "description": "The name of the snapshot pointed to.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "target_name",
                        "target_id",
                        "id",
                        "name",
                        "created"
                    ],
                    "type": "object"
                }
            ]
        },
        "SnapshotAliases": {
            "properties": {
                "aliases": {
                    "items": {
                        "$ref": "#/definitions/SnapshotAliaseExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SnapshotAliasesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotAliases"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Resume token value to use in subsequent calls for continuation.",
                            "required": false,
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotChangelists": {
            "properties": {
                "id": {
                    "description": "The system ID given to the changelist.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job which created the changelist.",
                    "type": "integer"
                },
                "num_entries": {
                    "description": "Number of LIN entries in changelist.",
                    "required": false,
                    "type": "integer"
                },
                "root_path": {
                    "description": "Root path of all LINs in changelist.",
                    "type": "string"
                },
                "snap1": {
                    "description": "The lower snapid used to compute the changelist.",
                    "type": "integer"
                },
                "snap2": {
                    "description": "The higher snapid used to compute the changelist.",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of changelist.",
                    "type": "string"
                }
            },
            "required": [
                "snap1",
                "status",
                "snap2",
                "job_id",
                "root_path",
                "id"
            ],
            "type": "object"
        },
        "SnapshotChangelistsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotChangelists"
                },
                {
                    "properties": {
                        "changelists": {
                            "items": {
                                "$ref": "#/definitions/SnapshotChangelists",
                                "description": ""
                            },
                            "type": "array"
                        },
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotPending": {
            "properties": {
                "pending": {
                    "items": {
                        "$ref": "#/definitions/SnapshotPendingPendingItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Resume token value to use in subsequent calls for continuation.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotPendingPendingItem": {
            "properties": {
                "id": {
                    "description": "The system supplied unique ID used for sorting and paging.",
                    "type": "string"
                },
                "path": {
                    "description": "The /ifs path that will snapshotted.",
                    "type": "string"
                },
                "schedule": {
                    "description": "The name of the schedule used to create this snapshot.",
                    "type": "string"
                },
                "snapshot": {
                    "description": "The system snapshot name formed from the schedule formate.",
                    "type": "string"
                },
                "time": {
                    "description": "The Unix Epoch time the snapshot will be created.",
                    "type": "integer"
                }
            },
            "required": [
                "path",
                "time",
                "snapshot",
                "id",
                "schedule"
            ],
            "type": "object"
        },
        "SnapshotRepstates": {
            "properties": {
                "id": {
                    "description": "The system ID given to the repstate.",
                    "type": "string"
                },
                "snap1": {
                    "description": "The lower snapid used to compute the repstate.",
                    "type": "integer"
                },
                "snap2": {
                    "description": "The higher snapid used to compute the repstate.",
                    "type": "integer"
                }
            },
            "required": [
                "snap1",
                "snap2",
                "id"
            ],
            "type": "object"
        },
        "SnapshotRepstatesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotRepstates"
                },
                {
                    "properties": {
                        "repstates": {
                            "items": {
                                "$ref": "#/definitions/SnapshotRepstates",
                                "description": ""
                            },
                            "type": "array"
                        },
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotSchedule": {
            "properties": {
                "alias": {
                    "description": "Alias name to create for each snapshot.",
                    "required": false,
                    "type": "string"
                },
                "duration": {
                    "description": "Time in seconds added to creation time to construction expiration time.",
                    "minimum": 0,
                    "required": false,
                    "type": "integer"
                },
                "name": {
                    "description": "The schedule name.",
                    "required": false,
                    "type": "string"
                },
                "path": {
                    "description": "The /ifs path snapshotted.",
                    "required": false,
                    "type": "string"
                },
                "pattern": {
                    "description": "Pattern expanded with strftime to create snapshot names.",
                    "required": false,
                    "type": "string"
                },
                "schedule": {
                    "description": "The isidate compatible natural language description of the schedule.",
                    "required": false,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotScheduleCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSchedule"
                },
                {
                    "properties": {},
                    "required": [
                        "name",
                        "schedule",
                        "pattern",
                        "path"
                    ],
                    "type": "object"
                }
            ]
        },
        "SnapshotScheduleExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSchedule"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The system ID given to the schedule.",
                            "type": "integer"
                        },
                        "next_run": {
                            "description": "Unix Epoch time of next snapshot to be created.",
                            "type": "integer"
                        },
                        "next_snapshot": {
                            "description": "Formatted name (see pattern) of next snapshot to be created.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotSchedules": {
            "properties": {
                "schedules": {
                    "items": {
                        "$ref": "#/definitions/SnapshotScheduleExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SnapshotSchedulesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSchedules"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Resume token value to use in subsequent calls for continuation.",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SnapshotSettingsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SnapshotSettingsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSettings"
                },
                {
                    "properties": {
                        "autocreate": {
                            "description": "True if the scheduled snapshot creation services is on.",
                            "required": false,
                            "type": "boolean"
                        },
                        "autodelete": {
                            "description": "True if the scheduled snapshot deletion services is on.",
                            "required": false,
                            "type": "boolean"
                        },
                        "global_visible_accessible": {
                            "description": "Global switch for other accessible and visible settings.",
                            "required": false,
                            "type": "boolean"
                        },
                        "local_root_accessible": {
                            "description": "True if root .snapshot directory is accessible locally.",
                            "required": false,
                            "type": "boolean"
                        },
                        "local_root_visible": {
                            "description": "True if root .snapshot directory is visible locally.",
                            "required": false,
                            "type": "boolean"
                        },
                        "local_subdir_accessible": {
                            "description": "True if sub-directory .snapshot directory is accessible locally.",
                            "required": false,
                            "type": "boolean"
                        },
                        "nfs_root_accessible": {
                            "description": "True if root .snapshot directory is accessible over NFS.",
                            "required": false,
                            "type": "boolean"
                        },
                        "nfs_root_visible": {
                            "description": "True if root .snapshot directory is visible over NFS.",
                            "required": false,
                            "type": "boolean"
                        },
                        "nfs_subdir_accessible": {
                            "description": "True if sub-directory .snapshot directory is accessible over NFS.",
                            "required": false,
                            "type": "boolean"
                        },
                        "reserve": {
                            "description": "Percentage of space to reserve for snapshots.",
                            "required": false,
                            "type": "number"
                        },
                        "service": {
                            "description": "True if the system allows snapshot creation.",
                            "required": false,
                            "type": "boolean"
                        },
                        "smb_root_accessible": {
                            "description": "True if root .snapshot directory is accessible over SMB.",
                            "required": false,
                            "type": "boolean"
                        },
                        "smb_root_visible": {
                            "description": "True if root .snapshot directory is visible over SMB.",
                            "required": false,
                            "type": "boolean"
                        },
                        "smb_subdir_accessible": {
                            "description": "True if sub-directory .snapshot directory is accessible over SMB.",
                            "required": false,
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotSettingsSettings": {
            "properties": {
                "autocreate": {
                    "description": "True if the scheduled snapshot creation services is on.",
                    "type": "boolean"
                },
                "autodelete": {
                    "description": "True if the scheduled snapshot deletion services is on.",
                    "type": "boolean"
                },
                "global_visible_accessible": {
                    "description": "Global switch for other accessible and visible settings.",
                    "type": "boolean"
                },
                "local_root_accessible": {
                    "description": "True if root .snapshot directory is accessible locally.",
                    "type": "boolean"
                },
                "local_root_visible": {
                    "description": "True if root .snapshot directory is visible locally.",
                    "type": "boolean"
                },
                "local_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible locally.",
                    "type": "boolean"
                },
                "nfs_root_accessible": {
                    "description": "True if root .snapshot directory is accessible over NFS.",
                    "type": "boolean"
                },
                "nfs_root_visible": {
                    "description": "True if root .snapshot directory is visible over NFS.",
                    "type": "boolean"
                },
                "nfs_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible over NFS.",
                    "type": "boolean"
                },
                "reserve": {
                    "description": "Percentage of space to reserve for snapshots.",
                    "type": "number"
                },
                "service": {
                    "description": "True if the system allows snapshot creation.",
                    "type": "boolean"
                },
                "smb_root_accessible": {
                    "description": "True if root .snapshot directory is accessible over SMB.",
                    "type": "boolean"
                },
                "smb_root_visible": {
                    "description": "True if root .snapshot directory is visible over SMB.",
                    "type": "boolean"
                },
                "smb_subdir_accessible": {
                    "description": "True if sub-directory .snapshot directory is accessible over SMB.",
                    "type": "boolean"
                }
            },
            "required": [
                "nfs_root_visible",
                "smb_root_visible",
                "local_root_visible",
                "autodelete",
                "reserve",
                "smb_subdir_accessible",
                "local_root_accessible",
                "autocreate",
                "service",
                "nfs_root_accessible",
                "nfs_subdir_accessible",
                "smb_root_accessible",
                "global_visible_accessible",
                "local_subdir_accessible"
            ],
            "type": "object"
        },
        "SnapshotSnapshot": {
            "properties": {
                "alias": {
                    "description": "Alias name to create for this snapshot. If null, remove any alias.",
                    "type": "string"
                },
                "expires": {
                    "description": "The Unix Epoch time the snapshot will expire and be eligible for automatic deletion.",
                    "type": "integer"
                },
                "name": {
                    "description": "The user or system supplied snapshot name. This will be null for snapshots pending delete.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SnapshotSnapshotCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSnapshot"
                },
                {
                    "properties": {
                        "path": {
                            "description": "The /ifs path snapshotted.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "path"
                    ],
                    "type": "object"
                }
            ]
        },
        "SnapshotSnapshotExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSnapshot"
                },
                {
                    "properties": {
                        "created": {
                            "description": "The Unix Epoch time the snapshot was created.",
                            "type": "integer"
                        },
                        "has_locks": {
                            "description": "True if the snapshot has one or more locks present see, see the locks subresource of a snapshot for a list of locks.",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "The system ID given to the snapshot. This is useful for tracking the status of delete pending snapshots.",
                            "type": "integer"
                        },
                        "path": {
                            "description": "The /ifs path snapshotted.",
                            "type": "string"
                        },
                        "pct_filesystem": {
                            "description": "Percentage of /ifs used for storing this snapshot.",
                            "type": "number"
                        },
                        "pct_reserve": {
                            "description": "Percentage of configured snapshot reserved used for storing this snapshot.",
                            "type": "number"
                        },
                        "schedule": {
                            "description": "The name of the schedule used to create this snapshot, if applicable.",
                            "type": "string"
                        },
                        "shadow_bytes": {
                            "description": "The amount of shadow bytes referred to by this snapshot.",
                            "type": "integer"
                        },
                        "size": {
                            "description": "The amount of storage in bytes used to store this snapshot.",
                            "type": "integer"
                        },
                        "state": {
                            "description": "Snapshot state.",
                            "enum": [
                                "active",
                                "deleting"
                            ],
                            "type": "string"
                        },
                        "target_id": {
                            "description": "The ID of the snapshot pointed to if this is an alias.",
                            "type": "integer"
                        },
                        "target_name": {
                            "description": "The name of the snapshot pointed to if this is an alias.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "pct_reserve",
                        "shadow_bytes",
                        "name",
                        "created",
                        "target_name",
                        "expires",
                        "target_id",
                        "schedule",
                        "alias",
                        "state",
                        "has_locks",
                        "path",
                        "pct_filesystem",
                        "id",
                        "size"
                    ],
                    "type": "object"
                }
            ]
        },
        "SnapshotSnapshots": {
            "properties": {
                "snapshots": {
                    "items": {
                        "$ref": "#/definitions/SnapshotSnapshotExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SnapshotSnapshotsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotSnapshots"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotSnapshotsSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/SnapshotSnapshotsSummarySummary",
                    "description": ""
                }
            },
            "type": "object"
        },
        "SnapshotSnapshotsSummarySummary": {
            "properties": {
                "active_count": {
                    "description": "Total number of active snapshots.",
                    "type": "integer"
                },
                "active_size": {
                    "description": "Sum of sizes of active snapshots.",
                    "type": "integer"
                },
                "aliases_count": {
                    "description": "Total number of snapshot aliases.",
                    "type": "integer"
                },
                "count": {
                    "description": "Total number of snapshots.",
                    "type": "integer"
                },
                "deleting_count": {
                    "description": "Total number of delete-pending snapshots.",
                    "type": "integer"
                },
                "deleting_size": {
                    "description": "Sum of sizes of delete-pending snapshots.",
                    "type": "integer"
                },
                "shadow_bytes": {
                    "description": "Sum of shadow bytes of all snapshots.",
                    "type": "integer"
                },
                "size": {
                    "description": "Sum of sizes in bytes of all snapshots.",
                    "type": "integer"
                }
            },
            "required": [
                "count",
                "aliases_count",
                "shadow_bytes",
                "deleting_size",
                "active_size",
                "deleting_count",
                "active_count",
                "size"
            ],
            "type": "object"
        },
        "SnapshotsSidLock": {
            "properties": {
                "expires": {
                    "description": "The Unix Epoch time the snapshot lock will expire and be eligible for automatic deletion.",
                    "maximum": 2147483647,
                    "minimum": 1,
                    "required": false,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnapshotsSidLockCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotsSidLock"
                },
                {
                    "properties": {
                        "comment": {
                            "description": "Free form comment.",
                            "required": false,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotsSidLocks": {
            "properties": {
                "locks": {
                    "items": {
                        "$ref": "#/definitions/SnapshotsSidLocksLock",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SnapshotsSidLocksExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnapshotsSidLocks"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Resume token value to use in subsequent calls for continuation.",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnapshotsSidLocksLock": {
            "properties": {
                "comment": {
                    "description": "User supplied lock comment.",
                    "type": "string"
                },
                "count": {
                    "description": "Recursive lock count.",
                    "type": "integer"
                },
                "expires": {
                    "description": "The Unix Epoch time the snapshot lock will expire and be eligible for automatic deletion.",
                    "type": "integer"
                },
                "id": {
                    "description": "System generated lock ID.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SnmpSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SnmpSettingsSettings",
                    "description": "SNMP settings."
                }
            },
            "type": "object"
        },
        "SnmpSettingsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SnmpSettings"
                },
                {
                    "description": "SNMP settings.",
                    "properties": {
                        "read_only_community": {
                            "description": "The read-only community name.  @DEFAULT reverts this field to its default value.",
                            "minLength": 1,
                            "type": "string"
                        },
                        "service": {
                            "description": "Whether the SNMP service is enabled.",
                            "type": "boolean"
                        },
                        "snmp_v1_v2c_access": {
                            "description": "Whether SNMP v1 and v2c protocols are enabled.  @DEFAULT reverts this field to its default value.",
                            "type": "boolean"
                        },
                        "snmp_v3_access": {
                            "description": "Whether SNMP v3 is enabled.  @DEFAULT reverts this field to its default value.",
                            "type": "boolean"
                        },
                        "snmp_v3_password": {
                            "description": "This field allows a client to change the SNMP v3 password. There is always a password set.  @DEFAULT reverts this field to its default value.",
                            "maxLength": 39,
                            "minLength": 8,
                            "type": "string"
                        },
                        "snmp_v3_read_only_user": {
                            "description": "The read-only user for SNMP v3 read requests.  @DEFAULT reverts this field to its default value.",
                            "minLength": 1,
                            "type": "string"
                        },
                        "system_contact": {
                            "description": "Contact information for the system owner.  This must be a valid email address.  @DEFAULT reverts this field to its default value.",
                            "minLength": 1,
                            "pattern": "^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$",
                            "type": "string"
                        },
                        "system_location": {
                            "description": "A location name for the SNMP system.  @DEFAULT reverts this field to its default value.",
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SnmpSettingsSettings": {
            "properties": {
                "read_only_community": {
                    "description": "The read-only community name.  @DEFAULT reverts this field to its default value.",
                    "minLength": 1,
                    "type": "string"
                },
                "service": {
                    "description": "Whether the SNMP service is enabled.",
                    "type": "boolean"
                },
                "snmp_v1_v2c_access": {
                    "description": "Whether SNMP v1 and v2c protocols are enabled.  @DEFAULT reverts this field to its default value.",
                    "type": "boolean"
                },
                "snmp_v3_access": {
                    "description": "Whether SNMP v3 is enabled.  @DEFAULT reverts this field to its default value.",
                    "type": "boolean"
                },
                "snmp_v3_read_only_user": {
                    "description": "The read-only user for SNMP v3 read requests.  @DEFAULT reverts this field to its default value.",
                    "minLength": 1,
                    "type": "string"
                },
                "system_contact": {
                    "description": "Contact information for the system owner.  This must be a valid email address.  @DEFAULT reverts this field to its default value.",
                    "minLength": 1,
                    "pattern": "^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$",
                    "type": "string"
                },
                "system_location": {
                    "description": "A location name for the SNMP system.  @DEFAULT reverts this field to its default value.",
                    "minLength": 1,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StatisticsCurrent": {
            "properties": {
                "stats": {
                    "items": {
                        "$ref": "#/definitions/StatisticsCurrentStat",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StatisticsCurrentStat": {
            "properties": {
                "devid": {
                    "description": "Devid of node of statistic or 0 for cluster scoped statistics.",
                    "type": "integer"
                },
                "error": {
                    "description": "Key specific error string, if applicable.",
                    "type": "string"
                },
                "error_code": {
                    "description": "Key specific error number, if applicable.",
                    "type": "integer"
                },
                "key": {
                    "description": "Key name of statistic.",
                    "type": "string"
                },
                "time": {
                    "description": "Unix Epoch time in seconds that statistic was collected.",
                    "type": "integer"
                },
                "value": {
                    "description": "Key dependent value.",
                    "type": "string"
                }
            },
            "required": [
                "error",
                "devid",
                "value",
                "key",
                "time",
                "error_code"
            ],
            "type": "object"
        },
        "StatisticsHistory": {
            "properties": {
                "stats": {
                    "items": {
                        "$ref": "#/definitions/StatisticsHistoryStat",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StatisticsHistoryStat": {
            "properties": {
                "devid": {
                    "description": "Devid of node of statistic or 0 for cluster scoped statistics.",
                    "type": "integer"
                },
                "error": {
                    "description": "Key specific error string, if applicable.",
                    "type": "string"
                },
                "error_code": {
                    "description": "Key specific error number, if applicable.",
                    "type": "integer"
                },
                "key": {
                    "description": "Key name of statistic.",
                    "type": "string"
                },
                "values": {
                    "description": "Time-series values.",
                    "items": {
                        "$ref": "#/definitions/StatisticsHistoryStatValue",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "values",
                "devid",
                "error_code",
                "key",
                "error"
            ],
            "type": "object"
        },
        "StatisticsHistoryStatValue": {
            "properties": {
                "time": {
                    "description": "Unix Epoch time in seconds that statistic was collected.",
                    "type": "integer"
                },
                "value": {
                    "description": "Key dependent value.",
                    "type": "string"
                }
            },
            "required": [
                "value",
                "time"
            ],
            "type": "object"
        },
        "StatisticsKey": {
            "properties": {
                "aggregation_type": {
                    "description": "Type of aggregation used in down-sampling.",
                    "enum": [
                        "last",
                        "min",
                        "max",
                        "avg",
                        "sum",
                        "custom"
                    ],
                    "type": "string"
                },
                "base_name": {
                    "description": "Name of key this keys is derived from, if any.",
                    "type": "string"
                },
                "default_cache_time": {
                    "description": "Default time in seconds system will used cached values.",
                    "type": "integer"
                },
                "description": {
                    "description": "Description of statistics key.",
                    "type": "string"
                },
                "key": {
                    "description": "Key name.",
                    "type": "string"
                },
                "policies": {
                    "description": "List of effective history policies for key.",
                    "items": {
                        "$ref": "#/definitions/StatisticsKeyPolicy",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy_cache_time": {
                    "description": "Configured time in seconds system will used cached values.",
                    "type": "integer"
                },
                "real_name": {
                    "description": "Name of real key if this is an alias.",
                    "type": "string"
                },
                "scope": {
                    "description": "Scope of key.",
                    "enum": [
                        "cluster",
                        "node"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Data type of key values.",
                    "type": "string"
                },
                "units": {
                    "description": "Units of key values.",
                    "type": "string"
                }
            },
            "required": [
                "policies",
                "base_name",
                "policy_cache_time",
                "default_cache_time",
                "description",
                "real_name",
                "key",
                "units",
                "scope",
                "type",
                "aggregation_type"
            ],
            "type": "object"
        },
        "StatisticsKeyPolicy": {
            "properties": {
                "interval": {
                    "description": "Time between samples in seconds.",
                    "type": "integer"
                },
                "persistent": {
                    "description": "If true, history is persisted.",
                    "type": "boolean"
                },
                "retention": {
                    "description": "Time in seconds to keep data.",
                    "type": "integer"
                }
            },
            "required": [
                "interval",
                "persistent",
                "retention"
            ],
            "type": "object"
        },
        "StatisticsKeys": {
            "properties": {
                "keys": {
                    "items": {
                        "$ref": "#/definitions/StatisticsKey",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StatisticsKeysExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StatisticsKeys"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StatisticsOperation": {
            "properties": {
                "operations": [
                    {
                        "operation": {
                            "description": "The name of the operation.",
                            "required": true,
                            "type": "string"
                        }
                    }
                ]
            },
            "type": "object"
        },
        "StatisticsOperations": {
            "properties": {
                "operations": {
                    "items": {
                        "$ref": "#/definitions/StatisticsOperation",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StatisticsProtocol": {
            "properties": {
                "name": {
                    "description": "Abbreviated name of protocol.",
                    "type": "string"
                },
                "type": {
                    "description": "External protocols are customer facing, internal protocols expose metrics for internal OneFS systems.",
                    "enum": [
                        "external",
                        "internal"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type",
                "name"
            ],
            "type": "object"
        },
        "StatisticsProtocols": {
            "properties": {
                "protocols": {
                    "items": {
                        "$ref": "#/definitions/StatisticsProtocol",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "protocols"
            ],
            "type": "object"
        },
        "StoragepoolNodepool": {
            "properties": {
                "l3": {
                    "description": "Use SSDs in this node pool for L3 cache.",
                    "type": "boolean"
                },
                "lnns": {
                    "description": "The nodes that are part of this node pool.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The node pool name.",
                    "type": "string"
                },
                "protection_policy": {
                    "description": "The node pool protection policy.",
                    "type": "string"
                },
                "tier": {
                    "description": "The name or ID of the node pool's tier, if it is in a tier.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StoragepoolNodepoolCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolNodepool"
                },
                {
                    "properties": {},
                    "required": [
                        "name",
                        "lnns"
                    ],
                    "type": "object"
                }
            ]
        },
        "StoragepoolNodepoolExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolNodepool"
                },
                {
                    "health_flags": {
                        "description": "An array of containing any health issues with this pool.  If the pool is healthy, the list is empty.",
                        "items": {
                            "enum": [
                                "underprovisioned",
                                "missing_drives",
                                "devices_down",
                                "devices_smartfailed",
                                "waiting_repair"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "properties": {
                        "can_enable_l3": {
                            "description": "Indicates if enabling L3 is possible. L3 cannot be enabled if there are unprovisioned drives.",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "The system ID given to the node pool.",
                            "type": "integer"
                        },
                        "l3_status": {
                            "description": "'storage' if the 'l3' option is disabled. If the l3 option is enabled, 'migrating' if any SSDs in this node pool have not yet been migrated to L3. If all SSDs have been migrated, 'l3'.",
                            "enum": [
                                "l3",
                                "storage",
                                "migrating"
                            ],
                            "type": "string"
                        },
                        "manual": {
                            "description": "Whether or not the node pool is manually managed.",
                            "type": "boolean"
                        },
                        "usage": {
                            "$ref": "#/definitions/StoragepoolTierUsage",
                            "description": "Total pool usage."
                        }
                    },
                    "required": [
                        "name",
                        "lnns",
                        "l3_status",
                        "manual",
                        "id",
                        "l3",
                        "tier",
                        "can_enable_l3"
                    ],
                    "type": "object"
                }
            ]
        },
        "StoragepoolNodepools": {
            "properties": {
                "nodepools": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolNodepoolExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StoragepoolNodepoolsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolNodepools"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StoragepoolSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/StoragepoolSettingsSettings",
                    "description": ""
                }
            },
            "type": "object"
        },
        "StoragepoolSettingsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolSettings"
                },
                {
                    "properties": {
                        "automatically_manage_io_optimization": {
                            "description": "Automatically manage IO optimization settings on files.",
                            "enum": [
                                "all",
                                "files_at_default",
                                "none"
                            ],
                            "type": "string"
                        },
                        "automatically_manage_protection": {
                            "description": "Automatically manage protection settings on files.",
                            "enum": [
                                "all",
                                "files_at_default",
                                "none"
                            ],
                            "type": "string"
                        },
                        "global_namespace_acceleration_enabled": {
                            "description": "Optimize namespace operations by storing metadata on SSDs.",
                            "type": "boolean"
                        },
                        "protect_directories_one_level_higher": {
                            "description": "Automatically add additional protection level to all directories.",
                            "type": "boolean"
                        },
                        "spillover_enabled": {
                            "description": "Spill writes into other pools as needed.",
                            "type": "boolean"
                        },
                        "spillover_target": {
                            "$ref": "#/definitions/StoragepoolSettingsSpilloverTarget",
                            "description": "Target pool for spilled writes."
                        },
                        "ssd_l3_cache_default_enabled": {
                            "description": "The L3 Cache default enabled state. This specifies whether L3 Cache should be enabled on new node pools",
                            "type": "boolean"
                        },
                        "virtual_hot_spare_deny_writes": {
                            "description": "Deny writes into reserved virtual hot spare space.",
                            "type": "boolean"
                        },
                        "virtual_hot_spare_hide_spare": {
                            "description": "Hide reserved virtual hot spare space from free space counts.",
                            "type": "boolean"
                        },
                        "virtual_hot_spare_limit_drives": {
                            "description": "The number of drives to reserve for the virtual hot spare, from 0-4.",
                            "maximum": 4,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "virtual_hot_spare_limit_percent": {
                            "description": "The percent space to reserve for the virtual hot spare, from 0-20.",
                            "maximum": 20,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StoragepoolSettingsSettings": {
            "properties": {
                "automatically_manage_io_optimization": {
                    "description": "Automatically manage IO optimization settings on files.",
                    "enum": [
                        "all",
                        "files_at_default",
                        "none"
                    ],
                    "type": "string"
                },
                "automatically_manage_protection": {
                    "description": "Automatically manage protection settings on files.",
                    "enum": [
                        "all",
                        "files_at_default",
                        "none"
                    ],
                    "type": "string"
                },
                "global_namespace_acceleration_enabled": {
                    "description": "Optimize namespace operations by storing metadata on SSDs.",
                    "type": "boolean"
                },
                "global_namespace_acceleration_state": {
                    "description": "Whether or not namespace operation optimizations are currently in effect.",
                    "enum": [
                        "honored",
                        "inactive"
                    ],
                    "type": "string"
                },
                "protect_directories_one_level_higher": {
                    "description": "Automatically add additional protection level to all directories.",
                    "type": "boolean"
                },
                "spillover_enabled": {
                    "description": "Spill writes into other pools as needed.",
                    "type": "boolean"
                },
                "spillover_target": {
                    "$ref": "#/definitions/StoragepoolSettingsSettingsSpilloverTarget",
                    "description": "Target pool for spilled writes."
                },
                "ssd_l3_cache_default_enabled": {
                    "description": "The L3 Cache default enabled state. This specifies whether L3 Cache should be enabled on new node pools.",
                    "type": "boolean"
                },
                "virtual_hot_spare_deny_writes": {
                    "description": "Deny writes into reserved virtual hot spare space.",
                    "type": "boolean"
                },
                "virtual_hot_spare_hide_spare": {
                    "description": "Hide reserved virtual hot spare space from free space counts.",
                    "type": "boolean"
                },
                "virtual_hot_spare_limit_drives": {
                    "description": "The number of drives to reserve for the virtual hot spare, from 0-4.",
                    "maximum": 4,
                    "minimum": 0,
                    "type": "integer"
                },
                "virtual_hot_spare_limit_percent": {
                    "description": "The percent space to reserve for the virtual hot spare, from 0-20.",
                    "maximum": 20,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "virtual_hot_spare_deny_writes",
                "virtual_hot_spare_hide_spare",
                "global_namespace_acceleration_enabled",
                "virtual_hot_spare_limit_percent",
                "virtual_hot_spare_limit_drives",
                "automatically_manage_io_optimization",
                "spillover_enabled",
                "ssd_l3_cache_default_enabled",
                "automatically_manage_protection",
                "global_namespace_acceleration_state",
                "protect_directories_one_level_higher"
            ],
            "type": "object"
        },
        "StoragepoolSettingsSettingsSpilloverTarget": {
            "properties": {
                "id": {
                    "description": "Target pool ID if target specified, otherwise null.",
                    "type": "integer"
                },
                "name": {
                    "description": "Target pool name if target specified, otherwise null.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of target pool.",
                    "enum": [
                        "tier",
                        "nodepool",
                        "anywhere",
                        "invalid"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type",
                "id",
                "name"
            ],
            "type": "object"
        },
        "StoragepoolSettingsSpilloverTarget": {
            "properties": {
                "name_or_id": {
                    "description": "Target pool ID if target specified, otherwise null.",
                    "required": false,
                    "type": "integer"
                },
                "type": {
                    "description": "Type of target pool.",
                    "enum": [
                        "storagepool",
                        "anywhere"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object"
        },
        "StoragepoolStatus": {
            "properties": {
                "unhealthy": {
                    "description": "Disk pools which are currently unhealthy.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnhealthyItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "unprovisioned": {
                    "description": "Drives which are not currently provisioned into a disk pool.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnprovisionedItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "unprovisioned",
                "unhealthy"
            ],
            "type": "object"
        },
        "StoragepoolStatusUnhealthyItem": {
            "properties": {
                "affected": {
                    "description": "The affected nodes and/or drives.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnhealthyItemAffectedItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "diskpool": {
                    "$ref": "#/definitions/StoragepoolStatusUnhealthyItemDiskpool",
                    "description": ""
                },
                "health_flags": {
                    "description": "An array of containing any health issues with this pool.  If the pool is healthy, the list is empty.",
                    "items": {
                        "enum": [
                            "underprovisioned",
                            "missing_drives",
                            "devices_down",
                            "devices_smartfailed",
                            "waiting_repair"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "affected"
            ],
            "type": "object"
        },
        "StoragepoolStatusUnhealthyItemAffectedItem": {
            "properties": {
                "device": {
                    "description": "The logical node number or drive identifier.",
                    "type": "integer"
                },
                "down": {
                    "description": "Whether or not the device is currently down.",
                    "type": "boolean"
                },
                "restriping": {
                    "description": "Whether or not the device is currently being repaired.",
                    "type": "boolean"
                },
                "smartfailed": {
                    "description": "Whether or not the device is currently smartfailed.",
                    "type": "boolean"
                },
                "type": {
                    "description": "The type of affected device.",
                    "enum": [
                        "node",
                        "drive"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "device",
                "down",
                "restriping",
                "type",
                "smartfailed"
            ],
            "type": "object"
        },
        "StoragepoolStatusUnhealthyItemDiskpool": {
            "properties": {
                "drives": {
                    "description": "The drives that are part of this disk pool.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnprovisionedItem",
                        "description": ""
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The system ID given to the disk pool.",
                    "type": "integer"
                },
                "name": {
                    "description": "The disk pool name.",
                    "type": "string"
                },
                "nodepool_id": {
                    "description": "The system ID of the disk pool's node pool, if it is in a node pool.",
                    "type": "integer"
                },
                "protection_policy": {
                    "description": "The protection policy for the disk pool.",
                    "type": "string"
                },
                "ssd_drives": {
                    "description": "The SSDs that are part of this disk pool.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnprovisionedItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "required": [
                "ssd_drives",
                "name",
                "drives",
                "protection_policy",
                "nodepool_id",
                "id"
            ],
            "type": "object"
        },
        "StoragepoolStatusUnprovisionedItem": {
            "properties": {
                "bay": {
                    "description": "The drive bay number.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "The node the drive is on.",
                    "type": "integer"
                }
            },
            "required": [
                "lnn",
                "bay"
            ],
            "type": "object"
        },
        "StoragepoolStoragepool": {
            "health_flags": {
                "description": "An array of containing any health issues with this pool.  If the pool is healthy, the list is empty.  Only appears on 'nodepool' type storagepools.",
                "items": {
                    "enum": [
                        "underprovisioned",
                        "missing_drives",
                        "devices_down",
                        "devices_smartfailed",
                        "waiting_repair"
                    ],
                    "type": "string"
                },
                "type": "array"
            },
            "properties": {
                "can_enable_l3": {
                    "description": "Indicates if enabling L3 is possible. L3 cannot be enabled if there are unprovisioned drives.",
                    "type": "boolean"
                },
                "children": {
                    "description": "The names or IDs of the pool's children.",
                    "items": {
                        "type": "string"
                    },
                    "required": false,
                    "type": "array"
                },
                "id": {
                    "description": "The system ID given to the pool.",
                    "type": "integer"
                },
                "l3": {
                    "description": "Use SSDs in this node pool for L3 cache.",
                    "type": "boolean"
                },
                "l3_status": {
                    "description": "'storage' if the 'l3' option is disabled. If the l3 option is enabled, 'migrating' if any SSDs in this node pool have not yet been migrated to L3. If all SSDs have been migrated, 'l3'.",
                    "enum": [
                        "l3",
                        "storage",
                        "migrating"
                    ],
                    "type": "string"
                },
                "lnns": {
                    "description": "The nodes that are part of this pool.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "manual": {
                    "description": "Whether or not the node pool is manually managed.",
                    "required": false,
                    "type": "boolean"
                },
                "name": {
                    "description": "The pool name.",
                    "type": "string"
                },
                "protection_policy": {
                    "description": "The underlying protection policy.",
                    "type": "string"
                },
                "type": {
                    "description": "The pool type.",
                    "enum": [
                        "tier",
                        "nodepool"
                    ],
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/StoragepoolTierUsage",
                    "description": "Total pool usage."
                }
            },
            "required": [
                "name",
                "lnns",
                "l3_status",
                "can_enable_l3",
                "l3",
                "type",
                "id"
            ],
            "type": "object"
        },
        "StoragepoolStoragepools": {
            "properties": {
                "storagepools": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolStoragepool",
                        "description": ""
                    },
                    "type": "array"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "StoragepoolSuggestedProtection": {
            "properties": {
                "suggested_protection": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolSuggestedProtectionSuggestedProtectionItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StoragepoolSuggestedProtectionSuggestedProtectionItem": {
            "properties": {
                "suggested_protection": {
                    "description": "The suggested protection policy.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StoragepoolTier": {
            "properties": {
                "children": {
                    "description": "The names or IDs of the tier's children.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "The tier name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "StoragepoolTierCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolTier"
                },
                {
                    "properties": {},
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "StoragepoolTierExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolTier"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The system ID given to the tier.",
                            "type": "integer"
                        },
                        "lnns": {
                            "description": "The nodes that are part of this tier.",
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "usage": {
                            "$ref": "#/definitions/StoragepoolTierUsage",
                            "description": "Total pool usage."
                        }
                    },
                    "required": [
                        "lnns",
                        "name",
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "StoragepoolTierUsage": {
            "properties": {
                "avail_bytes": {
                    "description": "Available free bytes remaining in the pool when virtual hot spare is taken into account.",
                    "type": "string"
                },
                "avail_ssd_bytes": {
                    "description": "Available free bytes remaining in the pool on SSD drives when virtual hot spare is taken into account.",
                    "type": "string"
                },
                "balanced": {
                    "description": "Whether or not the pool usage is currently balanced.",
                    "type": "boolean"
                },
                "free_bytes": {
                    "description": "Free bytes remaining in the pool.",
                    "type": "string"
                },
                "free_ssd_bytes": {
                    "description": "Free bytes remaining in the pool on SSD drives.",
                    "type": "string"
                },
                "total_bytes": {
                    "description": "Total bytes used in the pool.",
                    "type": "string"
                },
                "total_ssd_bytes": {
                    "description": "Total bytes used in the pool on SSD drives.",
                    "type": "string"
                },
                "virtual_hot_spare_bytes": {
                    "description": "Bytes reserved for virtual hot spare in the pool.",
                    "type": "string"
                }
            },
            "required": [
                "virtual_hot_spare_bytes",
                "avail_bytes",
                "avail_ssd_bytes",
                "free_ssd_bytes",
                "free_bytes",
                "total_ssd_bytes",
                "total_bytes",
                "balanced"
            ],
            "type": "object"
        },
        "StoragepoolTiers": {
            "properties": {
                "tiers": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolTierExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StoragepoolTiersExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/StoragepoolTiers"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "StoragepoolUnprovisioned": {
            "properties": {
                "unprovisioned": {
                    "items": {
                        "$ref": "#/definitions/StoragepoolUnprovisionedUnprovisionedItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "StoragepoolUnprovisionedUnprovisionedItem": {
            "properties": {
                "drives": {
                    "description": "A list of unprovisioned drives that do not belong to an unprovisioned node.",
                    "items": {
                        "$ref": "#/definitions/StoragepoolStatusUnprovisionedItem"
                    },
                    "type": "array"
                },
                "lnns": {
                    "description": "A list of lnns whose drives are all unprovisioned",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "required": [
                "drives",
                "lnns"
            ],
            "type": "object"
        },
        "SummaryClient": {
            "properties": {
                "client": {
                    "items": {
                        "$ref": "#/definitions/SummaryClientClientItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SummaryClientClientItem": {
            "properties": {
                "class": {
                    "description": "The class of the operation.",
                    "type": "string"
                },
                "in": {
                    "description": "Rate of input (in bytes/second) for an operation since the last time isi statistics collected the data.",
                    "type": "number"
                },
                "in_avg": {
                    "description": "Average input (received) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "in_max": {
                    "description": "Maximum input (received) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "in_min": {
                    "description": "Minimum input (received) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "local_addr": {
                    "description": "The IP address (in dotted-quad form) of the host receiving the operation request.",
                    "type": "string"
                },
                "local_name": {
                    "description": "The resolved text name of the LocalAddr, if resolution can be performed.",
                    "type": "string"
                },
                "node": {
                    "description": "The node on which the operation was performed.",
                    "type": "integer"
                },
                "num_operations": {
                    "description": "The number of times an operation has been performed.",
                    "type": "integer"
                },
                "operation_rate": {
                    "description": "The rate (in ops/second) at which an operation has been performed.",
                    "type": "number"
                },
                "out": {
                    "description": "Rate of output (in bytes/second) for an operation since the last time isi statistics collected the data.",
                    "type": "number"
                },
                "out_avg": {
                    "description": "Average output (sent) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "out_max": {
                    "description": "Maximum output (sent) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "out_min": {
                    "description": "Minimum output (sent) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "protocol": {
                    "description": "The protocol of the operation.",
                    "type": "string"
                },
                "remote_addr": {
                    "description": "The IP address (in dotted-quad form) of the host sending the operation request.",
                    "type": "string"
                },
                "remote_name": {
                    "description": "The resolved text name of the RemoteAddr, if resolution can be performed.",
                    "type": "string"
                },
                "time": {
                    "description": "Unix Epoch time in seconds of the request.",
                    "type": "integer"
                },
                "time_avg": {
                    "description": "The average elapsed time (in microseconds) taken to complete an operation.",
                    "type": "number"
                },
                "time_max": {
                    "description": "The maximum elapsed time (in microseconds) taken to complete an operation.",
                    "type": "number"
                },
                "time_min": {
                    "description": "The minimum elapsed time (in microseconds) taken to complete an operation.",
                    "type": "number"
                },
                "user": {
                    "$ref": "#/definitions/GroupsGroupMember",
                    "description": "User issuing the operation."
                }
            },
            "required": [
                "out_avg",
                "protocol",
                "num_operations",
                "in",
                "out",
                "time_avg",
                "time_max",
                "remote_addr",
                "local_addr",
                "in_avg",
                "node",
                "in_min",
                "local_name",
                "out_min",
                "time_min",
                "remote_name",
                "class",
                "in_max",
                "operation_rate",
                "out_max",
                "time"
            ],
            "type": "object"
        },
        "SummaryDrive": {
            "properties": {
                "drive": {
                    "items": {
                        "$ref": "#/definitions/SummaryDriveDriveItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SummaryDriveDriveItem": {
            "properties": {
                "access_latency": {
                    "description": "The average operation latency.",
                    "type": "number"
                },
                "access_slow": {
                    "description": "The rate of slow (long-latency) operations.",
                    "type": "number"
                },
                "busy": {
                    "description": "The percentage of time the drive was busy.",
                    "type": "number"
                },
                "bytes_in": {
                    "description": "The rate of bytes written.",
                    "type": "number"
                },
                "bytes_out": {
                    "description": "The rate of bytes read.",
                    "type": "number"
                },
                "drive_id": {
                    "description": "Drive ID LNN:bay.",
                    "type": "string"
                },
                "iosched_latency": {
                    "description": "The average time spent in the I/O scheduler.",
                    "type": "number"
                },
                "iosched_queue": {
                    "description": "The average length of the I/O scheduler queue.",
                    "type": "number"
                },
                "time": {
                    "description": "Unix Epoch time in seconds of the request.",
                    "type": "integer"
                },
                "type": {
                    "description": "The type of the drive.",
                    "type": "string"
                },
                "used_bytes_percent": {
                    "description": "The percent of blocks used on the drive.",
                    "type": "number"
                },
                "used_inodes": {
                    "description": "The number of inodes allocated on the drive.",
                    "type": "number"
                },
                "xfer_size_in": {
                    "description": "The average size of write operations.",
                    "type": "number"
                },
                "xfer_size_out": {
                    "description": "The average size of read operations.",
                    "type": "number"
                },
                "xfers_in": {
                    "description": "The rate of write operations.",
                    "type": "number"
                },
                "xfers_out": {
                    "description": "The rate of read operations.",
                    "type": "number"
                }
            },
            "required": [
                "xfer_size_in",
                "access_latency",
                "xfers_in",
                "iosched_latency",
                "bytes_in",
                "time",
                "iosched_queue",
                "access_slow",
                "xfers_out",
                "busy",
                "used_inodes",
                "bytes_out",
                "drive_id",
                "xfer_size_out",
                "type",
                "used_bytes_percent"
            ],
            "type": "object"
        },
        "SummaryHeat": {
            "properties": {
                "heat": {
                    "items": {
                        "$ref": "#/definitions/SummaryHeatHeatItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SummaryHeatHeatItem": {
            "properties": {
                "class_name": {
                    "description": "The class of operation",
                    "type": "string"
                },
                "event_name": {
                    "description": "The type of event",
                    "type": "string"
                },
                "event_type": {
                    "description": "The event type id",
                    "type": "integer"
                },
                "lin": {
                    "description": "Logical inode (LIN)",
                    "type": "string"
                },
                "node": {
                    "description": "The node where this event occurred.",
                    "type": "integer"
                },
                "operation_rate": {
                    "description": "Approximate operations per second for this lin.",
                    "type": "number"
                },
                "path": {
                    "description": "Canonical LIN path if known",
                    "type": "string"
                },
                "time": {
                    "description": "Unix Epoch time in seconds of the request.",
                    "type": "integer"
                }
            },
            "required": [
                "node",
                "event_type",
                "class_name",
                "lin",
                "operation_rate",
                "event_name",
                "time",
                "path"
            ],
            "type": "object"
        },
        "SummaryProtocol": {
            "properties": {
                "protocol": {
                    "items": {
                        "$ref": "#/definitions/SummaryProtocolProtocolItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SummaryProtocolProtocolItem": {
            "properties": {
                "class": {
                    "description": "The class of the operation.",
                    "type": "string"
                },
                "in": {
                    "description": "Rate of input (in bytes/second) for an operation since the last time isi statistics collected the data.",
                    "type": "number"
                },
                "in_avg": {
                    "description": "Average input (received) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "in_max": {
                    "description": "Maximum input (received) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "in_min": {
                    "description": "Minimum input (received) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "in_standard_dev": {
                    "description": "Standard deviation for input (received) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "node": {
                    "description": "The node on which the operation was performed.",
                    "type": "integer"
                },
                "operation": {
                    "description": "The operation performed.",
                    "type": "string"
                },
                "operation_count": {
                    "description": "The number of times an operation has been performed.",
                    "type": "integer"
                },
                "operation_rate": {
                    "description": "The rate (in ops/second) at which an operation has been performed.",
                    "type": "number"
                },
                "out": {
                    "description": "Rate of output (in bytes/second) for an operation since the last time isi statistics collected the data.",
                    "type": "number"
                },
                "out_avg": {
                    "description": "Average output (sent) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "out_max": {
                    "description": "Maximum output (sent) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "out_min": {
                    "description": "Minimum output (sent) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "out_standard_dev": {
                    "description": "Standard deviation for output (received) bytes for an operation, in bytes.",
                    "type": "number"
                },
                "protocol": {
                    "description": "The protocol of the operation.",
                    "type": "string"
                },
                "time": {
                    "description": "Unix Epoch time in seconds of the request.",
                    "type": "integer"
                },
                "time_avg": {
                    "description": "The average elapsed time (in microseconds) taken to complete an operation.",
                    "type": "number"
                },
                "time_max": {
                    "description": "The maximum elapsed time (in microseconds) taken to complete an operation.",
                    "type": "number"
                },
                "time_min": {
                    "description": "The minimum elapsed time (in microseconds) taken to complete an operation.",
                    "type": "number"
                },
                "time_standard_dev": {
                    "description": "The standard deviation time (in microseconds) taken to complete an operation.",
                    "type": "number"
                }
            },
            "required": [
                "node",
                "in_min",
                "protocol",
                "time_min",
                "time_avg",
                "time_standard_dev",
                "time",
                "in_max",
                "out_avg",
                "operation_rate",
                "out_max",
                "out_standard_dev",
                "out_min",
                "in",
                "in_standard_dev",
                "time_max",
                "operation",
                "operation_count",
                "class",
                "in_avg",
                "out"
            ],
            "type": "object"
        },
        "SummarySystem": {
            "properties": {
                "system": {
                    "items": {
                        "$ref": "#/definitions/SummarySystemSystemItem",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SummarySystemSystemItem": {
            "properties": {
                "cpu": {
                    "description": "The percentage CPU utilization.",
                    "type": "number"
                },
                "disk_in": {
                    "description": "Traffic to disk (in bytes/sec).",
                    "type": "number"
                },
                "disk_out": {
                    "description": "Traffic from disk (in bytes/sec).",
                    "type": "number"
                },
                "ftp": {
                    "description": "The total throughput (in bytes/sec) for FTP operations.",
                    "type": "number"
                },
                "hdfs": {
                    "description": "The total throughput (in bytes/second) for HDFS operations.",
                    "type": "number"
                },
                "http": {
                    "description": "The total throughput (in bytes/sec) for HTTP operations.",
                    "type": "number"
                },
                "iscsi": {
                    "description": "The total throughput (in bytes/sec) for ISCSI operations.",
                    "type": "number"
                },
                "net_in": {
                    "description": "Incoming network traffic (in bytes/sec) for all operations.",
                    "type": "number"
                },
                "net_out": {
                    "description": "Outgoing network traffic (in bytes/sec) for all operations.",
                    "type": "number"
                },
                "nfs": {
                    "description": "The total throughput (in bytes/sec) for NFS (NFS3 & NFS4) operations.",
                    "type": "number"
                },
                "node": {
                    "description": "Node ID/LNN, 'All' for cluster.",
                    "type": "string"
                },
                "smb": {
                    "description": "The total throughput (in bytes/sec) for SMB (SMB1 & SMB2) operations.",
                    "type": "number"
                },
                "time": {
                    "description": "Unix Epoch time in seconds of the request.",
                    "type": "integer"
                },
                "total": {
                    "description": "The total throughput (in bytes/sec) for all protocols listed.",
                    "type": "number"
                }
            },
            "required": [
                "node",
                "ftp",
                "http",
                "hdfs",
                "iscsi",
                "net_out",
                "smb",
                "nfs",
                "time",
                "disk_out",
                "net_in",
                "disk_in",
                "total",
                "cpu"
            ],
            "type": "object"
        },
        "SwiftAccount": {
            "description": "This is an account for the Swift protocol.",
            "properties": {
                "id": {
                    "description": "Unique id of swift account",
                    "type": "string"
                },
                "name": {
                    "description": "Name of Swift account",
                    "type": "string"
                },
                "swiftgroup": {
                    "description": "Group with filesystem ownership of this account",
                    "type": "string"
                },
                "swiftuser": {
                    "description": "User with filesystem ownership of this account",
                    "type": "string"
                },
                "users": {
                    "description": "Users who are allowed to access Swift account",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "zone": {
                    "description": "Name of access zone for account",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "SwiftAccountExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SwiftAccount"
                },
                {
                    "properties": {
                        "path": {
                            "description": "Path to root of Swift account",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SwiftAccounts": {
            "properties": {
                "accounts": {
                    "items": {
                        "$ref": "#/definitions/SwiftAccountExtended",
                        "description": "This is an account for the Swift protocol."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SyncJob": {
            "properties": {
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "canceled",
                        "running",
                        "paused"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "state"
            ],
            "type": "object"
        },
        "SyncJobCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncJob"
                },
                {
                    "properties": {
                        "action": {
                            "description": "The action to be taken by this job.",
                            "enum": [
                                "resync_prep",
                                "allow_write",
                                "allow_write_revert",
                                "test"
                            ],
                            "type": "string"
                        },
                        "id": {
                            "description": "The ID or Name of the policy",
                            "type": "string"
                        },
                        "log_level": {
                            "description": "Only valid for allow_write, and allow_write_revert; specify the desired logging level, will be stored in the logs for isi_migrate, defaults to 'info'.",
                            "enum": [
                                "fatal",
                                "error",
                                "notice",
                                "info",
                                "copy",
                                "debug",
                                "trace"
                            ],
                            "type": "string"
                        },
                        "source_snapshot": {
                            "description": "An optional snapshot to copy/sync from.",
                            "type": "string"
                        },
                        "workers_per_node": {
                            "description": "Only valid for allow_write, and allow_write_revert; specify the desired workers per node, defaults to 3.",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "id"
                    ],
                    "type": "object"
                }
            ]
        },
        "SyncJobExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncJob"
                },
                {
                    "properties": {
                        "action": {
                            "description": "The action to be taken by this job.",
                            "enum": [
                                "resync_prep",
                                "allow_write",
                                "allow_write_revert",
                                "test",
                                "run"
                            ],
                            "type": "string"
                        },
                        "ads_streams_replicated": {
                            "description": "The number of ads streams replicated by this job.",
                            "type": "integer"
                        },
                        "block_specs_replicated": {
                            "description": "The number of block specs replicated by this job.",
                            "type": "integer"
                        },
                        "bytes_recoverable": {
                            "description": "The number of bytes recoverable by this job.",
                            "type": "integer"
                        },
                        "bytes_transferred": {
                            "description": "The number of bytes that have been transferred by this job.",
                            "type": "integer"
                        },
                        "char_specs_replicated": {
                            "description": "The number of char specs replicated by this job.",
                            "type": "integer"
                        },
                        "corrected_lins": {
                            "description": "The number of LINs corrected by this job.",
                            "type": "integer"
                        },
                        "dead_node": {
                            "description": "This field is true if the node running this job is dead.",
                            "type": "boolean"
                        },
                        "directories_replicated": {
                            "description": "The number of directories replicated.",
                            "type": "integer"
                        },
                        "dirs_changed": {
                            "description": "The number of directories changed by this job.",
                            "type": "integer"
                        },
                        "dirs_deleted": {
                            "description": "The number of directories deleted by this job.",
                            "type": "integer"
                        },
                        "dirs_moved": {
                            "description": "The number of directories moved by this job.",
                            "type": "integer"
                        },
                        "dirs_new": {
                            "description": "The number of directories created by this job.",
                            "type": "integer"
                        },
                        "duration": {
                            "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                            "type": "integer"
                        },
                        "end_time": {
                            "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                            "type": "integer"
                        },
                        "error": {
                            "description": "The primary error message for this job.",
                            "type": "string"
                        },
                        "error_checksum_files_skipped": {
                            "description": "The number of files with checksum errors skipped by this job.",
                            "type": "integer"
                        },
                        "error_io_files_skipped": {
                            "description": "The number of files with io errors skipped by this job.",
                            "type": "integer"
                        },
                        "error_net_files_skipped": {
                            "description": "The number of files with network errors skipped by this job.",
                            "type": "integer"
                        },
                        "errors": {
                            "description": "A list of error messages for this job.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "failed_chunks": {
                            "description": "Tyhe number of data chunks that failed transmission.",
                            "type": "integer"
                        },
                        "fifos_replicated": {
                            "description": "The number of fifos replicated by this job.",
                            "type": "integer"
                        },
                        "file_data_bytes": {
                            "description": "The number of bytes transferred that belong to files.",
                            "type": "integer"
                        },
                        "files_changed": {
                            "description": "The number of files changed by this job.",
                            "type": "integer"
                        },
                        "files_linked": {
                            "description": "The number of files linked by this job.",
                            "type": "integer"
                        },
                        "files_new": {
                            "description": "The number of files created by this job.",
                            "type": "integer"
                        },
                        "files_selected": {
                            "description": "The number of files selected by this job.",
                            "type": "integer"
                        },
                        "files_transferred": {
                            "description": "The number of files transferred by this job.",
                            "type": "integer"
                        },
                        "files_unlinked": {
                            "description": "The number of files unlinked by this job.",
                            "type": "integer"
                        },
                        "files_with_ads_replicated": {
                            "description": "The number of files with ads replicated by this job.",
                            "type": "integer"
                        },
                        "flipped_lins": {
                            "description": "The number of LINs flipped by this job.",
                            "type": "integer"
                        },
                        "hard_links_replicated": {
                            "description": "The number of hard links replicated by this job.",
                            "type": "integer"
                        },
                        "hash_exceptions_fixed": {
                            "description": "The number of hash exceptions fixed by this job.",
                            "type": "integer"
                        },
                        "hash_exceptions_found": {
                            "description": "The number of hash exceptions found by this job.",
                            "type": "integer"
                        },
                        "id": {
                            "description": "A unique identifier for this object.",
                            "type": "string"
                        },
                        "job_id": {
                            "description": "The ID of the job.",
                            "type": "integer"
                        },
                        "lins_total": {
                            "description": "The number of LINs transferred by this job.",
                            "type": "integer"
                        },
                        "network_bytes_to_source": {
                            "description": "The total number of bytes sent to the source by this job.",
                            "type": "integer"
                        },
                        "network_bytes_to_target": {
                            "description": "The total number of bytes sent to the target by this job.",
                            "type": "integer"
                        },
                        "new_files_replicated": {
                            "description": "The number of new files replicated by this job.",
                            "type": "integer"
                        },
                        "num_retransmitted_files": {
                            "description": "The number of files that have been retransmitted by this job.",
                            "type": "integer"
                        },
                        "phases": {
                            "description": "Data for each phase of this job.",
                            "items": {
                                "$ref": "#/definitions/ReportsRidSubreportsSubreportPhase",
                                "description": ""
                            },
                            "type": "array"
                        },
                        "policy": {
                            "$ref": "#/definitions/ReportsRidSubreportsSubreportPolicy",
                            "description": "The policy associated with this job, or null if there is currently no policy associated with this job (this can happen if the job is newly created and not yet fully populated in the underlying database)."
                        },
                        "policy_action": {
                            "description": "This is the action the policy is configured to perform.",
                            "enum": [
                                "copy",
                                "sync"
                            ],
                            "type": "string"
                        },
                        "policy_id": {
                            "description": "The ID of the policy.",
                            "type": "string"
                        },
                        "policy_name": {
                            "description": "The name of the policy.",
                            "type": "string"
                        },
                        "regular_files_replicated": {
                            "description": "The number of regular files replicated by this job.",
                            "type": "integer"
                        },
                        "resynced_lins": {
                            "description": "The number of LINs resynched by this job.",
                            "type": "integer"
                        },
                        "retransmitted_files": {
                            "description": "The files that have been retransmitted by this job.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "retry": {
                            "description": "The number of times the job has been retried.",
                            "type": "integer"
                        },
                        "running_chunks": {
                            "description": "The number of data chunks currently being transmitted.",
                            "type": "integer"
                        },
                        "sockets_replicated": {
                            "description": "The number of sockets replicated by this job.",
                            "type": "integer"
                        },
                        "source_bytes_recovered": {
                            "description": "The number of bytes recovered on the source.",
                            "type": "integer"
                        },
                        "source_directories_created": {
                            "description": "The number of directories created on the source.",
                            "type": "integer"
                        },
                        "source_directories_deleted": {
                            "description": "The number of directories deleted on the source.",
                            "type": "integer"
                        },
                        "source_directories_linked": {
                            "description": "The number of directories linked on the source.",
                            "type": "integer"
                        },
                        "source_directories_unlinked": {
                            "description": "The number of directories unlinked on the source.",
                            "type": "integer"
                        },
                        "source_directories_visited": {
                            "description": "The number of directories visited on the source.",
                            "type": "integer"
                        },
                        "source_files_deleted": {
                            "description": "The number of files deleted on the source.",
                            "type": "integer"
                        },
                        "source_files_linked": {
                            "description": "The number of files linked on the source.",
                            "type": "integer"
                        },
                        "source_files_unlinked": {
                            "description": "The number of files unlinked on the source.",
                            "type": "integer"
                        },
                        "sparse_data_bytes": {
                            "description": "The number of sparse data bytes transferred by this job.",
                            "type": "integer"
                        },
                        "start_time": {
                            "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                            "type": "integer"
                        },
                        "succeeded_chunks": {
                            "description": "The number of data chunks that have been transmitted successfully.",
                            "type": "integer"
                        },
                        "symlinks_replicated": {
                            "description": "The number of symlinks replicated by this job.",
                            "type": "integer"
                        },
                        "sync_type": {
                            "description": "The type of sync being performed by this job.",
                            "enum": [
                                "invalid",
                                "legacy",
                                "initial",
                                "incremental",
                                "upgrade",
                                "fofb",
                                "domainmark"
                            ],
                            "type": "string"
                        },
                        "target_bytes_recovered": {
                            "description": "The number of bytes recovered on the target.",
                            "type": "integer"
                        },
                        "target_directories_created": {
                            "description": "The number of directories created on the target.",
                            "type": "integer"
                        },
                        "target_directories_deleted": {
                            "description": "The number of directories deleted on the target.",
                            "type": "integer"
                        },
                        "target_directories_linked": {
                            "description": "The number of directories linked on the target.",
                            "type": "integer"
                        },
                        "target_directories_unlinked": {
                            "description": "The number of directories unlinked on the target.",
                            "type": "integer"
                        },
                        "target_files_deleted": {
                            "description": "The number of files deleted on the target.",
                            "type": "integer"
                        },
                        "target_files_linked": {
                            "description": "The number of files linked on the target.",
                            "type": "integer"
                        },
                        "target_files_unlinked": {
                            "description": "The number of files unlinked on the target.",
                            "type": "integer"
                        },
                        "target_snapshots": {
                            "description": "The target snapshots created by this job.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "total_chunks": {
                            "description": "The total number of data chunks transmitted by this job.",
                            "type": "integer"
                        },
                        "total_data_bytes": {
                            "description": "The total number of bytes transferred by this job.",
                            "type": "integer"
                        },
                        "total_files": {
                            "description": "The number of files affected by this job.",
                            "type": "integer"
                        },
                        "total_network_bytes": {
                            "description": "The total number of bytes sent over the network by this job.",
                            "type": "integer"
                        },
                        "total_phases": {
                            "description": "The total number of phases for this job.",
                            "type": "integer"
                        },
                        "unchanged_data_bytes": {
                            "description": "The number of bytes unchanged by this job.",
                            "type": "integer"
                        },
                        "up_to_date_files_skipped": {
                            "description": "The number of up-to-date files skipped by this job.",
                            "type": "integer"
                        },
                        "updated_files_replicated": {
                            "description": "The number of updated files replicated by this job.",
                            "type": "integer"
                        },
                        "user_conflict_files_skipped": {
                            "description": "The number of files with user conflicts skipped by this job.",
                            "type": "integer"
                        },
                        "warnings": {
                            "description": "A list of warning messages for this job.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "workers": {
                            "description": "A list of workers for this job.",
                            "items": {
                                "$ref": "#/definitions/SyncJobWorker",
                                "description": ""
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "files_new",
                        "error_io_files_skipped",
                        "policy_name",
                        "target_directories_unlinked",
                        "network_bytes_to_source",
                        "workers",
                        "hash_exceptions_fixed",
                        "failed_chunks",
                        "dirs_moved",
                        "policy",
                        "fifos_replicated",
                        "source_directories_linked",
                        "start_time",
                        "target_directories_linked",
                        "dead_node",
                        "source_bytes_recovered",
                        "retransmitted_files",
                        "lins_total",
                        "new_files_replicated",
                        "dirs_changed",
                        "total_phases",
                        "files_unlinked",
                        "sockets_replicated",
                        "end_time",
                        "source_directories_visited",
                        "bytes_transferred",
                        "regular_files_replicated",
                        "file_data_bytes",
                        "target_directories_deleted",
                        "hash_exceptions_found",
                        "duration",
                        "sparse_data_bytes",
                        "phases",
                        "errors",
                        "resynced_lins",
                        "bytes_recoverable",
                        "state",
                        "block_specs_replicated",
                        "sync_type",
                        "job_id",
                        "corrected_lins",
                        "action",
                        "target_files_unlinked",
                        "total_data_bytes",
                        "symlinks_replicated",
                        "source_files_unlinked",
                        "total_chunks",
                        "files_with_ads_replicated",
                        "target_files_deleted",
                        "dirs_new",
                        "files_selected",
                        "num_retransmitted_files",
                        "target_snapshots",
                        "error_net_files_skipped",
                        "unchanged_data_bytes",
                        "target_bytes_recovered",
                        "user_conflict_files_skipped",
                        "target_files_linked",
                        "files_transferred",
                        "policy_action",
                        "running_chunks",
                        "network_bytes_to_target",
                        "error",
                        "directories_replicated",
                        "total_network_bytes",
                        "source_directories_deleted",
                        "target_directories_created",
                        "id",
                        "flipped_lins",
                        "char_specs_replicated",
                        "updated_files_replicated",
                        "source_directories_unlinked",
                        "ads_streams_replicated",
                        "total_files",
                        "source_files_linked",
                        "warnings",
                        "source_directories_created",
                        "hard_links_replicated",
                        "succeeded_chunks",
                        "files_changed",
                        "retry",
                        "error_checksum_files_skipped",
                        "dirs_deleted",
                        "files_linked",
                        "up_to_date_files_skipped",
                        "source_files_deleted",
                        "policy_id"
                    ],
                    "type": "object"
                }
            ]
        },
        "SyncJobWorker": {
            "properties": {
                "connected": {
                    "description": "Whether there is a connection between the source and target.",
                    "type": "boolean"
                },
                "last_split": {
                    "description": "The last time a network split occurred.",
                    "type": "integer"
                },
                "last_work": {
                    "description": "The last time the worker performed work.",
                    "type": "integer"
                },
                "lin": {
                    "description": "The LIN being worked on.",
                    "type": "integer"
                },
                "lnn": {
                    "description": "The lnn the worker is assigned to run on.",
                    "type": "integer"
                },
                "process_id": {
                    "description": "The process ID of the worker.",
                    "type": "integer"
                },
                "source_host": {
                    "description": "The source host for this worker.",
                    "type": "string"
                },
                "target_host": {
                    "description": "The target host for this worker.",
                    "type": "string"
                },
                "worker_id": {
                    "description": "The ID of the worker.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SyncJobs": {
            "properties": {
                "jobs": {
                    "items": {
                        "$ref": "#/definitions/SyncJobExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncJobsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncJobs"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SyncPolicies": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/SyncPolicyExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncPoliciesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncPolicies"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SyncPolicy": {
            "properties": {
                "accelerated_failback": {
                    "description": "If set to true, SyncIQ will perform failback configuration tasks during the next job run, rather than waiting to perform those tasks during the failback process. Performing these tasks ahead of time will increase the speed of failback operations.",
                    "type": "boolean"
                },
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "aws_access_key": {
                    "description": "The AWS Access Key for the account synced files will be stored with.",
                    "type": "string"
                },
                "aws_block_table": {
                    "description": "The table name in DynamoDB where all file block data is stored.",
                    "type": "string"
                },
                "aws_dynamo_host": {
                    "description": "The hostname of the AWS DynamoDB server that file meta-data will be sent to.",
                    "type": "string"
                },
                "aws_metadata_table": {
                    "description": "The table name in DynamoDB where all file meta-data is stored.",
                    "type": "string"
                },
                "aws_region": {
                    "description": "The AWS region that synced files will be stored in.",
                    "type": "string"
                },
                "aws_s3_host": {
                    "description": "The hostname of the AWS S3 server that synced files will be sent to.",
                    "type": "string"
                },
                "aws_secret_key": {
                    "description": "The AWS Secret Key for the account synced files will be stored with.",
                    "type": "string"
                },
                "aws_target": {
                    "description": "If true, sync files with AWS instead of a secondary Isilon cluster.",
                    "type": "boolean"
                },
                "burst_mode": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable UDP-based data transfer.",
                    "type": "boolean"
                },
                "changelist": {
                    "description": "If true, retain previous source snapshot and incremental repstate, both of which are required for changelist creation.",
                    "type": "boolean"
                },
                "check_integrity": {
                    "description": "If true, the sync target performs cyclic redundancy checks (CRC) on the data as it is received.",
                    "type": "boolean"
                },
                "cloud_deep_copy": {
                    "description": "If set to deny, replicates all CloudPools smartlinks to the target cluster as smartlinks; if the target cluster does not support the smartlinks, the job will fail. If set to force, replicates all smartlinks to the target cluster as regular files. If set to allow, SyncIQ will attempt to replicate smartlinks to the target cluster as smartlinks; if the target cluster does not support the smartlinks, SyncIQ will replicate the smartlinks as regular files.",
                    "enum": [
                        "deny",
                        "allow",
                        "force"
                    ],
                    "type": "string"
                },
                "conflicted": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the most recent run of this policy encountered an error and this policy will not start any more scheduled jobs until this field is manually set back to 'false'.",
                    "enum": [
                        false
                    ],
                    "type": "boolean"
                },
                "description": {
                    "description": "User-assigned description of this sync policy.",
                    "type": "string"
                },
                "disable_file_split": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  If true, the 7.2+ file splitting capability will be disabled.",
                    "type": "boolean"
                },
                "disable_fofb": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable sync failover/failback.",
                    "type": "boolean"
                },
                "disable_stf": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Enable/disable the 6.5+ STF based data transfer and uses only treewalk.",
                    "type": "boolean"
                },
                "enabled": {
                    "description": "If true, jobs will be automatically run based on this policy, according to its schedule.",
                    "type": "boolean"
                },
                "expected_dataloss": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Continue sending files even with the corrupted filesystem.",
                    "type": "boolean"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/ReportsRidSubreportsSubreportPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "force_interface": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Determines whether data is sent only through the subnet and pool specified in the \"source_network\" field. This option can be useful if there are multiple interfaces for the given source subnet.  If you enable this option, the net.inet.ip.choose_ifa_by_ipsrc sysctl should be set.",
                    "type": "boolean"
                },
                "job_delay": {
                    "description": "If --schedule is set to When-Source-Modified, the duration to wait after a modification is made before starting a job (default is 0 seconds).",
                    "minimum": 0,
                    "type": "integer"
                },
                "log_level": {
                    "description": "Severity an event must reach before it is logged.",
                    "enum": [
                        "fatal",
                        "error",
                        "notice",
                        "info",
                        "copy",
                        "debug",
                        "trace"
                    ],
                    "type": "string"
                },
                "log_removed_files": {
                    "description": "If true, the system will log any files or directories that are deleted due to a sync.",
                    "type": "boolean"
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "password": {
                    "description": "The password for the target cluster.  This field is not readable.",
                    "type": "string"
                },
                "priority": {
                    "description": "Determines the priority level of a policy. Policies with higher priority will have precedence to run over lower priority policies. Valid range is [0, 1]. Default is 0.",
                    "type": "integer"
                },
                "report_max_age": {
                    "description": "Length of time (in seconds) a policy report will be stored.",
                    "minimum": 0,
                    "type": "integer"
                },
                "report_max_count": {
                    "description": "Maximum number of policy reports that will be stored on the system.",
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer"
                },
                "restrict_target_network": {
                    "description": "If you specify true, and you specify a SmartConnect zone in the \"target_host\" field, replication policies will connect only to nodes in the specified SmartConnect zone.  If you specify false, replication policies are not restricted to specific nodes on the target cluster.",
                    "type": "boolean"
                },
                "rpo_alert": {
                    "description": "If --schedule is set to a time/date, an alert is created if the specified RPO for this policy is exceeded. The default value is 0, which will not generate RPO alerts.",
                    "minimum": 0,
                    "type": "integer"
                },
                "schedule": {
                    "description": "The schedule on which new jobs will be run for this policy.",
                    "type": "string"
                },
                "skip_lookup": {
                    "description": "Skip DNS lookup of target IPs.",
                    "type": "boolean"
                },
                "skip_when_source_unmodified": {
                    "description": "If true and --schedule is set to a time/date, the policy will not run if no changes have been made to the contents of the source directory since the last job successfully completed.",
                    "type": "boolean"
                },
                "snapshot_sync_existing": {
                    "description": "If true, snapshot-triggered syncs will include snapshots taken before policy creation time (requires --schedule when-snapshot-taken).",
                    "type": "boolean"
                },
                "snapshot_sync_pattern": {
                    "description": "The naming pattern that a snapshot must match to trigger a sync when the schedule is when-snapshot-taken (default is \"*\").",
                    "type": "string"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_network": {
                    "$ref": "#/definitions/SyncPolicySourceNetwork",
                    "description": "Restricts replication policies on the local cluster to running on the specified subnet and pool."
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "source_snapshot_archive": {
                    "description": "If true, archival snapshots of the source data will be taken on the source cluster before a sync.",
                    "type": "boolean"
                },
                "source_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the source cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "source_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the source cluster before a sync.",
                    "type": "string"
                },
                "target_compare_initial_sync": {
                    "description": "If true, the target creates diffs against the original sync.",
                    "type": "boolean"
                },
                "target_detect_modifications": {
                    "description": "If true, target cluster will detect if files have been changed on the target by legacy tree walk syncs.",
                    "type": "boolean"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshot_alias": {
                    "description": "The alias of the snapshot taken on the target cluster after the sync completes. A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "target_snapshot_archive": {
                    "description": "If true, archival snapshots of the target data will be taken on the target cluster after successful sync completions.",
                    "type": "boolean"
                },
                "target_snapshot_expiration": {
                    "description": "The length of time in seconds to keep snapshots on the target cluster.",
                    "minimum": 0,
                    "type": "integer"
                },
                "target_snapshot_pattern": {
                    "description": "The name pattern for snapshots taken on the target cluster after the sync completes.  A value of @DEFAULT will reset this field to the default creation value.",
                    "type": "string"
                },
                "workers_per_node": {
                    "description": "The number of worker threads on a node performing a sync.",
                    "maximum": 20,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SyncPolicyCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncPolicy"
                },
                {
                    "properties": {},
                    "required": [
                        "source_root_path",
                        "target_host",
                        "name",
                        "target_path",
                        "action"
                    ],
                    "type": "object"
                }
            ]
        },
        "SyncPolicyExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncPolicy"
                },
                {
                    "properties": {
                        "has_sync_state": {
                            "description": "This field is false if the policy is in its initial sync state and true otherwise.  Setting this field to false will reset the policy's sync state.",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "The system ID given to this sync policy.",
                            "type": "string"
                        },
                        "last_job_state": {
                            "description": "This is the state of the most recent job for this policy.",
                            "type": "string"
                        },
                        "last_started": {
                            "description": "The most recent time a job was started for this policy.  Value is null if the policy has never been run.",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "last_success": {
                            "description": "Timestamp of last known successfully completed synchronization.  Value is null if the policy has never completed successfully.",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "next_run": {
                            "description": "This is the next time a job is scheduled to run for this policy in Unix epoch seconds.  This field is null if the job is not scheduled.",
                            "type": "integer"
                        },
                        "password_set": {
                            "description": "Indicates if a password is set for accessing the target cluster. Password value is not shown with GET.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "source_root_path",
                        "last_success",
                        "id",
                        "target_host",
                        "schedule",
                        "name",
                        "enabled",
                        "target_path"
                    ],
                    "type": "object"
                }
            ]
        },
        "SyncPolicySourceNetwork": {
            "properties": {
                "pool": {
                    "description": "The pool to restrict replication policies to.",
                    "type": "string"
                },
                "subnet": {
                    "description": "The subnet to restrict replication policies to.",
                    "type": "string"
                }
            },
            "required": [
                "subnet",
                "pool"
            ],
            "type": "object"
        },
        "SyncReport": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes transferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transferred by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs transferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/ReportsRidSubreportsSubreportPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy": {
                    "$ref": "#/definitions/SyncReportPolicy",
                    "description": ""
                },
                "policy_action": {
                    "description": "This is the action the policy is configured to perform.",
                    "enum": [
                        "copy",
                        "sync"
                    ],
                    "type": "string"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "skipped",
                        "pending",
                        "unknown"
                    ],
                    "type": "string"
                },
                "subreport_count": {
                    "description": "The number of subreports that are available for this job report.",
                    "type": "integer"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "policy",
                "fifos_replicated",
                "source_directories_linked",
                "start_time",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "end_time",
                "source_directories_visited",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "duration",
                "sparse_data_bytes",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "job_id",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "error_net_files_skipped",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "policy_action",
                "running_chunks",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "subreport_count",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "SyncReportPolicy": {
            "properties": {
                "action": {
                    "description": "If 'copy', source files will be copied to the target cluster.  If 'sync', the target directory will be made an image of the source directory:  Files and directories that have been deleted on the source, have been moved within the target directory, or no longer match the selection criteria will be deleted from the target directory.",
                    "type": "string"
                },
                "file_matching_pattern": {
                    "$ref": "#/definitions/ReportsRidSubreportsSubreportPolicyFileMatchingPattern",
                    "description": "A file matching pattern, organized as an OR'ed set of AND'ed file criteria, for example ((a AND b) OR (x AND y)) used to define a set of files with specific properties.  Policies of type 'sync' cannot use 'path' or time criteria in their matching patterns, but policies of type 'copy' can use all listed criteria."
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "source_exclude_directories": {
                    "description": "Directories that will be excluded from the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_include_directories": {
                    "description": "Directories that will be included in the sync.  Modifying this field will result in a full synchronization of all data.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "source_root_path": {
                    "description": "The root directory on the source cluster the files will be synced from.  Modifying this field will result in a full synchronization of all data.",
                    "type": "string"
                },
                "target_host": {
                    "description": "Hostname or IP address of sync target cluster.  Modifying the target cluster host can result in the policy being unrunnable if the new target does not match the current target association.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                }
            },
            "required": true,
            "type": "object"
        },
        "SyncReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/SyncReport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncReportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncReports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SyncReportsRotate": {
            "description": "Force rotation of reports.",
            "properties": {
                "message": {
                    "description": "A message about the status of the task.",
                    "type": "string"
                },
                "running": {
                    "description": "Whether this task is running or not.",
                    "type": "boolean"
                }
            },
            "required": [
                "message",
                "running"
            ],
            "type": "object"
        },
        "SyncRule": {
            "description": "A rule limiting the bandwidth, file operations, cpu usage, or worker count for all sync jobs on this cluster.",
            "properties": {
                "description": {
                    "description": "User-entered description of this performance rule.",
                    "type": "string"
                },
                "enabled": {
                    "description": "Whether this performance rule is currently in effect during its specified intervals.",
                    "type": "boolean"
                },
                "limit": {
                    "description": "Amount the specified system resource type is limited by this rule.  Units are kb/s for bandwidth, files/s for file-count, processing percentage used for cpu, or percentage of maximum available workers.",
                    "type": "integer"
                },
                "schedule": {
                    "$ref": "#/definitions/SyncRuleSchedule",
                    "description": "A schedule defining when during a week this performance rule is in effect.  If unspecified or null, the schedule will always be in effect."
                }
            },
            "type": "object"
        },
        "SyncRuleCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncRule"
                },
                {
                    "description": "A rule limiting the bandwidth, file operations, cpu usage, or worker count for all sync jobs on this cluster.",
                    "properties": {
                        "type": {
                            "description": "The type of system resource this rule limits.",
                            "enum": [
                                "bandwidth",
                                "file_count",
                                "cpu",
                                "worker"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "limit",
                        "type"
                    ],
                    "type": "object"
                }
            ]
        },
        "SyncRuleExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncRule"
                },
                {
                    "properties": {
                        "id": {
                            "description": "The system ID given to this performance rule.",
                            "type": "string"
                        },
                        "type": {
                            "description": "The type of system resource this rule limits.",
                            "enum": [
                                "bandwidth",
                                "file_count",
                                "cpu",
                                "worker"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SyncRuleSchedule": {
            "properties": {
                "begin": {
                    "description": "Start time (inclusive) for this schedule, during its specified days.  Format is \"hh:mm\" (24h format hour, and minute).  A null value indicates the beginning of the day (\"00:00\").",
                    "required": false,
                    "type": "string"
                },
                "end": {
                    "description": "End time (inclusive) for this schedule, during its specified days.  Format is \"hh:mm\" (three-letter weekday name abbreviation, 24h format hour, and minute).  A null value indicates the end of the day (\"23:59\").",
                    "required": false,
                    "type": "string"
                },
                "friday": {
                    "description": "If true, this rule is in effect on Friday.  If false, or unspecified, it is not.",
                    "required": false,
                    "type": "boolean"
                },
                "monday": {
                    "description": "If true, this rule is in effect on Monday.  If false, or unspecified, it is not.",
                    "required": false,
                    "type": "boolean"
                },
                "saturday": {
                    "description": "If true, this rule is in effect on Saturday.  If false, or unspecified, it is not.",
                    "required": false,
                    "type": "boolean"
                },
                "sunday": {
                    "description": "If true, this rule is in effect on Sunday.  If false, or unspecified, it is not.",
                    "required": false,
                    "type": "boolean"
                },
                "thursday": {
                    "description": "If true, this rule is in effect on Thursday.  If false, or unspecified, it is not.",
                    "required": false,
                    "type": "boolean"
                },
                "tuesday": {
                    "description": "If true, this rule is in effect on Tuesday.  If false, or unspecified, it is not.",
                    "required": false,
                    "type": "boolean"
                },
                "wednesday": {
                    "description": "If true, this rule is in effect on Wednesday.  If false, or unspecified, it is not.",
                    "required": false,
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "SyncRules": {
            "properties": {
                "rules": {
                    "items": {
                        "$ref": "#/definitions/SyncRuleExtended",
                        "description": "A rule limiting the bandwidth, file operations, cpu usage, or worker count for all sync jobs on this cluster."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SyncRulesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncRules"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "rules",
                        "total",
                        "resume"
                    ],
                    "type": "object"
                }
            ]
        },
        "SyncSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/SyncSettingsSettings",
                    "description": "Global SyncIQ settings."
                }
            },
            "type": "object"
        },
        "SyncSettingsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/SyncSettings"
                },
                {
                    "description": "Global SyncIQ settings.",
                    "properties": {
                        "burst_memory_constraint": {
                            "description": "The per-worker burst socket memory constraint, in bytes.",
                            "type": "integer"
                        },
                        "burst_socket_buffer_size": {
                            "description": "The per-worker burst socket buffer coalesced data, in bytes.",
                            "type": "integer"
                        },
                        "force_interface": {
                            "description": "NOTE: This field should not be changed without the help of Isilon support.  Default for the \"force_interface\" property that will be applied to each new sync policy unless otherwise specified at the time of policy creation.  Determines whether data is sent only through the subnet and pool specified in the \"source_network\" field. This option can be useful if there are multiple interfaces for the given source subnet.",
                            "type": "boolean"
                        },
                        "report_email": {
                            "description": "Email sync reports to these addresses.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "report_max_age": {
                            "description": "The default length of time (in seconds) a policy report will be stored.",
                            "type": "integer"
                        },
                        "report_max_count": {
                            "description": "The default maximum number of reports to retain for a policy.",
                            "maximum": 2000,
                            "minimum": 1,
                            "type": "integer"
                        },
                        "restrict_target_network": {
                            "description": "Default for the \"restrict_target_network\" property that will be applied to each new sync policy unless otherwise specified at the time of policy creation.  If you specify true, and you specify a SmartConnect zone in the \"target_host\" field, replication policies will connect only to nodes in the specified SmartConnect zone.  If you specify false, replication policies are not restricted to specific nodes on the target cluster.",
                            "type": "boolean"
                        },
                        "rpo_alerts": {
                            "description": "If disabled, no RPO alerts will be generated.",
                            "type": "boolean"
                        },
                        "service": {
                            "description": "Specifies if the SyncIQ service currently on, paused, or off.  If paused, all sync jobs will be paused.  If turned off, all jobs will be canceled.",
                            "enum": [
                                "on",
                                "off",
                                "paused"
                            ],
                            "type": "string"
                        },
                        "source_network": {
                            "$ref": "#/definitions/SyncPolicySourceNetwork",
                            "description": "Restricts replication policies on the local cluster to running on the specified subnet and pool."
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "SyncSettingsSettings": {
            "properties": {
                "burst_memory_constraint": {
                    "description": "The per-worker burst socket memory constraint, in bytes.",
                    "type": "integer"
                },
                "burst_socket_buffer_size": {
                    "description": "The per-worker burst socket buffer coalesced data, in bytes.",
                    "type": "integer"
                },
                "force_interface": {
                    "description": "NOTE: This field should not be changed without the help of Isilon support.  Default for the \"force_interface\" property that will be applied to each new sync policy unless otherwise specified at the time of policy creation.  Determines whether data is sent only through the subnet and pool specified in the \"source_network\" field. This option can be useful if there are multiple interfaces for the given source subnet.",
                    "type": "boolean"
                },
                "max_concurrent_jobs": {
                    "description": "The max concurrent jobs that SyncIQ can support. This number is based on the size of the current cluster and the current SyncIQ worker throttle rule.",
                    "type": "integer"
                },
                "report_email": {
                    "description": "Email sync reports to these addresses.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "report_max_age": {
                    "description": "The default length of time (in seconds) a policy report will be stored.",
                    "type": "integer"
                },
                "report_max_count": {
                    "description": "The default maximum number of reports to retain for a policy.",
                    "maximum": 2000,
                    "minimum": 1,
                    "type": "integer"
                },
                "restrict_target_network": {
                    "description": "Default for the \"restrict_target_network\" property that will be applied to each new sync policy unless otherwise specified at the time of policy creation.  If you specify true, and you specify a SmartConnect zone in the \"target_host\" field, replication policies will connect only to nodes in the specified SmartConnect zone.  If you specify false, replication policies are not restricted to specific nodes on the target cluster.",
                    "type": "boolean"
                },
                "rpo_alerts": {
                    "description": "If disabled, no RPO alerts will be generated.",
                    "type": "boolean"
                },
                "service": {
                    "description": "Specifies if the SyncIQ service currently on, paused, or off.  If paused, all sync jobs will be paused.  If turned off, all jobs will be canceled.",
                    "enum": [
                        "on",
                        "off",
                        "paused"
                    ],
                    "type": "string"
                },
                "source_network": {
                    "$ref": "#/definitions/SyncPolicySourceNetwork",
                    "description": "Restricts replication policies on the local cluster to running on the specified subnet and pool."
                }
            },
            "type": "object"
        },
        "TargetPolicies": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "#/definitions/TargetPolicy",
                        "description": ""
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TargetPoliciesExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/TargetPolicies"
                },
                {
                    "properties": {
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TargetPolicy": {
            "properties": {
                "failover_failback_state": {
                    "description": "The condition of this policy with respect to sync failover/failback.",
                    "enum": [
                        "writes_disabled",
                        "enabling_writes",
                        "writes_enabled",
                        "disabling_writes",
                        "creating_resync_policy",
                        "resync_policy_created"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "The system ID given to this sync policy.",
                    "type": "string"
                },
                "last_job_state": {
                    "description": "The state of the last job run for this policy.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "skipped",
                        "pending",
                        "unknown"
                    ],
                    "type": "string"
                },
                "last_source_coordinator_ip": {
                    "description": "The IP address from which a SyncIQ coordinator daemon most recently connected to this cluster to update it about the progress of a job for this policy.",
                    "type": "string"
                },
                "last_update_from_source": {
                    "description": "The last time this cluster was updated with sync information from the source cluster for this policy, in unix epoch seconds.  Null if no such update has occurred yet.",
                    "type": "integer"
                },
                "legacy_policy": {
                    "description": "Was this policy defined by a OneFS version earlier than 6.0? (Pre-6.0 policies did not have the target policy concept and canceling from the target side will not be available.)",
                    "type": "boolean"
                },
                "name": {
                    "description": "User-assigned name of this sync policy.",
                    "type": "string"
                },
                "source_cluster_guid": {
                    "description": "Unique identifier for the source cluster.",
                    "type": "string"
                },
                "source_host": {
                    "description": "Hostname or IP address of sync source cluster.",
                    "type": "string"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "source_cluster_guid",
                "last_job_state",
                "id",
                "target_path",
                "legacy_policy",
                "source_host",
                "last_update_from_source",
                "last_source_coordinator_ip",
                "failover_failback_state"
            ],
            "type": "object"
        },
        "TargetReport": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "enum": [
                        "resync_prep",
                        "allow_write",
                        "allow_write_revert",
                        "test",
                        "run"
                    ],
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes transferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transferred by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs transferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/ReportsRidSubreportsSubreportPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "source_host": {
                    "description": "Hostname or IP address of sync source cluster.",
                    "type": "string"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "skipped",
                        "pending",
                        "unknown"
                    ],
                    "type": "string"
                },
                "subreport_count": {
                    "description": "The number of subreports that are available for this job report.",
                    "type": "integer"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "error_net_files_skipped",
                "fifos_replicated",
                "source_directories_linked",
                "start_time",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "end_time",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "duration",
                "sparse_data_bytes",
                "running_chunks",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "job_id",
                "source_host",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "source_directories_visited",
                "target_path",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "subreport_count",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "TargetReports": {
            "properties": {
                "reports": {
                    "items": {
                        "$ref": "#/definitions/TargetReport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TargetReportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/TargetReports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TargetReportsRidSubreports": {
            "properties": {
                "subreports": {
                    "items": {
                        "$ref": "#/definitions/TargetReportsRidSubreportsSubreport",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TargetReportsRidSubreportsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/TargetReportsRidSubreports"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TargetReportsRidSubreportsSubreport": {
            "properties": {
                "action": {
                    "description": "The action to be taken by this job.",
                    "enum": [
                        "resync_prep",
                        "allow_write",
                        "allow_write_revert",
                        "test",
                        "run"
                    ],
                    "type": "string"
                },
                "ads_streams_replicated": {
                    "description": "The number of ads streams replicated by this job.",
                    "type": "integer"
                },
                "block_specs_replicated": {
                    "description": "The number of block specs replicated by this job.",
                    "type": "integer"
                },
                "bytes_recoverable": {
                    "description": "The number of bytes recoverable by this job.",
                    "type": "integer"
                },
                "bytes_transferred": {
                    "description": "The number of bytes that have been transferred by this job.",
                    "type": "integer"
                },
                "char_specs_replicated": {
                    "description": "The number of char specs replicated by this job.",
                    "type": "integer"
                },
                "corrected_lins": {
                    "description": "The number of LINs corrected by this job.",
                    "type": "integer"
                },
                "dead_node": {
                    "description": "This field is true if the node running this job is dead.",
                    "type": "boolean"
                },
                "directories_replicated": {
                    "description": "The number of directories replicated.",
                    "type": "integer"
                },
                "dirs_changed": {
                    "description": "The number of directories changed by this job.",
                    "type": "integer"
                },
                "dirs_deleted": {
                    "description": "The number of directories deleted by this job.",
                    "type": "integer"
                },
                "dirs_moved": {
                    "description": "The number of directories moved by this job.",
                    "type": "integer"
                },
                "dirs_new": {
                    "description": "The number of directories created by this job.",
                    "type": "integer"
                },
                "duration": {
                    "description": "The amount of time in seconds between when the job was started and when it ended.  If the job has not yet ended, this is the amount of time since the job started.  This field is null if the job has not yet started.",
                    "type": "integer"
                },
                "end_time": {
                    "description": "The time the job ended in unix epoch seconds. The field is null if the job hasn't ended.",
                    "type": "integer"
                },
                "error": {
                    "description": "The primary error message for this job.",
                    "type": "string"
                },
                "error_checksum_files_skipped": {
                    "description": "The number of files with checksum errors skipped by this job.",
                    "type": "integer"
                },
                "error_io_files_skipped": {
                    "description": "The number of files with io errors skipped by this job.",
                    "type": "integer"
                },
                "error_net_files_skipped": {
                    "description": "The number of files with network errors skipped by this job.",
                    "type": "integer"
                },
                "errors": {
                    "description": "A list of error messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "failed_chunks": {
                    "description": "Tyhe number of data chunks that failed transmission.",
                    "type": "integer"
                },
                "fifos_replicated": {
                    "description": "The number of fifos replicated by this job.",
                    "type": "integer"
                },
                "file_data_bytes": {
                    "description": "The number of bytes transferred that belong to files.",
                    "type": "integer"
                },
                "files_changed": {
                    "description": "The number of files changed by this job.",
                    "type": "integer"
                },
                "files_linked": {
                    "description": "The number of files linked by this job.",
                    "type": "integer"
                },
                "files_new": {
                    "description": "The number of files created by this job.",
                    "type": "integer"
                },
                "files_selected": {
                    "description": "The number of files selected by this job.",
                    "type": "integer"
                },
                "files_transferred": {
                    "description": "The number of files transferred by this job.",
                    "type": "integer"
                },
                "files_unlinked": {
                    "description": "The number of files unlinked by this job.",
                    "type": "integer"
                },
                "files_with_ads_replicated": {
                    "description": "The number of files with ads replicated by this job.",
                    "type": "integer"
                },
                "flipped_lins": {
                    "description": "The number of LINs flipped by this job.",
                    "type": "integer"
                },
                "hard_links_replicated": {
                    "description": "The number of hard links replicated by this job.",
                    "type": "integer"
                },
                "hash_exceptions_fixed": {
                    "description": "The number of hash exceptions fixed by this job.",
                    "type": "integer"
                },
                "hash_exceptions_found": {
                    "description": "The number of hash exceptions found by this job.",
                    "type": "integer"
                },
                "id": {
                    "description": "A unique identifier for this object.",
                    "type": "string"
                },
                "job_id": {
                    "description": "The ID of the job.",
                    "type": "integer"
                },
                "lins_total": {
                    "description": "The number of LINs transferred by this job.",
                    "type": "integer"
                },
                "network_bytes_to_source": {
                    "description": "The total number of bytes sent to the source by this job.",
                    "type": "integer"
                },
                "network_bytes_to_target": {
                    "description": "The total number of bytes sent to the target by this job.",
                    "type": "integer"
                },
                "new_files_replicated": {
                    "description": "The number of new files replicated by this job.",
                    "type": "integer"
                },
                "num_retransmitted_files": {
                    "description": "The number of files that have been retransmitted by this job.",
                    "type": "integer"
                },
                "phases": {
                    "description": "Data for each phase of this job.",
                    "items": {
                        "$ref": "#/definitions/ReportsRidSubreportsSubreportPhase",
                        "description": ""
                    },
                    "type": "array"
                },
                "policy_id": {
                    "description": "The ID of the policy.",
                    "type": "string"
                },
                "policy_name": {
                    "description": "The name of the policy.",
                    "type": "string"
                },
                "regular_files_replicated": {
                    "description": "The number of regular files replicated by this job.",
                    "type": "integer"
                },
                "resynced_lins": {
                    "description": "The number of LINs resynched by this job.",
                    "type": "integer"
                },
                "retransmitted_files": {
                    "description": "The files that have been retransmitted by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "retry": {
                    "description": "The number of times the job has been retried.",
                    "type": "integer"
                },
                "running_chunks": {
                    "description": "The number of data chunks currently being transmitted.",
                    "type": "integer"
                },
                "sockets_replicated": {
                    "description": "The number of sockets replicated by this job.",
                    "type": "integer"
                },
                "source_bytes_recovered": {
                    "description": "The number of bytes recovered on the source.",
                    "type": "integer"
                },
                "source_directories_created": {
                    "description": "The number of directories created on the source.",
                    "type": "integer"
                },
                "source_directories_deleted": {
                    "description": "The number of directories deleted on the source.",
                    "type": "integer"
                },
                "source_directories_linked": {
                    "description": "The number of directories linked on the source.",
                    "type": "integer"
                },
                "source_directories_unlinked": {
                    "description": "The number of directories unlinked on the source.",
                    "type": "integer"
                },
                "source_directories_visited": {
                    "description": "The number of directories visited on the source.",
                    "type": "integer"
                },
                "source_files_deleted": {
                    "description": "The number of files deleted on the source.",
                    "type": "integer"
                },
                "source_files_linked": {
                    "description": "The number of files linked on the source.",
                    "type": "integer"
                },
                "source_files_unlinked": {
                    "description": "The number of files unlinked on the source.",
                    "type": "integer"
                },
                "source_host": {
                    "description": "Hostname or IP address of sync source cluster.",
                    "type": "string"
                },
                "sparse_data_bytes": {
                    "description": "The number of sparse data bytes transferred by this job.",
                    "type": "integer"
                },
                "start_time": {
                    "description": "The time the job started in unix epoch seconds. The field is null if the job hasn't started.",
                    "type": "integer"
                },
                "state": {
                    "description": "The state of the job.",
                    "enum": [
                        "scheduled",
                        "running",
                        "paused",
                        "finished",
                        "failed",
                        "canceled",
                        "needs_attention",
                        "skipped",
                        "pending",
                        "unknown"
                    ],
                    "type": "string"
                },
                "succeeded_chunks": {
                    "description": "The number of data chunks that have been transmitted successfully.",
                    "type": "integer"
                },
                "symlinks_replicated": {
                    "description": "The number of symlinks replicated by this job.",
                    "type": "integer"
                },
                "sync_type": {
                    "description": "The type of sync being performed by this job.",
                    "enum": [
                        "invalid",
                        "legacy",
                        "initial",
                        "incremental",
                        "upgrade",
                        "fofb",
                        "domainmark"
                    ],
                    "type": "string"
                },
                "target_bytes_recovered": {
                    "description": "The number of bytes recovered on the target.",
                    "type": "integer"
                },
                "target_directories_created": {
                    "description": "The number of directories created on the target.",
                    "type": "integer"
                },
                "target_directories_deleted": {
                    "description": "The number of directories deleted on the target.",
                    "type": "integer"
                },
                "target_directories_linked": {
                    "description": "The number of directories linked on the target.",
                    "type": "integer"
                },
                "target_directories_unlinked": {
                    "description": "The number of directories unlinked on the target.",
                    "type": "integer"
                },
                "target_files_deleted": {
                    "description": "The number of files deleted on the target.",
                    "type": "integer"
                },
                "target_files_linked": {
                    "description": "The number of files linked on the target.",
                    "type": "integer"
                },
                "target_files_unlinked": {
                    "description": "The number of files unlinked on the target.",
                    "type": "integer"
                },
                "target_path": {
                    "description": "Absolute filesystem path on the target cluster for the sync destination.",
                    "type": "string"
                },
                "target_snapshots": {
                    "description": "The target snapshots created by this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "total_chunks": {
                    "description": "The total number of data chunks transmitted by this job.",
                    "type": "integer"
                },
                "total_data_bytes": {
                    "description": "The total number of bytes transferred by this job.",
                    "type": "integer"
                },
                "total_files": {
                    "description": "The number of files affected by this job.",
                    "type": "integer"
                },
                "total_network_bytes": {
                    "description": "The total number of bytes sent over the network by this job.",
                    "type": "integer"
                },
                "total_phases": {
                    "description": "The total number of phases for this job.",
                    "type": "integer"
                },
                "unchanged_data_bytes": {
                    "description": "The number of bytes unchanged by this job.",
                    "type": "integer"
                },
                "up_to_date_files_skipped": {
                    "description": "The number of up-to-date files skipped by this job.",
                    "type": "integer"
                },
                "updated_files_replicated": {
                    "description": "The number of updated files replicated by this job.",
                    "type": "integer"
                },
                "user_conflict_files_skipped": {
                    "description": "The number of files with user conflicts skipped by this job.",
                    "type": "integer"
                },
                "warnings": {
                    "description": "A list of warning messages for this job.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "files_new",
                "error_io_files_skipped",
                "policy_name",
                "target_directories_unlinked",
                "network_bytes_to_source",
                "hash_exceptions_fixed",
                "failed_chunks",
                "dirs_moved",
                "error_net_files_skipped",
                "fifos_replicated",
                "source_directories_linked",
                "start_time",
                "target_directories_linked",
                "dead_node",
                "source_bytes_recovered",
                "retransmitted_files",
                "lins_total",
                "new_files_replicated",
                "dirs_changed",
                "total_phases",
                "files_unlinked",
                "sockets_replicated",
                "end_time",
                "bytes_transferred",
                "regular_files_replicated",
                "file_data_bytes",
                "target_directories_deleted",
                "hash_exceptions_found",
                "duration",
                "sparse_data_bytes",
                "running_chunks",
                "phases",
                "errors",
                "resynced_lins",
                "bytes_recoverable",
                "state",
                "block_specs_replicated",
                "sync_type",
                "job_id",
                "source_host",
                "corrected_lins",
                "action",
                "target_files_unlinked",
                "total_data_bytes",
                "symlinks_replicated",
                "source_files_unlinked",
                "total_chunks",
                "files_with_ads_replicated",
                "target_files_deleted",
                "dirs_new",
                "files_selected",
                "num_retransmitted_files",
                "target_snapshots",
                "unchanged_data_bytes",
                "target_bytes_recovered",
                "user_conflict_files_skipped",
                "target_files_linked",
                "files_transferred",
                "source_directories_visited",
                "target_path",
                "network_bytes_to_target",
                "error",
                "directories_replicated",
                "total_network_bytes",
                "source_directories_deleted",
                "target_directories_created",
                "id",
                "flipped_lins",
                "char_specs_replicated",
                "updated_files_replicated",
                "source_directories_unlinked",
                "ads_streams_replicated",
                "total_files",
                "source_files_linked",
                "warnings",
                "source_directories_created",
                "hard_links_replicated",
                "succeeded_chunks",
                "files_changed",
                "retry",
                "error_checksum_files_skipped",
                "dirs_deleted",
                "files_linked",
                "up_to_date_files_skipped",
                "source_files_deleted",
                "policy_id"
            ],
            "type": "object"
        },
        "TimezoneRegion": {
            "properties": {
                "comments": {
                    "description": "Clarifying comments on the region or timezone.",
                    "type": "string"
                },
                "id": {
                    "description": "A unique identifier for the timezone region.",
                    "type": "string"
                },
                "region": {
                    "description": "The name of the region.",
                    "type": "string"
                },
                "timezone": {
                    "$ref": "#/definitions/TimezoneRegionTimezone",
                    "description": "A timezone."
                }
            },
            "type": "object"
        },
        "TimezoneRegionTimezone": {
            "properties": {
                "abbreviation": {
                    "description": "The abbreviation for this timezone.",
                    "type": "string"
                },
                "path": {
                    "description": "The timezone path.  This is the unique identifier for the timezone.",
                    "type": "string"
                }
            },
            "required": [
                "path"
            ],
            "type": "object"
        },
        "TimezoneRegions": {
            "properties": {
                "regions": {
                    "items": {
                        "$ref": "#/definitions/TimezoneRegion",
                        "description": "A geographical region that can contain timezones."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                },
                "total": {
                    "description": "Total number of items available.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TimezoneSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/TimezoneRegionTimezone",
                    "description": "A timezone."
                }
            },
            "type": "object"
        },
        "UpgradeCluster": {
            "description": "Cluster wide upgrade status info.",
            "properties": {
                "cluster_overview": {
                    "$ref": "#/definitions/UpgradeClusterClusterOverview",
                    "description": "The cluster overview of an upgrade process."
                },
                "cluster_state": {
                    "description": "The different states of an upgrade, rollback, or assessment. One of the following values: 'committed', 'upgraded', 'partially upgraded', 'upgrading', 'rolling back', 'assessing', 'error'",
                    "type": "string"
                },
                "finish_time": {
                    "description": "The time when a rollback, assessment or upgrade has finished completely. Use ISO 8601 standard. Null if the cluster_state is not 'upgraded'.",
                    "type": "string"
                },
                "install_image_path": {
                    "description": "The location (path) of the upgrade image which must be within /ifs.\nNull if the cluster_state is 'committed' or 'upgraded.'",
                    "type": "string"
                },
                "onefs_version_current": {
                    "$ref": "#/definitions/ClusterNodesOnefsVersion",
                    "description": "The current OneFS version before upgrade."
                },
                "onefs_version_upgrade": {
                    "$ref": "#/definitions/ClusterNodesOnefsVersion",
                    "description": "The OneFS version the user is attempting to upgrade to. Null if the cluster_state is 'committed' or 'assessing.'"
                },
                "patch_action": {
                    "description": "The most recent patch action performed.",
                    "type": "string"
                },
                "patch_name": {
                    "description": "The patch with the most recent patch action.",
                    "type": "string"
                },
                "start_time": {
                    "description": "The time when an upgrade, rollback, or assessment was started. Use ISO 8601 standard. Null if the cluster_state is 'committed' or 'partially upgraded.'",
                    "type": "string"
                },
                "upgrade_settings": {
                    "$ref": "#/definitions/UpgradeClusterUpgradeSettings",
                    "description": "The settings neccessary when starting an upgrade. Null if the cluster_state is not 'upgrading' or 'partially upgraded.' or 'error'."
                }
            },
            "type": "object"
        },
        "UpgradeClusterClusterOverview": {
            "properties": {
                "nodes_current": {
                    "description": "Number of nodes running the current OneFS version.",
                    "type": "integer"
                },
                "nodes_total": {
                    "description": "Total number of nodes on the cluster.",
                    "type": "integer"
                },
                "nodes_transitioning": {
                    "description": "Number of nodes transitioning between OneFS versions. Null if the cluster_state is 'committed' or 'assessing.'",
                    "type": "integer"
                },
                "nodes_upgraded": {
                    "description": "Number of nodes running the upgraded OneFS version. Null if the cluster_state is 'committed' or 'assessing.'",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UpgradeClusterUpgradeSettings": {
            "properties": {
                "nodes_to_rolling_upgrade": {
                    "description": "The nodes (to be) scheduled for upgrade ordered by queue position number. Null if the cluster_state is 'partially upgraded' or upgrade_type is 'simultaneous'. One of the following values: [<lnn-1>, <lnn-2>, ... ], 'All', null",
                    "items": {
                        "description": "The lnn of the node.",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "upgrade_type": {
                    "description": "The type of upgrade to perform. One of the following values: 'rolling', 'simultaneous'",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UsersUserChangePassword": {
            "description": "Change Password Request",
            "properties": {
                "new_password": {
                    "description": "Specifies user's new password",
                    "type": "string"
                },
                "old_password": {
                    "description": "User's expired password",
                    "type": "string"
                }
            },
            "required": [
                "new_password",
                "old_password"
            ],
            "type": "object"
        },
        "UsersUserMemberOf": {
            "properties": {
                "member_of": {
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "resume": {
                    "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WormDomain": {
            "properties": {
                "autocommit_offset": {
                    "description": "The autocommit time period in seconds for the domain.  After a file exists in this domain without being modified for the specified time period, the file is automatically committed the next time the file is accessed.  If null, there is no autocommit time so files must be manually committed.",
                    "minimum": 0,
                    "type": "integer"
                },
                "default_retention": {
                    "description": "The default amount of time, in seconds, that a file in this domain will be protected for.  This default is applied to a file if it is committed to the domain before being assigned its own expiration date.  Value can also be null (expire right away), 'forever', 'use_min' (use the 'min_retention' value), or 'use_max' (use the 'max_retention' value).",
                    "minimum": 0,
                    "type": "integer"
                },
                "max_retention": {
                    "description": "The maximum amount of time, in seconds, that a file in this domain will be protected for.  This will override the retention period of any file committed with a longer retention period.  Value can also be null (allow an infinite length retention period).",
                    "minimum": 0,
                    "type": "integer"
                },
                "min_retention": {
                    "description": "The minimum amount of time, in seconds, that a file in this domain will be protected for.  This will override the retention period of any file committed with a shorter retention period.  Value can also be null (expire right away), or 'forever'.",
                    "minimum": 0,
                    "type": "integer"
                },
                "override_date": {
                    "description": "Override retention date for the domain.  If this date is later than any committed file's own retention date, that file will remain protected beyond its own retention date until this date.",
                    "minimum": 0,
                    "type": "integer"
                },
                "privileged_delete": {
                    "description": "If 'on', files in this domain can be deleted using the privileged delete feature.  Otherwise, they can't be deleted even with privileged delete.  If 'disabled', privileged file deletes are permanently disabled and cannot be turned back on again.",
                    "enum": [
                        "on",
                        "off",
                        "disabled"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "Whether this is an enterprise domain or this is a compliance domain. Compliance domains may not be created on enterprise clusters. Enterprise and compliance domains may be created on compliance clusters.",
                    "enum": [
                        "enterprise",
                        "compliance"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WormDomainCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/WormDomain"
                },
                {
                    "properties": {
                        "path": {
                            "description": "Root path of this domain.  Files in this directory and all sub-directories will be protected.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "path"
                    ],
                    "type": "object"
                }
            ]
        },
        "WormDomainExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/WormDomain"
                },
                {
                    "properties": {
                        "id": {
                            "description": "System-assigned ID of this protection domain.",
                            "type": "integer"
                        },
                        "incomplete": {
                            "description": "If true, OneFS is still in the process of creating this domain and it is not yet preventing files from being modified or deleted.  If false, the domain is fully created and operational.",
                            "type": "boolean"
                        },
                        "lin": {
                            "description": "Logical inode number (LIN) for the root of this domain.",
                            "type": "integer"
                        },
                        "max_modifies": {
                            "description": "Maximum number of times a WORM domain can be modified over its lifetime. This value is deprecated-- a WORM domain can be modified an unlimited number of times.",
                            "type": "integer"
                        },
                        "path": {
                            "description": "Root path of this domain.  Files in this directory and all sub-directories will be protected.",
                            "type": "string"
                        },
                        "total_modifies": {
                            "description": "This field is deprecated and will always be set to 0. Previously this field represented the number of times this domain has been modified (had its domain attributes changed) so far in order to indicate how close to the maximum number of allowed modifications a domain was. Currently domains may be modified an unlimited number of times.",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "override_date",
                        "lin",
                        "max_modifies",
                        "total_modifies",
                        "autocommit_offset",
                        "privileged_delete",
                        "max_retention",
                        "default_retention",
                        "min_retention",
                        "path",
                        "type",
                        "id",
                        "incomplete"
                    ],
                    "type": "object"
                }
            ]
        },
        "WormDomains": {
            "properties": {
                "domains": {
                    "items": {
                        "$ref": "#/definitions/WormDomainExtended",
                        "description": ""
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "WormDomainsExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/WormDomains"
                },
                {
                    "properties": {
                        "resume": {
                            "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                            "type": "string"
                        },
                        "total": {
                            "description": "Total number of items available.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "WormSettings": {
            "properties": {
                "settings": {
                    "$ref": "#/definitions/WormSettingsSettings",
                    "description": "Global WORM settings."
                }
            },
            "type": "object"
        },
        "WormSettingsSettings": {
            "properties": {
                "cdate": {
                    "description": "The current time of the SmartLock compliance clock in Unix epoch seconds, or null if the compliance clock is not set.  To set the compliance clock to the current system time, PUT to this resource with an empty JSON object {} for the cdate value.  This cluster must be in compliance mode to set the compliance clock.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Zone": {
            "description": "Access zone.",
            "properties": {
                "alternate_system_provider": {
                    "description": "Alternate system provider.",
                    "type": "string"
                },
                "auth_providers": {
                    "description": "List of authentication providers used on this zone.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cache_entry_expiry": {
                    "description": "Specifies amount of time in seconds to cache a user/group.",
                    "type": "integer"
                },
                "create_path": {
                    "description": "Create path if it does not exist.",
                    "type": "boolean"
                },
                "force_overlap": {
                    "description": "Allow for overlapping base path.",
                    "type": "boolean"
                },
                "home_directory_umask": {
                    "description": "Permissions set on auto-created user home directories.",
                    "type": "integer"
                },
                "ifs_restricted": {
                    "description": "User restrictions for this zone.",
                    "items": {
                        "$ref": "#/definitions/GroupsGroupMember",
                        "description": "A persona consists of either a 'type' and 'name' or a 'ID'."
                    },
                    "type": "array"
                },
                "map_untrusted": {
                    "description": "Maps untrusted domains to this NetBIOS domain during authentication.",
                    "type": "string"
                },
                "name": {
                    "description": "Zone name.",
                    "type": "string"
                },
                "netbios_name": {
                    "description": "NetBIOS name.",
                    "type": "string"
                },
                "path": {
                    "description": "zone path.",
                    "type": "string"
                },
                "skeleton_directory": {
                    "description": "Skeleton directory for user home directories.",
                    "type": "string"
                },
                "system_provider": {
                    "description": "System provider.",
                    "type": "string"
                },
                "user_mapping_rules": {
                    "description": "Current ID mapping rules.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ZoneCreateParams": {
            "allOf": [
                {
                    "$ref": "#/definitions/Zone"
                },
                {
                    "description": "Access zone.",
                    "properties": {
                        "groupnet": {
                            "description": "Groupnet identitier",
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ],
                    "type": "object"
                }
            ]
        },
        "ZoneExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/Zone"
                },
                {
                    "properties": {
                        "groupnet": {
                            "description": "Groupnet identitier",
                            "type": "string"
                        },
                        "id": {
                            "description": "ID.",
                            "type": "string"
                        },
                        "system": {
                            "description": "Zone is built-in.",
                            "type": "boolean"
                        },
                        "zone_id": {
                            "description": "Zone ID.",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "Zones": {
            "properties": {
                "zones": {
                    "items": {
                        "$ref": "#/definitions/ZoneExtended",
                        "description": "Access zone."
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ZonesSummary": {
            "properties": {
                "summary": {
                    "$ref": "#/definitions/ZonesSummarySummary",
                    "description": "The summary of a collection of objects."
                }
            },
            "type": "object"
        },
        "ZonesSummaryExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ZonesSummary"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "ZonesSummarySummary": {
            "properties": {
                "path": {
                    "description": "The zone base path",
                    "type": "string"
                }
            },
            "required": [
                "path"
            ],
            "type": "object"
        },
        "ZonesSummarySummaryExtended": {
            "allOf": [
                {
                    "$ref": "#/definitions/ZonesSummarySummary"
                },
                {
                    "properties": {
                        "count": {
                            "description": "The count of objects in the collection",
                            "type": "integer"
                        },
                        "list": {
                            "description": "List of zone names",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "count"
                    ],
                    "type": "object"
                }
            ]
        }
    },
    "info": {
        "contact": {
            "email": "papi@isilon.com",
            "name": "Isilon PAPI Team",
            "url": "http://emc.com"
        },
        "description": "Isilon Platform API.",
        "license": {
            "name": "MIT",
            "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
        },
        "termsOfService": "http://emc.com",
        "title": "Isilon PAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/platform/1/audit/topics": {
            "get": {
                "description": "Retrieve a list of audit topics.",
                "operationId": "listAuditTopics",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve a list of audit topics.",
                        "schema": {
                            "$ref": "#/definitions/AuditTopicsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "post": {
                "description": "Create a new audit topic.",
                "operationId": "createAuditTopic",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuditTopic",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuditTopicCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new audit topic.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            }
        },
        "/platform/1/audit/topics/{AuditTopicId}": {
            "delete": {
                "description": "Delete the audit topic.",
                "operationId": "deleteAuditTopic",
                "parameters": [
                    {
                        "description": "Delete the audit topic.",
                        "in": "path",
                        "name": "AuditTopicId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "get": {
                "description": "Retrieve the audit topic information.",
                "operationId": "getAuditTopic",
                "parameters": [
                    {
                        "description": "Retrieve the audit topic information.",
                        "in": "path",
                        "name": "AuditTopicId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the audit topic information.",
                        "schema": {
                            "$ref": "#/definitions/AuditTopics"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "put": {
                "description": "Modify the audit topic.",
                "operationId": "updateAuditTopic",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuditTopic",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuditTopic"
                        }
                    },
                    {
                        "description": "Modify the audit topic.",
                        "in": "path",
                        "name": "AuditTopicId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            }
        },
        "/platform/1/auth/access/{AuthAccessUser}": {
            "get": {
                "description": "Determine user's access rights to a file",
                "operationId": "getAuthAccessUser",
                "parameters": [
                    {
                        "description": "Path to the file. Must be within /ifs.",
                        "in": "query",
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "description": "Access zone the user is in.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Show the user's numeric identifier.",
                        "in": "query",
                        "name": "numeric",
                        "type": "boolean"
                    },
                    {
                        "description": "Determine user's access rights to a file",
                        "in": "path",
                        "name": "AuthAccessUser",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Determine user's access rights to a file",
                        "schema": {
                            "$ref": "#/definitions/AuthAccess"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/groups": {
            "delete": {
                "description": "Flush the groups cache.",
                "operationId": "deleteAuthGroups",
                "parameters": [
                    {
                        "description": "If true, only flush cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "List all groups.",
                "operationId": "listAuthGroups",
                "parameters": [
                    {
                        "description": "Filter groups by domain.",
                        "in": "query",
                        "name": "domain",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, only return cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by name prefix.",
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Enumerate all groups that a group is a member of.",
                        "in": "query",
                        "name": "query_member_of",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all groups.",
                        "schema": {
                            "$ref": "#/definitions/AuthGroupsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new group.",
                "operationId": "createAuthGroup",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Optional provider type.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuthGroup",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthGroupCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new group.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/groups/{AuthGroupId}": {
            "delete": {
                "description": "Delete the group.",
                "operationId": "deleteAuthGroup",
                "parameters": [
                    {
                        "description": "If true, flush the group from the cache.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Delete the group.",
                        "in": "path",
                        "name": "AuthGroupId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the group information.",
                "operationId": "getAuthGroup",
                "parameters": [
                    {
                        "description": "If true, only return cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the group information.",
                        "in": "path",
                        "name": "AuthGroupId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the group information.",
                        "schema": {
                            "$ref": "#/definitions/AuthGroups"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the group.",
                "operationId": "updateAuthGroup",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Optional provider type.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuthGroup",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthGroup"
                        }
                    },
                    {
                        "description": "Modify the group.",
                        "in": "path",
                        "name": "AuthGroupId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/groups/{Group}/members": {
            "get": {
                "description": "List all the members of the group.",
                "operationId": "listGroupsGroupMembers",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Filter group members by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter group members by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all the members of the group.",
                        "schema": {
                            "$ref": "#/definitions/GroupsGroupMembers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Add a member to the group.",
                "operationId": "createGroupsGroupMember",
                "parameters": [
                    {
                        "description": "Filter group members by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter group members by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "GroupsGroupMember",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsGroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a member to the group.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/groups/{Group}/members/{GroupsGroupMemberId}": {
            "delete": {
                "description": "Remove the member from the group.",
                "operationId": "deleteGroupsGroupMember",
                "parameters": [
                    {
                        "description": "Filter group members by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter group members by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Remove the member from the group.",
                        "in": "path",
                        "name": "GroupsGroupMemberId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/id": {
            "get": {
                "description": "Retrieve the current security token.",
                "operationId": "getAuthId",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the current security token.",
                        "schema": {
                            "$ref": "#/definitions/AuthId"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/mapping/identities": {
            "delete": {
                "description": "Flush the entire idmap cache.",
                "operationId": "deleteMappingIdentities",
                "parameters": [
                    {
                        "description": "Filter to apply when deleting identity mappings.",
                        "enum": [
                            "auto",
                            "external"
                        ],
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete mapping instead of flush mapping cache.",
                        "in": "query",
                        "name": "remove",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Manually set or modify a mapping between two personae.",
                "operationId": "createMappingIdentity",
                "parameters": [
                    {
                        "description": "Create a bi-directional mapping from source to target and target to source.",
                        "in": "query",
                        "name": "2way",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Replace existing mappings.",
                        "in": "query",
                        "name": "replace",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "MappingIdentity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingIdentityCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manually set or modify a mapping between two personae.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/mapping/identities/{MappingIdentityId}": {
            "delete": {
                "description": "Flush the entire idmap cache.",
                "operationId": "deleteMappingIdentity",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete the bi-directional mapping from source to target and target to source.",
                        "in": "query",
                        "name": "2way",
                        "type": "boolean"
                    },
                    {
                        "description": "Target identity persona.",
                        "in": "query",
                        "name": "target",
                        "type": "string"
                    },
                    {
                        "description": "Delete mapping instead of flush mapping from cache.",
                        "in": "query",
                        "name": "remove",
                        "type": "boolean"
                    },
                    {
                        "description": "Flush the entire idmap cache.",
                        "in": "path",
                        "name": "MappingIdentityId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve all identity mappings (uid, gid, sid, and on-disk) for the supplied source persona.",
                "operationId": "getMappingIdentity",
                "parameters": [
                    {
                        "description": "Idmap should attempt to create missing identity mappings.",
                        "in": "query",
                        "name": "nocreate",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve all identity mappings (uid, gid, sid, and on-disk) for the supplied source persona.",
                        "in": "path",
                        "name": "MappingIdentityId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve all identity mappings (uid, gid, sid, and on-disk) for the supplied source persona.",
                        "schema": {
                            "$ref": "#/definitions/MappingIdentities"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Manually set or modify a mapping between two personae.",
                "operationId": "createMappingIdentity",
                "parameters": [
                    {
                        "description": "Desired mapping target to fetch/generate.",
                        "enum": [
                            "uid",
                            "gid",
                            "sid"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "MappingIdentity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manually set or modify a mapping between two personae.",
                        "schema": {
                            "$ref": "#/definitions/MappingIdentities"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/mapping/users/lookup": {
            "get": {
                "description": "Retrieve the user information.",
                "operationId": "getMappingUsersLookup",
                "parameters": [
                    {
                        "description": "The user's primary group ID.",
                        "in": "query",
                        "name": "primary_gid",
                        "type": "integer"
                    },
                    {
                        "description": "The user ID.",
                        "in": "query",
                        "name": "uid",
                        "type": "integer"
                    },
                    {
                        "description": "The zone the user belongs to.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "The IDs of the groups that the user belongs to.",
                        "in": "query",
                        "items": {
                            "type": "integer"
                        },
                        "name": "gid",
                        "type": "array"
                    },
                    {
                        "description": "The user name.",
                        "in": "query",
                        "name": "user",
                        "type": "string"
                    },
                    {
                        "description": "The Kerberos principal name, of the form user@realm.",
                        "in": "query",
                        "name": "kerberos_principal",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user information.",
                        "schema": {
                            "$ref": "#/definitions/MappingUsersLookup"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/mapping/users/rules": {
            "get": {
                "description": "Retrieve the user mapping rules.",
                "operationId": "getMappingUsersRules",
                "parameters": [
                    {
                        "description": "The zone to which the user mapping applies.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user mapping rules.",
                        "schema": {
                            "$ref": "#/definitions/MappingUsersRules"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the user mapping rules.",
                "operationId": "updateMappingUsersRules",
                "parameters": [
                    {
                        "in": "body",
                        "name": "MappingUsersRules",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingUsersRulesRules"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/netgroups/{AuthNetgroupId}": {
            "get": {
                "description": "Retrieve the user information.",
                "operationId": "getAuthNetgroup",
                "parameters": [
                    {
                        "description": "Ignore netgroup errors.",
                        "in": "query",
                        "name": "ignore_errors",
                        "type": "boolean"
                    },
                    {
                        "description": "Perform recursive search.",
                        "in": "query",
                        "name": "recursive",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the user information.",
                        "in": "path",
                        "name": "AuthNetgroupId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user information.",
                        "schema": {
                            "$ref": "#/definitions/AuthNetgroups"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/privileges": {
            "get": {
                "description": "List all privileges.",
                "operationId": "getAuthPrivileges",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all privileges.",
                        "schema": {
                            "$ref": "#/definitions/AuthPrivileges"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/ads/{Id}/controllers": {
            "get": {
                "description": "List all ADS controllers.",
                "operationId": "getProvidersAdsIdControllers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all ADS controllers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersAdsIdControllers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/ads/{Id}/search": {
            "get": {
                "description": "Retrieve search results.",
                "operationId": "getProvidersAdsIdSearch",
                "parameters": [
                    {
                        "description": "The domain to search in.",
                        "in": "query",
                        "name": "domain",
                        "type": "string"
                    },
                    {
                        "description": "The user or group description to search for.",
                        "in": "query",
                        "name": "description",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, search for users.",
                        "in": "query",
                        "name": "search_users",
                        "type": "boolean"
                    },
                    {
                        "description": "The LDAP filter to apply to the search.",
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The user name for the domain if untrusted.",
                        "in": "query",
                        "name": "user",
                        "type": "string"
                    },
                    {
                        "description": "The password for the domain if untrusted.",
                        "in": "query",
                        "name": "password",
                        "type": "string"
                    },
                    {
                        "description": "If true, search for groups.",
                        "in": "query",
                        "name": "search_groups",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve search results.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersAdsIdSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/file": {
            "get": {
                "description": "List all file providers.",
                "operationId": "listProvidersFile",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all file providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new file provider.",
                "operationId": "createProvidersFileItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersFileItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersFileIdParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new file provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/file/{ProvidersFileId}": {
            "delete": {
                "description": "Delete the file provider.",
                "operationId": "deleteProvidersFileId",
                "parameters": [
                    {
                        "description": "Delete the file provider.",
                        "in": "path",
                        "name": "ProvidersFileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the file provider.",
                "operationId": "getProvidersFileId",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the file provider.",
                        "in": "path",
                        "name": "ProvidersFileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the file provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the file provider.",
                "operationId": "updateProvidersFileId",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersFileIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersFileIdParams"
                        }
                    },
                    {
                        "description": "Modify the file provider.",
                        "in": "path",
                        "name": "ProvidersFileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/local": {
            "get": {
                "description": "List all local providers.",
                "operationId": "getProvidersLocal",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all local providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersLocal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/providers/local/{ProvidersLocalId}": {
            "delete": {
                "description": "Delete the local provider.",
                "operationId": "deleteProvidersLocalId",
                "parameters": [
                    {
                        "description": "Delete the local provider.",
                        "in": "path",
                        "name": "ProvidersLocalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the local provider.",
                "operationId": "getProvidersLocalId",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the local provider.",
                        "in": "path",
                        "name": "ProvidersLocalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the local provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersLocal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the local provider.",
                "operationId": "updateProvidersLocalId",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersLocalIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersLocalIdParams"
                        }
                    },
                    {
                        "description": "Modify the local provider.",
                        "in": "path",
                        "name": "ProvidersLocalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles": {
            "get": {
                "description": "List all roles.",
                "operationId": "listAuthRoles",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all roles.",
                        "schema": {
                            "$ref": "#/definitions/AuthRolesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new role.",
                "operationId": "createAuthRole",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuthRole",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new role.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles/{AuthRoleId}": {
            "delete": {
                "description": "Delete the role.",
                "operationId": "deleteAuthRole",
                "parameters": [
                    {
                        "description": "Delete the role.",
                        "in": "path",
                        "name": "AuthRoleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the role information.",
                "operationId": "getAuthRole",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Retrieve the role information.",
                        "in": "path",
                        "name": "AuthRoleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the role information.",
                        "schema": {
                            "$ref": "#/definitions/AuthRoles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the role.",
                "operationId": "updateAuthRole",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuthRole",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthRole"
                        }
                    },
                    {
                        "description": "Modify the role.",
                        "in": "path",
                        "name": "AuthRoleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles/{Role}/members": {
            "get": {
                "description": "List all the members of the role.",
                "operationId": "listRolesRoleMembers",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all the members of the role.",
                        "schema": {
                            "$ref": "#/definitions/GroupsGroupMembers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Add a member to the role.",
                "operationId": "createRolesRoleMember",
                "parameters": [
                    {
                        "in": "body",
                        "name": "RolesRoleMember",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsGroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a member to the role.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles/{Role}/members/{RolesRoleMemberId}": {
            "delete": {
                "description": "Remove a member from the role.",
                "operationId": "deleteRolesRoleMember",
                "parameters": [
                    {
                        "description": "Remove a member from the role.",
                        "in": "path",
                        "name": "RolesRoleMemberId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles/{Role}/privileges": {
            "get": {
                "description": "List all privileges in the role.",
                "operationId": "listRolesRolePrivileges",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all privileges in the role.",
                        "schema": {
                            "$ref": "#/definitions/RolesRolePrivileges"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Add a privilege to the role.",
                "operationId": "createRolesRolePrivilege",
                "parameters": [
                    {
                        "in": "body",
                        "name": "RolesRolePrivilege",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthIdNtokenPrivilegeItem"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a privilege to the role.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/roles/{Role}/privileges/{RolesRolePrivilegeId}": {
            "delete": {
                "description": "Remove a privilege from a role.",
                "operationId": "deleteRolesRolePrivilege",
                "parameters": [
                    {
                        "description": "Remove a privilege from a role.",
                        "in": "path",
                        "name": "RolesRolePrivilegeId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/global": {
            "get": {
                "description": "Retrieve the global settings.",
                "operationId": "getSettingsGlobal",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Zone which contains any per-zone settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the global settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsGlobal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the global settings.",
                "operationId": "updateSettingsGlobal",
                "parameters": [
                    {
                        "description": "Zone which contains any per-zone settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SettingsGlobal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsGlobalGlobalSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/defaults": {
            "get": {
                "description": "Retrieve the krb5 settings.",
                "operationId": "getSettingsKrb5Defaults",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the krb5 settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Defaults"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the krb5 settings.",
                "operationId": "updateSettingsKrb5Defaults",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Defaults",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5DefaultsKrb5Settings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/domains": {
            "get": {
                "description": "Retrieve the krb5 settings for domains.",
                "operationId": "listSettingsKrb5Domains",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the krb5 settings for domains.",
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Domains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new krb5 domain.",
                "operationId": "createSettingsKrb5Domain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5DomainCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new krb5 domain.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/domains/{SettingsKrb5DomainId}": {
            "delete": {
                "description": "Remove a krb5 domain.",
                "operationId": "deleteSettingsKrb5Domain",
                "parameters": [
                    {
                        "description": "Remove a krb5 domain.",
                        "in": "path",
                        "name": "SettingsKrb5DomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "View the krb5 domain settings.",
                "operationId": "getSettingsKrb5Domain",
                "parameters": [
                    {
                        "description": "View the krb5 domain settings.",
                        "in": "path",
                        "name": "SettingsKrb5DomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View the krb5 domain settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Domains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the krb5 domain settings.",
                "operationId": "updateSettingsKrb5Domain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Domain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Domain"
                        }
                    },
                    {
                        "description": "Modify the krb5 domain settings.",
                        "in": "path",
                        "name": "SettingsKrb5DomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/realms": {
            "get": {
                "description": "Retrieve the krb5 settings for realms.",
                "operationId": "listSettingsKrb5Realms",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the krb5 settings for realms.",
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Realms"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new krb5 realm.",
                "operationId": "createSettingsKrb5Realm",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Realm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5RealmCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new krb5 realm.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/krb5/realms/{SettingsKrb5RealmId}": {
            "delete": {
                "description": "Remove a realm.",
                "operationId": "deleteSettingsKrb5Realm",
                "parameters": [
                    {
                        "description": "Remove a realm.",
                        "in": "path",
                        "name": "SettingsKrb5RealmId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the krb5 settings for realms.",
                "operationId": "getSettingsKrb5Realm",
                "parameters": [
                    {
                        "description": "Retrieve the krb5 settings for realms.",
                        "in": "path",
                        "name": "SettingsKrb5RealmId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the krb5 settings for realms.",
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Realms"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the krb5 realm settings.",
                "operationId": "updateSettingsKrb5Realm",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsKrb5Realm",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsKrb5Realm"
                        }
                    },
                    {
                        "description": "Modify the krb5 realm settings.",
                        "in": "path",
                        "name": "SettingsKrb5RealmId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/settings/mapping": {
            "get": {
                "description": "Retrieve the mapping settings.",
                "operationId": "getSettingsMapping",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Access zone which contains mapping settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the mapping settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsMapping"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the mapping settings.",
                "operationId": "updateSettingsMapping",
                "parameters": [
                    {
                        "description": "Access zone which contains mapping settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SettingsMapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsMappingMappingSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/shells": {
            "get": {
                "description": "List all shells.",
                "operationId": "getAuthShells",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all shells.",
                        "schema": {
                            "$ref": "#/definitions/AuthShells"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/users": {
            "delete": {
                "description": "Flush the users cache.",
                "operationId": "deleteAuthUsers",
                "parameters": [
                    {
                        "description": "If true, only flush cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "List all users.",
                "operationId": "listAuthUsers",
                "parameters": [
                    {
                        "description": "Filter users by domain.",
                        "in": "query",
                        "name": "domain",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, only return cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by name prefix.",
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Enumerate all users that a group is a member of.",
                        "in": "query",
                        "name": "query_member_of",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all users.",
                        "schema": {
                            "$ref": "#/definitions/AuthUsersExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new user.",
                "operationId": "createAuthUser",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Optional provider type.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuthUser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthUserCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new user.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/users/{AuthUserId}": {
            "delete": {
                "description": "Delete the user.",
                "operationId": "deleteAuthUser",
                "parameters": [
                    {
                        "description": "If true, flush the user from the cache.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Delete the user.",
                        "in": "path",
                        "name": "AuthUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the user information.",
                "operationId": "getAuthUser",
                "parameters": [
                    {
                        "description": "If true, only return cached objects.",
                        "in": "query",
                        "name": "cached",
                        "type": "boolean"
                    },
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter users by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter users by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the user information.",
                        "in": "path",
                        "name": "AuthUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user information.",
                        "schema": {
                            "$ref": "#/definitions/AuthUsers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the user.",
                "operationId": "updateAuthUser",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Optional provider type.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuthUser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthUser"
                        }
                    },
                    {
                        "description": "Modify the user.",
                        "in": "path",
                        "name": "AuthUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/users/{User}/change_password": {
            "put": {
                "description": "Change the user's password.",
                "operationId": "updateUsersUserChangePassword",
                "parameters": [
                    {
                        "description": "Specifies access zone containing user.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "UsersUserChangePassword",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsersUserChangePassword"
                        }
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/users/{User}/member_of": {
            "get": {
                "description": "List all groups the user is a member of.",
                "operationId": "listUsersUserMemberOf",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all groups the user is a member of.",
                        "schema": {
                            "$ref": "#/definitions/UsersUserMemberOf"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Add the user to a group.",
                "operationId": "createUsersUserMemberOfItem",
                "parameters": [
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "UsersUserMemberOfItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsGroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add the user to a group.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/users/{User}/member_of/{UsersUserMemberOfMemberOf}": {
            "delete": {
                "description": "Remove the user from the group.",
                "operationId": "deleteUsersUserMemberOfMemberOf",
                "parameters": [
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Remove the user from the group.",
                        "in": "path",
                        "name": "UsersUserMemberOfMemberOf",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/wellknowns": {
            "get": {
                "description": "List all wellknown personas.",
                "operationId": "getAuthWellknowns",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all wellknown personas.",
                        "schema": {
                            "$ref": "#/definitions/AuthWellknowns"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/auth/wellknowns/{AuthWellknownId}": {
            "get": {
                "description": "Retrieve the wellknown persona.",
                "operationId": "getAuthWellknown",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the wellknown persona.",
                        "in": "path",
                        "name": "AuthWellknownId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the wellknown persona.",
                        "schema": {
                            "$ref": "#/definitions/AuthWellknowns"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/1/cluster/email": {
            "get": {
                "description": "Get the cluster email notification settings.",
                "operationId": "getClusterEmail",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the cluster email notification settings.",
                        "schema": {
                            "$ref": "#/definitions/ClusterEmail"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "put": {
                "description": "Modify the cluster email notification settings.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateClusterEmail",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterEmail",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterEmailExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/1/cluster/owner": {
            "get": {
                "description": "Get the cluster contact info settings",
                "operationId": "getClusterOwner",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the cluster contact info settings",
                        "schema": {
                            "$ref": "#/definitions/ClusterOwner"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "put": {
                "description": "Modify the cluster contact info settings.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateClusterOwner",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterOwner",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterOwner"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/1/cluster/statfs": {
            "get": {
                "description": "Retrieve the filesystem statistics.",
                "operationId": "getClusterStatfs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the filesystem statistics.",
                        "schema": {
                            "$ref": "#/definitions/ClusterStatfs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/1/debug/stats": {
            "delete": {
                "description": "Clear per-resource statistics counters.",
                "operationId": "deleteDebugStats",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Debug"
                ]
            },
            "get": {
                "description": "List cumulative call statistics for each resource.",
                "operationId": "getDebugStats",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List cumulative call statistics for each resource.",
                        "schema": {
                            "$ref": "#/definitions/DebugStats"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Debug"
                ]
            }
        },
        "/platform/1/dedupe/dedupe-summary": {
            "get": {
                "description": "Return summary information about dedupe.",
                "operationId": "getDedupeDedupeSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return summary information about dedupe.",
                        "schema": {
                            "$ref": "#/definitions/DedupeDedupeSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            }
        },
        "/platform/1/dedupe/reports": {
            "get": {
                "description": "List dedupe reports.",
                "operationId": "getDedupeReports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "enum": [
                            "id",
                            "start_time",
                            "end_time"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to reports at or after the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to reports at or before the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to the given job ID.",
                        "in": "query",
                        "name": "job_id",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to the given job type.",
                        "enum": [
                            "Dedupe",
                            "DedupeAssessment"
                        ],
                        "in": "query",
                        "name": "job_type",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List dedupe reports.",
                        "schema": {
                            "$ref": "#/definitions/DedupeReportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            }
        },
        "/platform/1/dedupe/reports/{DedupeReportId}": {
            "get": {
                "description": "Retrieve a report for a single dedupe job.",
                "operationId": "getDedupeReport",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve a report for a single dedupe job.",
                        "in": "path",
                        "name": "DedupeReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve a report for a single dedupe job.",
                        "schema": {
                            "$ref": "#/definitions/DedupeReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            }
        },
        "/platform/1/dedupe/settings": {
            "get": {
                "description": "Retrieve the dedupe settings.",
                "operationId": "getDedupeSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the dedupe settings.",
                        "schema": {
                            "$ref": "#/definitions/DedupeSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            },
            "put": {
                "description": "Modify the dedupe settings. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateDedupeSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "DedupeSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DedupeSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Dedupe"
                ]
            }
        },
        "/platform/1/filepool/default-policy": {
            "get": {
                "description": "List default file pool policy.",
                "operationId": "getFilepoolDefaultPolicy",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List default file pool policy.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolDefaultPolicy"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            },
            "put": {
                "description": "Set default file pool policy.",
                "operationId": "updateFilepoolDefaultPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FilepoolDefaultPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilepoolDefaultPolicyExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filepool/policies": {
            "get": {
                "description": "List all policies.",
                "operationId": "listFilepoolPolicies",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all policies.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            },
            "post": {
                "description": "Create a new policy.",
                "operationId": "createFilepoolPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FilepoolPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilepoolPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new policy.",
                        "schema": {
                            "$ref": "#/definitions/CreateFilepoolPolicyResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filepool/policies/{FilepoolPolicyId}": {
            "delete": {
                "description": "Delete file pool policy.",
                "operationId": "deleteFilepoolPolicy",
                "parameters": [
                    {
                        "description": "Delete file pool policy.",
                        "in": "path",
                        "name": "FilepoolPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            },
            "get": {
                "description": "Retrieve file pool policy information.",
                "operationId": "getFilepoolPolicy",
                "parameters": [
                    {
                        "description": "Retrieve file pool policy information.",
                        "in": "path",
                        "name": "FilepoolPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve file pool policy information.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            },
            "put": {
                "description": "Modify file pool policy. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateFilepoolPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FilepoolPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilepoolPolicy"
                        }
                    },
                    {
                        "description": "Modify file pool policy. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "FilepoolPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filepool/templates": {
            "get": {
                "description": "List all templates.",
                "operationId": "getFilepoolTemplates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all templates.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolTemplates"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filepool/templates/{FilepoolTemplateId}": {
            "get": {
                "description": "List all templates.",
                "operationId": "getFilepoolTemplate",
                "parameters": [
                    {
                        "description": "List all templates.",
                        "in": "path",
                        "name": "FilepoolTemplateId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all templates.",
                        "schema": {
                            "$ref": "#/definitions/FilepoolTemplates"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filepool"
                ]
            }
        },
        "/platform/1/filesystem/settings/access-time": {
            "get": {
                "description": "Retrieve settings for access time.",
                "operationId": "getSettingsAccessTime",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve settings for access time.",
                        "schema": {
                            "$ref": "#/definitions/SettingsAccessTime"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filesystem"
                ]
            },
            "put": {
                "description": "Set settings for access time.",
                "operationId": "updateSettingsAccessTime",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsAccessTime",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsAccessTimeExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Filesystem"
                ]
            }
        },
        "/platform/1/foo/people": {
            "get": {
                "description": "List all people.",
                "operationId": "listFooPeople",
                "parameters": [
                    {
                        "description": "This query arg does nothing, it's just here as an example.",
                        "in": "query",
                        "name": "custom_property",
                        "type": "boolean"
                    },
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all people.",
                        "schema": {
                            "$ref": "#/definitions/FooPeopleExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Foo"
                ]
            },
            "post": {
                "description": "Create a new person.",
                "operationId": "createFooPeopleItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FooPeopleItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FooPeopleIdParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new person.",
                        "schema": {
                            "$ref": "#/definitions/CreateFooPeopleItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Foo"
                ]
            }
        },
        "/platform/1/foo/people/{FooPeopleId}": {
            "delete": {
                "description": "Delete the person.",
                "operationId": "deleteFooPeopleId",
                "parameters": [
                    {
                        "description": "Delete the person.",
                        "in": "path",
                        "name": "FooPeopleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Foo"
                ]
            },
            "get": {
                "description": "Retrieve the person.",
                "operationId": "getFooPeopleId",
                "parameters": [
                    {
                        "description": "Retrieve the person.",
                        "in": "path",
                        "name": "FooPeopleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the person.",
                        "schema": {
                            "$ref": "#/definitions/FooPeople"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Foo"
                ]
            },
            "put": {
                "description": "Modify the person",
                "operationId": "updateFooPeopleId",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FooPeopleIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FooPeopleIdParams"
                        }
                    },
                    {
                        "description": "Modify the person",
                        "in": "path",
                        "name": "FooPeopleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Foo"
                ]
            }
        },
        "/platform/1/fsa/results": {
            "get": {
                "description": "List all results.",
                "operationId": "getFsaResults",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all results.",
                        "schema": {
                            "$ref": "#/definitions/FsaResultsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/1/fsa/results/{FsaResultId}": {
            "delete": {
                "description": "Delete the result set.",
                "operationId": "deleteFsaResult",
                "parameters": [
                    {
                        "description": "Delete the result set.",
                        "in": "path",
                        "name": "FsaResultId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            },
            "get": {
                "description": "Retrieve result set information.",
                "operationId": "getFsaResult",
                "parameters": [
                    {
                        "description": "Retrieve result set information.",
                        "in": "path",
                        "name": "FsaResultId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve result set information.",
                        "schema": {
                            "$ref": "#/definitions/FsaResults"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            },
            "put": {
                "description": "Modify result set. Only the pinned property can be changed at this time.",
                "operationId": "updateFsaResult",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FsaResult",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FsaResult"
                        }
                    },
                    {
                        "description": "Modify result set. Only the pinned property can be changed at this time.",
                        "in": "path",
                        "name": "FsaResultId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/1/fsa/settings": {
            "delete": {
                "description": "Revert all settings to their defaults.",
                "operationId": "deleteFsaSettings",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            },
            "get": {
                "description": "List all settings.",
                "operationId": "getFsaSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/FsaSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateFsaSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FsaSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FsaSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/1/job/job-summary": {
            "get": {
                "description": "View job engine status.",
                "operationId": "getJobJobSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View job engine status.",
                        "schema": {
                            "$ref": "#/definitions/JobJobSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/policies": {
            "get": {
                "description": "List job impact policies.",
                "operationId": "listJobPolicies",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List job impact policies.",
                        "schema": {
                            "$ref": "#/definitions/JobPoliciesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "post": {
                "description": "Create a new job impact policy.",
                "operationId": "createJobPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobPolicyCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new job impact policy.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/policies/{JobPolicyId}": {
            "delete": {
                "description": "Delete a job impact policy.  System policies may not be deleted.",
                "operationId": "deleteJobPolicy",
                "parameters": [
                    {
                        "description": "Delete a job impact policy.  System policies may not be deleted.",
                        "in": "path",
                        "name": "JobPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "get": {
                "description": "View a single job impact policy.",
                "operationId": "getJobPolicy",
                "parameters": [
                    {
                        "description": "View a single job impact policy.",
                        "in": "path",
                        "name": "JobPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single job impact policy.",
                        "schema": {
                            "$ref": "#/definitions/JobPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "put": {
                "description": "Modify a job impact policy.",
                "operationId": "updateJobPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobPolicy"
                        }
                    },
                    {
                        "description": "Modify a job impact policy.",
                        "in": "path",
                        "name": "JobPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/statistics": {
            "get": {
                "description": "View job engine statistics.",
                "operationId": "getJobStatistics",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View job engine statistics.",
                        "schema": {
                            "$ref": "#/definitions/JobStatistics"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/types": {
            "get": {
                "description": "List job types.",
                "operationId": "getJobTypes",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Whether to show all job types, including hidden ones.  Defaults to false.",
                        "in": "query",
                        "name": "show_all",
                        "type": "boolean"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List job types.",
                        "schema": {
                            "$ref": "#/definitions/JobTypesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/job/types/{JobTypeId}": {
            "get": {
                "description": "Retrieve job type information.",
                "operationId": "getJobType",
                "parameters": [
                    {
                        "description": "Retrieve job type information.",
                        "in": "path",
                        "name": "JobTypeId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve job type information.",
                        "schema": {
                            "$ref": "#/definitions/JobTypes"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "put": {
                "description": "Modify the job type.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateJobType",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobType",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobType"
                        }
                    },
                    {
                        "description": "Modify the job type.  All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "JobTypeId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/1/license/licenses/{LicenseLicenseId}": {
            "get": {
                "description": "Retrieve license information for the feature.",
                "operationId": "getLicenseLicense",
                "parameters": [
                    {
                        "description": "Retrieve license information for the feature.",
                        "in": "path",
                        "name": "LicenseLicenseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve license information for the feature.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicenses"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "License"
                ]
            }
        },
        "/platform/1/protocols/hdfs/proxyusers": {
            "get": {
                "description": "List all proxyusers.",
                "operationId": "listHdfsProxyusers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all proxyusers.",
                        "schema": {
                            "$ref": "#/definitions/HdfsProxyusers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new HDFS proxyuser.",
                "operationId": "createHdfsProxyuser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsProxyuser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsProxyuser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new HDFS proxyuser.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/proxyusers/{HdfsProxyuserId}": {
            "delete": {
                "description": "Delete a a HDFS proxyuser.",
                "operationId": "deleteHdfsProxyuser",
                "parameters": [
                    {
                        "description": "Delete a a HDFS proxyuser.",
                        "in": "path",
                        "name": "HdfsProxyuserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "List all proxyusers.",
                "operationId": "getHdfsProxyuser",
                "parameters": [
                    {
                        "description": "List all proxyusers.",
                        "in": "path",
                        "name": "HdfsProxyuserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all proxyusers.",
                        "schema": {
                            "$ref": "#/definitions/HdfsProxyusers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Create a new HDFS proxyuser.",
                "operationId": "updateHdfsProxyuser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsProxyuser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "description": "Create a new HDFS proxyuser.",
                        "in": "path",
                        "name": "HdfsProxyuserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/proxyusers/{Name}/members": {
            "get": {
                "description": "List all the members of the HDFS proxyuser.",
                "operationId": "listHdfsProxyusersNameMembers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all the members of the HDFS proxyuser.",
                        "schema": {
                            "$ref": "#/definitions/GroupsGroupMembers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Add a member to the HDFS proxyuser.",
                "operationId": "createHdfsProxyusersNameMember",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsProxyusersNameMember",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsGroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a member to the HDFS proxyuser.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/proxyusers/{Name}/members/{HdfsProxyusersNameMemberId}": {
            "delete": {
                "description": "Remove a member from the HDFS proxyuser.",
                "operationId": "deleteHdfsProxyusersNameMember",
                "parameters": [
                    {
                        "description": "Remove a member from the HDFS proxyuser.",
                        "in": "path",
                        "name": "HdfsProxyusersNameMemberId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Create a new HDFS proxyuser.",
                "operationId": "updateHdfsProxyusersNameMember",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsProxyusersNameMember",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "description": "Create a new HDFS proxyuser.",
                        "in": "path",
                        "name": "HdfsProxyusersNameMemberId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/racks": {
            "get": {
                "description": "List all racks.",
                "operationId": "listHdfsRacks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all racks.",
                        "schema": {
                            "$ref": "#/definitions/HdfsRacksExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new HDFS rack.",
                "operationId": "createHdfsRack",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsRack",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsRack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new HDFS rack.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/hdfs/racks/{HdfsRackId}": {
            "delete": {
                "description": "Delete the HDFS rack.",
                "operationId": "deleteHdfsRack",
                "parameters": [
                    {
                        "description": "Delete the HDFS rack.",
                        "in": "path",
                        "name": "HdfsRackId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve the HDFS rack.",
                "operationId": "getHdfsRack",
                "parameters": [
                    {
                        "description": "Retrieve the HDFS rack.",
                        "in": "path",
                        "name": "HdfsRackId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the HDFS rack.",
                        "schema": {
                            "$ref": "#/definitions/HdfsRacks"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the HDFS rack",
                "operationId": "updateHdfsRack",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsRack",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsRack"
                        }
                    },
                    {
                        "description": "Modify the HDFS rack",
                        "in": "path",
                        "name": "HdfsRackId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/openfiles": {
            "get": {
                "description": "List open files.",
                "operationId": "getSmbOpenfiles",
                "parameters": [
                    {
                        "description": "Order results by this field. Default is id.",
                        "enum": [
                            "id",
                            "file",
                            "user",
                            "locks"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List open files.",
                        "schema": {
                            "$ref": "#/definitions/SmbOpenfiles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/openfiles/{SmbOpenfileId}": {
            "delete": {
                "description": "Close the file in the SMB server.",
                "operationId": "deleteSmbOpenfile",
                "parameters": [
                    {
                        "description": "Close the file in the SMB server.",
                        "in": "path",
                        "name": "SmbOpenfileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/sessions": {
            "get": {
                "description": "List open sessions.",
                "operationId": "getSmbSessions",
                "parameters": [
                    {
                        "description": "Order results by this field.",
                        "enum": [
                            "computer",
                            "user",
                            "client_type",
                            "openfiles",
                            "active_time",
                            "idle_time",
                            "guest_login",
                            "encryption"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List open sessions.",
                        "schema": {
                            "$ref": "#/definitions/SmbSessions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/sessions/{Computer}/{SmbSessionsComputerUser}": {
            "delete": {
                "description": "Close the SMB session.",
                "operationId": "deleteSmbSessionsComputerUser",
                "parameters": [
                    {
                        "description": "Close the SMB session.",
                        "in": "path",
                        "name": "SmbSessionsComputerUser",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Computer",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/sessions/{SmbSessionId}": {
            "delete": {
                "description": "Close the SMB session.",
                "operationId": "deleteSmbSession",
                "parameters": [
                    {
                        "description": "Close the SMB session.",
                        "in": "path",
                        "name": "SmbSessionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/settings/share": {
            "get": {
                "description": "List all settings.",
                "operationId": "getSmbSettingsShare",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Zone which contains these share settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/SmbSettingsShare"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateSmbSettingsShare",
                "parameters": [
                    {
                        "description": "Zone which contains these share settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SmbSettingsShare",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbSettingsShareSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/shares": {
            "delete": {
                "description": "Delete multiple smb shares.",
                "operationId": "deleteSmbShares",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "List all shares.",
                "operationId": "listSmbShares",
                "parameters": [
                    {
                        "description": "Order results by this field. Default is id.",
                        "enum": [
                            "id",
                            "name",
                            "path",
                            "description"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, resolve group and user names in personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all shares.",
                        "schema": {
                            "$ref": "#/definitions/SmbSharesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new share.",
                "operationId": "createSmbShare",
                "parameters": [
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SmbShare",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbShareCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new share.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/shares-summary": {
            "get": {
                "description": "Return summary information about shares.",
                "operationId": "getSmbSharesSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return summary information about shares.",
                        "schema": {
                            "$ref": "#/definitions/SmbSharesSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/protocols/smb/shares/{SmbShareId}": {
            "delete": {
                "description": "Delete the share.",
                "operationId": "deleteSmbShare",
                "parameters": [
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete the share.",
                        "in": "path",
                        "name": "SmbShareId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve share.",
                "operationId": "getSmbShare",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "If true, resolve group and user names in personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve share.",
                        "in": "path",
                        "name": "SmbShareId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve share.",
                        "schema": {
                            "$ref": "#/definitions/SmbShares"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify share. All input fields are optional, but one or must be supplied.",
                "operationId": "updateSmbShare",
                "parameters": [
                    {
                        "description": "Zone which contains this share.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "SmbShare",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbShare"
                        }
                    },
                    {
                        "description": "Modify share. All input fields are optional, but one or must be supplied.",
                        "in": "path",
                        "name": "SmbShareId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/1/quota/license": {
            "get": {
                "description": "Retrieve license information.",
                "operationId": "getQuotaLicense",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve license information.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicense"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/quotas": {
            "delete": {
                "description": "Delete all or matching quotas.",
                "operationId": "deleteQuotaQuotas",
                "parameters": [
                    {
                        "description": "Only delete quotas with this enforcement (non-accounting).",
                        "in": "query",
                        "name": "enforced",
                        "type": "boolean"
                    },
                    {
                        "description": "Only delete quotas with this setting for include_snapshots.",
                        "in": "query",
                        "name": "include_snapshots",
                        "type": "boolean"
                    },
                    {
                        "description": "If used with the path argument, delete all quotas at that path or any descendent sub-directory.",
                        "in": "query",
                        "name": "recurse_path_children",
                        "type": "boolean"
                    },
                    {
                        "description": "If used with the path argument, delete all quotas at that path or any parent directory.",
                        "in": "query",
                        "name": "recurse_path_parents",
                        "type": "boolean"
                    },
                    {
                        "description": "Only delete user or group quotas matching this persona (must be used with the corresponding type argument).  Format is <PERSONA_TYPE>:<string/integer>, where PERSONA_TYPE is one of USER, GROUP, SID, ID, or GID.",
                        "in": "query",
                        "name": "persona",
                        "type": "string"
                    },
                    {
                        "description": "Only delete quotas matching this path (see also recurse_path_*).",
                        "in": "query",
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "description": "Only delete quotas matching this type.",
                        "enum": [
                            "directory",
                            "user",
                            "group",
                            "default-user",
                            "default-group"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "List all or matching quotas. Can also be used to retrieve quota state from existing reports. For any query argument not supplied, the default behavior is return all.",
                "operationId": "listQuotaQuotas",
                "parameters": [
                    {
                        "description": "Only list quotas with this enforcement (non-accounting).",
                        "in": "query",
                        "name": "enforced",
                        "type": "boolean"
                    },
                    {
                        "description": "Only list quotas with this setting for include_snapshots.",
                        "in": "query",
                        "name": "include_snapshots",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional named zone to use for user and group resolution.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If used with the path argument, match all quotas at that path or any descendent sub-directory.",
                        "in": "query",
                        "name": "recurse_path_children",
                        "type": "boolean"
                    },
                    {
                        "description": "If true, resolve group and user names in personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "If used with the path argument, match all quotas at that path or any parent directory.",
                        "in": "query",
                        "name": "recurse_path_parents",
                        "type": "boolean"
                    },
                    {
                        "description": "Only list user or group quotas matching this persona (must be used with the corresponding type argument).  Format is <PERSONA_TYPE>:<string/integer>, where PERSONA_TYPE is one of USER, GROUP, SID, ID, or GID.",
                        "in": "query",
                        "name": "persona",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Set to true to only list quotas which have exceeded one or more of their thresholds.",
                        "in": "query",
                        "name": "exceeded",
                        "type": "boolean"
                    },
                    {
                        "description": "Only list quotas matching this path (see also recurse_path_*).",
                        "in": "query",
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "description": "Only list quotas matching this type.",
                        "enum": [
                            "directory",
                            "user",
                            "group",
                            "default-user",
                            "default-group"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "Use the named report as a source rather than the live quotas. See the /q/quota/reports resource for a list of valid reports.",
                        "in": "query",
                        "name": "report_id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching quotas. Can also be used to retrieve quota state from existing reports. For any query argument not supplied, the default behavior is return all.",
                        "schema": {
                            "$ref": "#/definitions/QuotaQuotasExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new quota.",
                "operationId": "createQuotaQuota",
                "parameters": [
                    {
                        "description": "Optional named zone to use for user and group resolution.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "QuotaQuota",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotaQuotaCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new quota.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/quotas-summary": {
            "get": {
                "description": "Return summary information about quotas.",
                "operationId": "getQuotaQuotasSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return summary information about quotas.",
                        "schema": {
                            "$ref": "#/definitions/QuotaQuotasSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/quotas/{Qid}/notifications": {
            "delete": {
                "description": "Delete all quota specific rules. The quota will then use the global rules.",
                "operationId": "deleteQuotasQidNotifications",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "List all rules.",
                "operationId": "listQuotasQidNotifications",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all rules.",
                        "schema": {
                            "$ref": "#/definitions/QuotasQidNotificationsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new notification rule specific to this quota.",
                "operationId": "createQuotasQidNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotasQidNotification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotasQidNotificationCreateParams"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new notification rule specific to this quota.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "This method creates an empty set of rules so that the global rules are not used. The input must be an empty JSON object.",
                "operationId": "updateQuotasQidNotifications",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotasQidNotifications",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/quotas/{Qid}/notifications/{QuotasQidNotificationId}": {
            "delete": {
                "description": "Delete the notification rule.",
                "operationId": "deleteQuotasQidNotification",
                "parameters": [
                    {
                        "description": "Delete the notification rule.",
                        "in": "path",
                        "name": "QuotasQidNotificationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve notification rule information.",
                "operationId": "getQuotasQidNotification",
                "parameters": [
                    {
                        "description": "Retrieve notification rule information.",
                        "in": "path",
                        "name": "QuotasQidNotificationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve notification rule information.",
                        "schema": {
                            "$ref": "#/definitions/QuotasQidNotifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify notification rule. All input fields are optional, but one or must be supplied.",
                "operationId": "updateQuotasQidNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotasQidNotification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotasQidNotification"
                        }
                    },
                    {
                        "description": "Modify notification rule. All input fields are optional, but one or must be supplied.",
                        "in": "path",
                        "name": "QuotasQidNotificationId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Qid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/quotas/{QuotaQuotaId}": {
            "delete": {
                "description": "Delete the quota.",
                "operationId": "deleteQuotaQuota",
                "parameters": [
                    {
                        "description": "Delete the quota.",
                        "in": "path",
                        "name": "QuotaQuotaId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve quota information.",
                "operationId": "getQuotaQuota",
                "parameters": [
                    {
                        "description": "If true, resolve group and user names in personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional named zone to use for user and group resolution.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve quota information.",
                        "in": "path",
                        "name": "QuotaQuotaId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve quota information.",
                        "schema": {
                            "$ref": "#/definitions/QuotaQuotas"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify quota. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateQuotaQuota",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotaQuota",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotaQuota"
                        }
                    },
                    {
                        "description": "Modify quota. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "QuotaQuotaId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/reports": {
            "get": {
                "description": "List all or matching reports.",
                "operationId": "listQuotaReports",
                "parameters": [
                    {
                        "description": "Order results by this field.",
                        "enum": [
                            "time",
                            "generated",
                            "type"
                        ],
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Only list reports matching this source.",
                        "enum": [
                            "manual",
                            "scheduled",
                            "all"
                        ],
                        "in": "query",
                        "name": "generated",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Only list reports matching this type.",
                        "enum": [
                            "summary",
                            "detail",
                            "all"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching reports.",
                        "schema": {
                            "$ref": "#/definitions/QuotaReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new report. The type of this report is 'manual'; it is also sometimes called 'live' or 'ad-hoc'.",
                "operationId": "createQuotaReport",
                "parameters": [
                    {
                        "in": "body",
                        "name": "QuotaReport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new report. The type of this report is 'manual'; it is also sometimes called 'live' or 'ad-hoc'.",
                        "schema": {
                            "$ref": "#/definitions/CreateFooPeopleItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/reports/{QuotaReportId}": {
            "delete": {
                "description": "Delete the report.",
                "operationId": "deleteQuotaReport",
                "parameters": [
                    {
                        "description": "Delete the report.",
                        "in": "path",
                        "name": "QuotaReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve report data (XML) or contents (meta-data).",
                "operationId": "getQuotaReport",
                "parameters": [
                    {
                        "description": "Display JSON meta-data contents instead of report data.",
                        "in": "query",
                        "name": "contents",
                        "type": "boolean"
                    },
                    {
                        "description": "Retrieve report data (XML) or contents (meta-data).",
                        "in": "path",
                        "name": "QuotaReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve report data (XML) or contents (meta-data).",
                        "schema": {
                            "$ref": "#/definitions/ReportsRidAbout"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/reports/{Rid}/about": {
            "get": {
                "description": "Retrieve report meta-data information.",
                "operationId": "getReportsRidAbout",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve report meta-data information.",
                        "schema": {
                            "$ref": "#/definitions/ReportsRidAbout"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/mappings": {
            "delete": {
                "description": "Delete all rules.",
                "operationId": "deleteSettingsMappings",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "List all rules.",
                "operationId": "listSettingsMappings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all rules.",
                        "schema": {
                            "$ref": "#/definitions/SettingsMappings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new rule. The new rule must not conflict with an existing rule (e.g. match both the type and domain fields).",
                "operationId": "createSettingsMapping",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsMapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsMappingCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new rule. The new rule must not conflict with an existing rule (e.g. match both the type and domain fields).",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/mappings/{SettingsMappingId}": {
            "delete": {
                "description": "Delete the mapping.",
                "operationId": "deleteSettingsMapping",
                "parameters": [
                    {
                        "description": "Delete the mapping.",
                        "in": "path",
                        "name": "SettingsMappingId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve the mapping information.",
                "operationId": "getSettingsMapping",
                "parameters": [
                    {
                        "description": "Retrieve the mapping information.",
                        "in": "path",
                        "name": "SettingsMappingId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the mapping information.",
                        "schema": {
                            "$ref": "#/definitions/SettingsMappings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify the mapping.",
                "operationId": "updateSettingsMapping",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsMapping",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsMappingExtended"
                        }
                    },
                    {
                        "description": "Modify the mapping.",
                        "in": "path",
                        "name": "SettingsMappingId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/notifications": {
            "delete": {
                "description": "Delete all rules.",
                "operationId": "deleteSettingsNotifications",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "List all rules.",
                "operationId": "listSettingsNotifications",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all rules.",
                        "schema": {
                            "$ref": "#/definitions/SettingsNotifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "post": {
                "description": "Create a new global notification rule.",
                "operationId": "createSettingsNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsNotification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new global notification rule.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/notifications/{SettingsNotificationId}": {
            "delete": {
                "description": "Delete the notification rule.",
                "operationId": "deleteSettingsNotification",
                "parameters": [
                    {
                        "description": "Delete the notification rule.",
                        "in": "path",
                        "name": "SettingsNotificationId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "get": {
                "description": "Retrieve notification rule information.",
                "operationId": "getSettingsNotification",
                "parameters": [
                    {
                        "description": "Retrieve notification rule information.",
                        "in": "path",
                        "name": "SettingsNotificationId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve notification rule information.",
                        "schema": {
                            "$ref": "#/definitions/QuotasQidNotifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify notification rule. All input fields are optional, but one or must be supplied.",
                "operationId": "updateSettingsNotification",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsNotification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuotasQidNotification"
                        }
                    },
                    {
                        "description": "Modify notification rule. All input fields are optional, but one or must be supplied.",
                        "in": "path",
                        "name": "SettingsNotificationId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/quota/settings/reports": {
            "get": {
                "description": "List all settings.",
                "operationId": "getSettingsReports",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateSettingsReports",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsReports",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsReportsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Quota"
                ]
            }
        },
        "/platform/1/remotesupport/connectemc": {
            "get": {
                "description": "List all settings.",
                "operationId": "getRemotesupportConnectemc",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/RemotesupportConnectemc"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Remotesupport"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateRemotesupportConnectemc",
                "parameters": [
                    {
                        "in": "body",
                        "name": "RemotesupportConnectemc",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RemotesupportConnectemcConnectemc"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Remotesupport"
                ]
            }
        },
        "/platform/1/snapshot/aliases": {
            "delete": {
                "description": "Delete all or matching snapshot aliases.",
                "operationId": "deleteSnapshotAliases",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "List all or matching snapshot aliases.",
                "operationId": "listSnapshotAliases",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.  Choices are id, name, snapshot, and created.  Default is id.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching snapshot aliases.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotAliasesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new snapshot alias.",
                "operationId": "createSnapshotAliase",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotAliase",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotAliaseCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new snapshot alias.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotAliaseResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/aliases/{SnapshotAliaseId}": {
            "delete": {
                "description": "Delete the snapshot alias",
                "operationId": "deleteSnapshotAliase",
                "parameters": [
                    {
                        "description": "Delete the snapshot alias",
                        "in": "path",
                        "name": "SnapshotAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve snapshot alias information.",
                "operationId": "getSnapshotAliase",
                "parameters": [
                    {
                        "description": "Retrieve snapshot alias information.",
                        "in": "path",
                        "name": "SnapshotAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve snapshot alias information.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotAliases"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify snapshot alias. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnapshotAliase",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotAliase",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotAliase"
                        }
                    },
                    {
                        "description": "Modify snapshot alias. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "SnapshotAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/changelists": {
            "get": {
                "description": "List all changelists.",
                "operationId": "listSnapshotChangelists",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all changelists.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotChangelistsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new changelist.",
                "operationId": "createSnapshotChangelist",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotChangelist",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotChangelists"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new changelist.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotChangelistResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/changelists/{Changelist}/lins": {
            "get": {
                "description": "Get entries from a changelist.",
                "operationId": "getChangelistsChangelistLins",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Changelist",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get entries from a changelist.",
                        "schema": {
                            "$ref": "#/definitions/ChangelistsChangelistLinsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/changelists/{Changelist}/lins/{ChangelistsChangelistLinId}": {
            "get": {
                "description": "Get a single entry from the changelist.",
                "operationId": "getChangelistsChangelistLin",
                "parameters": [
                    {
                        "description": "Get a single entry from the changelist.",
                        "in": "path",
                        "name": "ChangelistsChangelistLinId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Changelist",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a single entry from the changelist.",
                        "schema": {
                            "$ref": "#/definitions/ChangelistsChangelistLins"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/changelists/{SnapshotChangelistId}": {
            "delete": {
                "description": "Delete the specified changelist.",
                "operationId": "deleteSnapshotChangelist",
                "parameters": [
                    {
                        "description": "Delete the specified changelist.",
                        "in": "path",
                        "name": "SnapshotChangelistId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve basic information on a changelist.",
                "operationId": "getSnapshotChangelist",
                "parameters": [
                    {
                        "description": "Retrieve basic information on a changelist.",
                        "in": "path",
                        "name": "SnapshotChangelistId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve basic information on a changelist.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotChangelists"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/license": {
            "get": {
                "description": "Retrieve license information.",
                "operationId": "getSnapshotLicense",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve license information.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicense"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/pending": {
            "get": {
                "description": "Return list of snapshots to be taken.",
                "operationId": "getSnapshotPending",
                "parameters": [
                    {
                        "description": "Return no more than this many result at once (see resume).",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Unix Epoch time to start generating matches. Default is now.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Limit output only to the named schedule.",
                        "in": "query",
                        "name": "schedule",
                        "type": "string"
                    },
                    {
                        "description": "Unix Epoch time to end generating matches. Default is forever.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return list of snapshots to be taken.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotPending"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/repstates": {
            "get": {
                "description": "List all repstates.",
                "operationId": "listSnapshotRepstates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all repstates.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotRepstatesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new repstates.",
                "operationId": "createSnapshotRepstate",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotRepstate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotRepstates"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new repstates.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotRepstateResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/repstates/{SnapshotRepstateId}": {
            "delete": {
                "description": "Delete the specified repstate.",
                "operationId": "deleteSnapshotRepstate",
                "parameters": [
                    {
                        "description": "Delete the specified repstate.",
                        "in": "path",
                        "name": "SnapshotRepstateId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve basic information on a repstate.",
                "operationId": "getSnapshotRepstate",
                "parameters": [
                    {
                        "description": "Retrieve basic information on a repstate.",
                        "in": "path",
                        "name": "SnapshotRepstateId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve basic information on a repstate.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotRepstates"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/settings": {
            "get": {
                "description": "List all settings",
                "operationId": "getSnapshotSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateSnapshotSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/snapshots": {
            "delete": {
                "description": "Delete all or matching snapshots.",
                "operationId": "deleteSnapshotSnapshots",
                "parameters": [
                    {
                        "description": "Only list snapshots matching this type.",
                        "enum": [
                            "all",
                            "alias",
                            "real"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "Only list snapshots created by this schedule.",
                        "in": "query",
                        "name": "schedule",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "List all or matching snapshots.",
                "operationId": "listSnapshotSnapshots",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.  Choices are id, name, path, created, expires, size, has_locks, schedule, alias_target, alias_target_name, pct_filesystem, pct_reserve, and state.  Default is id.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Only list snapshots created by this schedule.",
                        "in": "query",
                        "name": "schedule",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Only list snapshots matching this state.",
                        "enum": [
                            "all",
                            "active",
                            "deleting"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Only list snapshots matching this type.",
                        "enum": [
                            "all",
                            "alias",
                            "real"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching snapshots.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshotsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new snapshot.",
                "operationId": "createSnapshotSnapshot",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSnapshot",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshotCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new snapshot.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotSnapshotResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/snapshots-summary": {
            "get": {
                "description": "Return summary information about snapshots.",
                "operationId": "getSnapshotSnapshotsSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Return summary information about snapshots.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshotsSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/snapshots/{Sid}/locks": {
            "delete": {
                "description": "Delete all locks. Will try to drain count of recursively held locks so that the snapshot can be deleted.",
                "operationId": "deleteSnapshotsSidLocks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "List all locks.",
                "operationId": "listSnapshotsSidLocks",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.  Choices are id, expires, and comment.  Default is id.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all locks.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotsSidLocksExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new lock on this snapshot.",
                "operationId": "createSnapshotsSidLock",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotsSidLock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotsSidLockCreateParams"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new lock on this snapshot.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotsSidLockResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/snapshots/{Sid}/locks/{SnapshotsSidLockId}": {
            "delete": {
                "description": "Delete the snapshot lock.",
                "operationId": "deleteSnapshotsSidLock",
                "parameters": [
                    {
                        "description": "Delete the snapshot lock.",
                        "in": "path",
                        "name": "SnapshotsSidLockId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve lock information.",
                "operationId": "getSnapshotsSidLock",
                "parameters": [
                    {
                        "description": "Retrieve lock information.",
                        "in": "path",
                        "name": "SnapshotsSidLockId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve lock information.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotsSidLocks"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify lock. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnapshotsSidLock",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotsSidLock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotsSidLock"
                        }
                    },
                    {
                        "description": "Modify lock. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "SnapshotsSidLockId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Sid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/snapshot/snapshots/{SnapshotSnapshotId}": {
            "delete": {
                "description": "Delete the snapshot. Deleted snapshots will be placed into a deleting state until the system can reclaim the space used by the snapshot.",
                "operationId": "deleteSnapshotSnapshot",
                "parameters": [
                    {
                        "description": "Delete the snapshot. Deleted snapshots will be placed into a deleting state until the system can reclaim the space used by the snapshot.",
                        "in": "path",
                        "name": "SnapshotSnapshotId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve snapshot information.",
                "operationId": "getSnapshotSnapshot",
                "parameters": [
                    {
                        "description": "Retrieve snapshot information.",
                        "in": "path",
                        "name": "SnapshotSnapshotId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve snapshot information.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshots"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify snapshot. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnapshotSnapshot",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSnapshot",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSnapshot"
                        }
                    },
                    {
                        "description": "Modify snapshot. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "SnapshotSnapshotId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/1/statistics/current": {
            "get": {
                "description": "Retrieve stats.",
                "operationId": "getStatisticsCurrent",
                "parameters": [
                    {
                        "description": "Time in seconds to wait for results from remote nodes.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    },
                    {
                        "description": "Multiple key names. May request matching keys or request 'all' keys. Can be comma separated list or can be used more than one time to make queries for multiple keys. May be used in conjunction with 'substr'. Also works with 'key' arguments.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "keys",
                        "type": "array"
                    },
                    {
                        "description": "Node devid to query. Either an <integer> or \"all\". Can be used more than one time to query multiple nodes. \"all\" queries all up nodes. 0 means query the local node. For \"cluster\" scoped keys, in any devid including 0 can be used.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "devid",
                        "type": "array"
                    },
                    {
                        "description": "Used in conjunction with the 'keys' argument, alters the behavior of keys. Makes the 'keys' arg perform a partial match. Defaults to false.",
                        "in": "query",
                        "name": "substr",
                        "type": "boolean"
                    },
                    {
                        "description": "One key name. Can be used more than one time to query multiple keys. Also works with 'keys' arguments.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "key",
                        "type": "array"
                    },
                    {
                        "description": "If true, try to continue even if some stats are unavailable. In this case, errors will be present in the per-key returned data.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    },
                    {
                        "description": "If true, use name resolution to expand client addresses and other IDs.",
                        "in": "query",
                        "name": "expand_clientid",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve stats.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsCurrent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/statistics/history": {
            "get": {
                "description": "Retrieve stats.",
                "operationId": "getStatisticsHistory",
                "parameters": [
                    {
                        "description": "Earliest time (Unix epoch seconds) of interest. Negative times are interpreted as relative (before) now.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Minimum sampling interval time in seconds. If native statistics are higher resolution, data will be down-sampled.",
                        "in": "query",
                        "name": "interval",
                        "type": "integer"
                    },
                    {
                        "description": "Latest time (Unix epoch seconds) of interest. Negative times are interpreted as relative (before) now. If not supplied, use now as the end time.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Time in seconds to wait for results from remote nodes.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    },
                    {
                        "description": "Used in conjunction with the 'keys' argument, alters the behavior of keys. Makes the 'keys' arg perform a partial match. Defaults to false.",
                        "in": "query",
                        "name": "substr",
                        "type": "boolean"
                    },
                    {
                        "description": "Multiple key names. May request matching keys or request 'all' keys. Can be comma separated list or can be used more than one time to make queries for multiple keys. May be used in conjunction with 'substr'. Also works with 'key' arguments.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "keys",
                        "type": "array"
                    },
                    {
                        "description": "Node devid to query. Either an <integer> or \"all\". Can be used more than one time to query multiple nodes. \"all\" queries all up nodes. 0 means query the local node. For \"cluster\" scoped keys, in any devid including 0 can be used.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "devid",
                        "type": "array"
                    },
                    {
                        "description": "Only use statistics sources that reside in memory (faster, but with less retention).",
                        "in": "query",
                        "name": "memory_only",
                        "type": "boolean"
                    },
                    {
                        "description": "One key name. Can be used more than one time to query multiple keys. Also works with 'keys' arguments.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "key",
                        "type": "array"
                    },
                    {
                        "description": "If true, try to continue even if some stats are unavailable. In this case, errors will be present in the per-key returned data.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    },
                    {
                        "description": "Synonymous with 'interval', if supplied supersedes interval.",
                        "in": "query",
                        "name": "resolution",
                        "type": "integer"
                    },
                    {
                        "description": "If true, use name resolution to expand client addresses and other IDs.",
                        "in": "query",
                        "name": "expand_clientid",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve stats.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsHistory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/statistics/keys": {
            "get": {
                "description": "List meta-data for matching keys.",
                "operationId": "getStatisticsKeys",
                "parameters": [
                    {
                        "description": "Only count matching keys, do not return meta-data.",
                        "in": "query",
                        "name": "count",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Only list keys that can/cannot be queries. Default is true.",
                        "in": "query",
                        "name": "queryable",
                        "type": "boolean"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List meta-data for matching keys.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsKeysExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/statistics/keys/{StatisticsKeyId}": {
            "get": {
                "description": "List key meta-data.",
                "operationId": "getStatisticsKey",
                "parameters": [
                    {
                        "description": "List key meta-data.",
                        "in": "path",
                        "name": "StatisticsKeyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List key meta-data.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsKeys"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/statistics/protocols": {
            "get": {
                "description": "Retrieve protocol list.",
                "operationId": "getStatisticsProtocols",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve protocol list.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsProtocols"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/class/active": {
            "get": {
                "description": "Get a list of active compatibilities",
                "operationId": "listCompatibilitiesClassActive",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a list of active compatibilities",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesClassActiveExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "post": {
                "description": "Create a new compatibility",
                "operationId": "createCompatibilitiesClassActiveItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CompatibilitiesClassActiveItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesClassActiveItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new compatibility",
                        "schema": {
                            "$ref": "#/definitions/CreateCompatibilitiesClassActiveItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/class/active/{CompatibilitiesClassActiveId}": {
            "delete": {
                "description": "Delete an active compatibility by id",
                "operationId": "deleteCompatibilitiesClassActiveId",
                "parameters": [
                    {
                        "description": "Delete an active compatibility by id",
                        "in": "path",
                        "name": "CompatibilitiesClassActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "Get an active compatibilities by id",
                "operationId": "getCompatibilitiesClassActiveId",
                "parameters": [
                    {
                        "description": "Get an active compatibilities by id",
                        "in": "path",
                        "name": "CompatibilitiesClassActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get an active compatibilities by id",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesClassActive"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/class/available": {
            "get": {
                "description": "Get a list of available compatibilities",
                "operationId": "getCompatibilitiesClassAvailable",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a list of available compatibilities",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesClassAvailable"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/compatibilities/ssd/available": {
            "get": {
                "description": "Get a list of available ssd compatibilities",
                "operationId": "getCompatibilitiesSsdAvailable",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a list of available ssd compatibilities",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdAvailable"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/settings": {
            "get": {
                "description": "List all settings.",
                "operationId": "getStoragepoolSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateStoragepoolSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/status": {
            "get": {
                "description": "List any health conditions detected.",
                "operationId": "getStoragepoolStatus",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List any health conditions detected.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/suggested_protection/{StoragepoolSuggestedProtectionNid}": {
            "get": {
                "description": "Retrieve the suggested protection policy.",
                "operationId": "getStoragepoolSuggestedProtectionNid",
                "parameters": [
                    {
                        "description": "Retrieve the suggested protection policy.",
                        "in": "path",
                        "name": "StoragepoolSuggestedProtectionNid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the suggested protection policy.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolSuggestedProtection"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/tiers": {
            "delete": {
                "description": "Delete all tiers.",
                "operationId": "deleteStoragepoolTiers",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "List all tiers.",
                "operationId": "listStoragepoolTiers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all tiers.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolTiersExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "post": {
                "description": "Create a new tier.",
                "operationId": "createStoragepoolTier",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolTier",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolTierCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new tier.",
                        "schema": {
                            "$ref": "#/definitions/CreateStoragepoolTierResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/tiers/{StoragepoolTierId}": {
            "delete": {
                "description": "Delete tier.",
                "operationId": "deleteStoragepoolTier",
                "parameters": [
                    {
                        "description": "Delete tier.",
                        "in": "path",
                        "name": "StoragepoolTierId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "Retrieve tier information.",
                "operationId": "getStoragepoolTier",
                "parameters": [
                    {
                        "description": "Retrieve tier information.",
                        "in": "path",
                        "name": "StoragepoolTierId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve tier information.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolTiers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "put": {
                "description": "Modify tier. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateStoragepoolTier",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolTier",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolTier"
                        }
                    },
                    {
                        "description": "Modify tier. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "StoragepoolTierId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/storagepool/unprovisioned": {
            "get": {
                "description": "Get the unprovisioned nodes and drives",
                "operationId": "getStoragepoolUnprovisioned",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the unprovisioned nodes and drives",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolUnprovisioned"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/1/sync/history/file": {
            "get": {
                "description": "List file operations performance data.",
                "operationId": "getHistoryFile",
                "parameters": [
                    {
                        "description": "Begin timestamp for time-series report.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "End timestamp for time-series report.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List file operations performance data.",
                        "schema": {
                            "$ref": "#/definitions/HistoryFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/history/network": {
            "get": {
                "description": "List network operations performance data.",
                "operationId": "getHistoryNetwork",
                "parameters": [
                    {
                        "description": "Begin timestamp for time-series report.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "End timestamp for time-series report.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List network operations performance data.",
                        "schema": {
                            "$ref": "#/definitions/HistoryFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/license": {
            "get": {
                "description": "Retrieve license information.",
                "operationId": "getSyncLicense",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve license information.",
                        "schema": {
                            "$ref": "#/definitions/LicenseLicense"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/policies/{Policy}/reset": {
            "post": {
                "description": "Reset a SyncIQ policy incremental state and force a full sync/copy.",
                "operationId": "createPoliciesPolicyResetItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "PoliciesPolicyResetItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Policy",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reset a SyncIQ policy incremental state and force a full sync/copy.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/reports": {
            "get": {
                "description": "Get a list of SyncIQ reports.  By default 10 reports are returned per policy, unless otherwise specified by 'reports_per_policy'.",
                "operationId": "getSyncReports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs started more recently than the specified number of days ago.",
                        "in": "query",
                        "name": "newer_than",
                        "type": "integer"
                    },
                    {
                        "description": "Filter the returned reports to include only those with this policy name.",
                        "in": "query",
                        "name": "policy_name",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs are in this state.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "skipped",
                            "pending",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified, only the N most recent reports will be returned per policy.  If no other query args are present this argument defaults to 10. ",
                        "in": "query",
                        "name": "reports_per_policy",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ reports.  By default 10 reports are returned per policy, unless otherwise specified by 'reports_per_policy'.",
                        "schema": {
                            "$ref": "#/definitions/SyncReportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/reports-rotate": {
            "get": {
                "description": "Whether the rotation is still running or not.",
                "operationId": "listSyncReportsRotate",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Whether the rotation is still running or not.",
                        "schema": {
                            "$ref": "#/definitions/SyncReportsRotate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "post": {
                "description": "Rotate the records in the database(s).",
                "operationId": "createSyncReportsRotateItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncReportsRotateItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rotate the records in the database(s).",
                        "schema": {
                            "$ref": "#/definitions/CreateSyncReportsRotateItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/reports/{Rid}/subreports": {
            "get": {
                "description": "Get a list of SyncIQ subreports for a report.",
                "operationId": "getReportsRidSubreports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs started more recently than the specified number of days ago.",
                        "in": "query",
                        "name": "newer_than",
                        "type": "integer"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs are in this state.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "skipped",
                            "pending",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ subreports for a report.",
                        "schema": {
                            "$ref": "#/definitions/ReportsRidSubreportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/reports/{Rid}/subreports/{ReportsRidSubreportId}": {
            "get": {
                "description": "View a single SyncIQ subreport.",
                "operationId": "getReportsRidSubreport",
                "parameters": [
                    {
                        "description": "View a single SyncIQ subreport.",
                        "in": "path",
                        "name": "ReportsRidSubreportId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ subreport.",
                        "schema": {
                            "$ref": "#/definitions/ReportsRidSubreports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/reports/{SyncReportId}": {
            "get": {
                "description": "View a single SyncIQ report.",
                "operationId": "getSyncReport",
                "parameters": [
                    {
                        "description": "View a single SyncIQ report.",
                        "in": "path",
                        "name": "SyncReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ report.",
                        "schema": {
                            "$ref": "#/definitions/SyncReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/policies": {
            "get": {
                "description": "List all SyncIQ target policies.",
                "operationId": "getTargetPolicies",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned policies to include only those with this target path.",
                        "in": "query",
                        "name": "target_path",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all SyncIQ target policies.",
                        "schema": {
                            "$ref": "#/definitions/TargetPoliciesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/policies/{Policy}/cancel": {
            "post": {
                "description": "Cancel the most recent SyncIQ job for this policy from the target side.",
                "operationId": "createTargetPoliciesPolicyCancelItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "TargetPoliciesPolicyCancelItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Policy",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cancel the most recent SyncIQ job for this policy from the target side.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/policies/{TargetPolicyId}": {
            "delete": {
                "description": "Break the target association with this cluster for this policy.",
                "operationId": "deleteTargetPolicy",
                "parameters": [
                    {
                        "description": "Ignore any running jobs when preparing to delete the policy target association.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Break the target association with this cluster for this policy.",
                        "in": "path",
                        "name": "TargetPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "View a single SyncIQ target policy.",
                "operationId": "getTargetPolicy",
                "parameters": [
                    {
                        "description": "View a single SyncIQ target policy.",
                        "in": "path",
                        "name": "TargetPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ target policy.",
                        "schema": {
                            "$ref": "#/definitions/TargetPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/reports": {
            "get": {
                "description": "Get a list of SyncIQ target reports.  By default 10 reports are returned per policy, unless otherwise specified by 'reports_per_policy'.",
                "operationId": "getTargetReports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs started more recently than the specified number of days ago.",
                        "in": "query",
                        "name": "newer_than",
                        "type": "integer"
                    },
                    {
                        "description": "Filter the returned reports to include only those with this policy name.",
                        "in": "query",
                        "name": "policy_name",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs are in this state.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "skipped",
                            "pending",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified, only the N most recent reports will be returned per policy.  If no other query args are present this argument defaults to 10. ",
                        "in": "query",
                        "name": "reports_per_policy",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ target reports.  By default 10 reports are returned per policy, unless otherwise specified by 'reports_per_policy'.",
                        "schema": {
                            "$ref": "#/definitions/TargetReportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/reports/{Rid}/subreports": {
            "get": {
                "description": "Get a list of SyncIQ target subreports for a report.",
                "operationId": "getTargetReportsRidSubreports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs started more recently than the specified number of days ago.",
                        "in": "query",
                        "name": "newer_than",
                        "type": "integer"
                    },
                    {
                        "description": "Filter the returned reports to include only those whose jobs are in this state.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "skipped",
                            "pending",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ target subreports for a report.",
                        "schema": {
                            "$ref": "#/definitions/TargetReportsRidSubreportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/reports/{Rid}/subreports/{TargetReportsRidSubreportId}": {
            "get": {
                "description": "View a single SyncIQ target subreport.",
                "operationId": "getTargetReportsRidSubreport",
                "parameters": [
                    {
                        "description": "View a single SyncIQ target subreport.",
                        "in": "path",
                        "name": "TargetReportsRidSubreportId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Rid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ target subreport.",
                        "schema": {
                            "$ref": "#/definitions/TargetReportsRidSubreports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/sync/target/reports/{TargetReportId}": {
            "get": {
                "description": "View a single SyncIQ target report.",
                "operationId": "getTargetReport",
                "parameters": [
                    {
                        "description": "View a single SyncIQ target report.",
                        "in": "path",
                        "name": "TargetReportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ target report.",
                        "schema": {
                            "$ref": "#/definitions/TargetReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/1/worm/domains": {
            "get": {
                "description": "List all WORM domains.",
                "operationId": "listWormDomains",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all WORM domains.",
                        "schema": {
                            "$ref": "#/definitions/WormDomainsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            },
            "post": {
                "description": "Create a WORM domain.",
                "operationId": "createWormDomain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "WormDomain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WormDomainCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a WORM domain.",
                        "schema": {
                            "$ref": "#/definitions/CreateWormDomainResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            }
        },
        "/platform/1/worm/domains/{WormDomainId}": {
            "get": {
                "description": "View a single WORM domain.",
                "operationId": "getWormDomain",
                "parameters": [
                    {
                        "description": "View a single WORM domain.",
                        "in": "path",
                        "name": "WormDomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single WORM domain.",
                        "schema": {
                            "$ref": "#/definitions/WormDomains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            },
            "put": {
                "description": "Modify a single WORM domain.",
                "operationId": "updateWormDomain",
                "parameters": [
                    {
                        "in": "body",
                        "name": "WormDomain",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WormDomain"
                        }
                    },
                    {
                        "description": "Modify a single WORM domain.",
                        "in": "path",
                        "name": "WormDomainId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Worm"
                ]
            }
        },
        "/platform/1/zones-summary": {
            "get": {
                "description": "Retrieve access zone summary information.",
                "operationId": "getZonesSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve access zone summary information.",
                        "schema": {
                            "$ref": "#/definitions/ZonesSummaryExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "ZonesSummary"
                ]
            }
        },
        "/platform/1/zones-summary/{ZonesSummaryZone}": {
            "get": {
                "description": "Retrieve non-privileged access zone information.",
                "operationId": "getZonesSummaryZone",
                "parameters": [
                    {
                        "description": "Retrieve non-privileged access zone information.",
                        "in": "path",
                        "name": "ZonesSummaryZone",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve non-privileged access zone information.",
                        "schema": {
                            "$ref": "#/definitions/ZonesSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "ZonesSummary"
                ]
            }
        },
        "/platform/2/protocols/nfs/aliases": {
            "get": {
                "description": "List all NFS aliases.",
                "operationId": "listNfsAliases",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Check for conflicts when listing exports.",
                        "in": "query",
                        "name": "check",
                        "type": "boolean"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NFS aliases.",
                        "schema": {
                            "$ref": "#/definitions/NfsAliasesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new NFS alias.",
                "operationId": "createNfsAliase",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsAliase",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsAliase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new NFS alias.",
                        "schema": {
                            "$ref": "#/definitions/CreateNfsAliaseResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/aliases/{NfsAliaseId}": {
            "delete": {
                "description": "Delete the export.",
                "operationId": "deleteNfsAliase",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete the export.",
                        "in": "path",
                        "name": "NfsAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve export information.",
                "operationId": "getNfsAliase",
                "parameters": [
                    {
                        "description": "If specified as effective or not specified, all export fields are shown.  If specified as user, only fields with non-default values are shown.",
                        "enum": [
                            "effective",
                            "user"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve export information.",
                        "in": "path",
                        "name": "NfsAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve export information.",
                        "schema": {
                            "$ref": "#/definitions/NfsAliases"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the alias. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNfsAliase",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsAliase",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsAliase"
                        }
                    },
                    {
                        "description": "Modify the alias. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "NfsAliaseId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/check": {
            "get": {
                "description": "Retrieve NFS export validation information.",
                "operationId": "getNfsCheck",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve NFS export validation information.",
                        "schema": {
                            "$ref": "#/definitions/NfsCheckExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/exports": {
            "get": {
                "description": "List all NFS exports.",
                "operationId": "listNfsExports",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified as effective or not specified, all export fields are shown.  If specified as user, only fields with non-default values are shown.",
                        "enum": [
                            "effective",
                            "user"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Check for conflicts when listing exports.",
                        "in": "query",
                        "name": "check",
                        "type": "boolean"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NFS exports.",
                        "schema": {
                            "$ref": "#/definitions/NfsExportsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new NFS export.",
                "operationId": "createNfsExport",
                "parameters": [
                    {
                        "description": "If true, the export will be created even if it conflicts with another export.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsExport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsExport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new NFS export.",
                        "schema": {
                            "$ref": "#/definitions/CreateFooPeopleItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/exports-summary": {
            "get": {
                "description": "Retrieve NFS export summary information.",
                "operationId": "getNfsExportsSummary",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve NFS export summary information.",
                        "schema": {
                            "$ref": "#/definitions/NfsExportsSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/exports/{NfsExportId}": {
            "delete": {
                "description": "Delete the export.",
                "operationId": "deleteNfsExport",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Delete the export.",
                        "in": "path",
                        "name": "NfsExportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve export information.",
                "operationId": "getNfsExport",
                "parameters": [
                    {
                        "description": "If specified as effective or not specified, all export fields are shown.  If specified as user, only fields with non-default values are shown.",
                        "enum": [
                            "effective",
                            "user"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve export information.",
                        "in": "path",
                        "name": "NfsExportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve export information.",
                        "schema": {
                            "$ref": "#/definitions/NfsExports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the export. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNfsExport",
                "parameters": [
                    {
                        "description": "If true, the export will be updated even if that change conflicts with another export.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsExport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsExport"
                        }
                    },
                    {
                        "description": "Modify the export. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "NfsExportId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/nlm/locks": {
            "get": {
                "description": "List all NLM locks.",
                "operationId": "getNfsNlmLocks",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NLM locks.",
                        "schema": {
                            "$ref": "#/definitions/NfsNlmLocks"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/nlm/waiters": {
            "get": {
                "description": "List all NLM lock waiters.",
                "operationId": "getNfsNlmWaiters",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NLM lock waiters.",
                        "schema": {
                            "$ref": "#/definitions/NfsNlmWaiters"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/reload": {
            "post": {
                "description": "Reload default NFS export configuration.",
                "operationId": "createNfsReloadItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NfsReloadItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reload default NFS export configuration.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/settings/export": {
            "get": {
                "description": "Retrieve export information.",
                "operationId": "getNfsSettingsExport",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve export information.",
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsExport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the default values for NFS exports. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNfsSettingsExport",
                "parameters": [
                    {
                        "description": "Access zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsSettingsExport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsExportSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/2/protocols/nfs/settings/zone": {
            "get": {
                "description": "Retrieve the NFS server settings for this zone.",
                "operationId": "getNfsSettingsZone",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the NFS server settings for this zone.",
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsZone"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the NFS server settings for this zone.",
                "operationId": "updateNfsSettingsZone",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NfsSettingsZone",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsZoneSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/antivirus/policies": {
            "delete": {
                "description": "Delete all antivirus scan policies.",
                "operationId": "deleteAntivirusPolicies",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "get": {
                "description": "List antivirus scan policies.",
                "operationId": "listAntivirusPolicies",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List antivirus scan policies.",
                        "schema": {
                            "$ref": "#/definitions/AntivirusPoliciesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "post": {
                "description": "Create new antivirus scan policies.",
                "operationId": "createAntivirusPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AntivirusPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AntivirusPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create new antivirus scan policies.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/policies/{AntivirusPolicyId}": {
            "delete": {
                "description": "Delete an antivirus scan policy.",
                "operationId": "deleteAntivirusPolicy",
                "parameters": [
                    {
                        "description": "Delete an antivirus scan policy.",
                        "in": "path",
                        "name": "AntivirusPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "get": {
                "description": "Retrieve one antivirus scan policy.",
                "operationId": "getAntivirusPolicy",
                "parameters": [
                    {
                        "description": "Retrieve one antivirus scan policy.",
                        "in": "path",
                        "name": "AntivirusPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve one antivirus scan policy.",
                        "schema": {
                            "$ref": "#/definitions/AntivirusPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "put": {
                "description": "Modify an antivirus scan policy.",
                "operationId": "updateAntivirusPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AntivirusPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AntivirusPolicy"
                        }
                    },
                    {
                        "description": "Modify an antivirus scan policy.",
                        "in": "path",
                        "name": "AntivirusPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/quarantine/{AntivirusQuarantinePath}": {
            "get": {
                "description": "Retrieve the quarantine status of the file at the specified path.",
                "operationId": "getAntivirusQuarantinePath",
                "parameters": [
                    {
                        "description": "Retrieve the quarantine status of the file at the specified path.",
                        "in": "path",
                        "name": "AntivirusQuarantinePath",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the quarantine status of the file at the specified path.",
                        "schema": {
                            "$ref": "#/definitions/AntivirusQuarantine"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "put": {
                "description": "Set the quarantine status of the file at the specified path.  Use either an empty object {} in the request body or {\"quarantined\":true} to quarantine the file, and {\"quarantined\":false} to unquarantine the file.",
                "operationId": "updateAntivirusQuarantinePath",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AntivirusQuarantinePathParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AntivirusQuarantinePathParams"
                        }
                    },
                    {
                        "description": "Set the quarantine status of the file at the specified path.  Use either an empty object {} in the request body or {\"quarantined\":true} to quarantine the file, and {\"quarantined\":false} to unquarantine the file.",
                        "in": "path",
                        "name": "AntivirusQuarantinePath",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/reports/scans": {
            "delete": {
                "description": "Delete antivirus scan reports, and any threat reports associated with those scans.",
                "operationId": "deleteReportsScans",
                "parameters": [
                    {
                        "description": "An amount of time in seconds. If present, only reports older than this age are deleted.",
                        "in": "query",
                        "name": "age",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "get": {
                "description": "List antivirus scan reports.",
                "operationId": "getReportsScans",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "If present, only scan reports with this status will be returned.",
                        "enum": [
                            "Finish",
                            "Succeeded",
                            "Failed",
                            "Cancelled",
                            "Started",
                            "Paused",
                            "Resumed",
                            "Pending"
                        ],
                        "in": "query",
                        "name": "status",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "If present, only reports for scans associated with this policy will be returned.",
                        "in": "query",
                        "name": "policy_id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List antivirus scan reports.",
                        "schema": {
                            "$ref": "#/definitions/ReportsScansExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/reports/scans/{ReportsScanId}": {
            "delete": {
                "description": "Delete one antivirus scan report, and all of its associated threat reports.",
                "operationId": "deleteReportsScan",
                "parameters": [
                    {
                        "description": "Delete one antivirus scan report, and all of its associated threat reports.",
                        "in": "path",
                        "name": "ReportsScanId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "get": {
                "description": "Retrieve one antivirus scan report.",
                "operationId": "getReportsScan",
                "parameters": [
                    {
                        "description": "Retrieve one antivirus scan report.",
                        "in": "path",
                        "name": "ReportsScanId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve one antivirus scan report.",
                        "schema": {
                            "$ref": "#/definitions/ReportsScans"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/reports/threats": {
            "get": {
                "description": "List antivirus threat reports.",
                "operationId": "getReportsThreats",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "If present, only returns threat reports associated with the given scan report.",
                        "in": "query",
                        "name": "scan_id",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If present, only returns threat reports for the given file.",
                        "in": "query",
                        "name": "file",
                        "type": "string"
                    },
                    {
                        "description": "If present, only returns threat reports with the given remediation.",
                        "in": "query",
                        "name": "remediation",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List antivirus threat reports.",
                        "schema": {
                            "$ref": "#/definitions/ReportsThreatsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/reports/threats/{ReportsThreatId}": {
            "get": {
                "description": "Retrieve one antivirus threat report.",
                "operationId": "getReportsThreat",
                "parameters": [
                    {
                        "description": "Retrieve one antivirus threat report.",
                        "in": "path",
                        "name": "ReportsThreatId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve one antivirus threat report.",
                        "schema": {
                            "$ref": "#/definitions/ReportsThreats"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/scan": {
            "post": {
                "description": "Manually scan a file.",
                "operationId": "createAntivirusScanItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AntivirusScanItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AntivirusScanItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Manually scan a file.",
                        "schema": {
                            "$ref": "#/definitions/CreateAntivirusScanItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/servers": {
            "delete": {
                "description": "Delete all antivirus servers.",
                "operationId": "deleteAntivirusServers",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "get": {
                "description": "List antivirus servers.",
                "operationId": "listAntivirusServers",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List antivirus servers.",
                        "schema": {
                            "$ref": "#/definitions/AntivirusServersExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "post": {
                "description": "Create new antivirus servers.",
                "operationId": "createAntivirusServer",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AntivirusServer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AntivirusServer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create new antivirus servers.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/servers/{AntivirusServerId}": {
            "delete": {
                "description": "Delete an antivirus server entry.",
                "operationId": "deleteAntivirusServer",
                "parameters": [
                    {
                        "description": "Delete an antivirus server entry.",
                        "in": "path",
                        "name": "AntivirusServerId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "get": {
                "description": "Retrieve one antivirus server entry.",
                "operationId": "getAntivirusServer",
                "parameters": [
                    {
                        "description": "Retrieve one antivirus server entry.",
                        "in": "path",
                        "name": "AntivirusServerId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve one antivirus server entry.",
                        "schema": {
                            "$ref": "#/definitions/AntivirusServers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "put": {
                "description": "Modify an antivirus server entry.",
                "operationId": "updateAntivirusServer",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AntivirusServer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AntivirusServer"
                        }
                    },
                    {
                        "description": "Modify an antivirus server entry.",
                        "in": "path",
                        "name": "AntivirusServerId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/antivirus/settings": {
            "get": {
                "description": "Retrieve the Antivirus settings.",
                "operationId": "getAntivirusSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the Antivirus settings.",
                        "schema": {
                            "$ref": "#/definitions/AntivirusSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            },
            "put": {
                "description": "Modify the Antivirus settings. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateAntivirusSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AntivirusSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AntivirusSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Antivirus"
                ]
            }
        },
        "/platform/3/audit/settings": {
            "get": {
                "description": "View per-Access Zone Audit settings.",
                "operationId": "getAuditSettings",
                "parameters": [
                    {
                        "description": "Access zone which contains audit settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View per-Access Zone Audit settings.",
                        "schema": {
                            "$ref": "#/definitions/AuditSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "put": {
                "description": "Modify per-Access Zone Audit settings.",
                "operationId": "updateAuditSettings",
                "parameters": [
                    {
                        "description": "Access zone which contains audit settings.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "AuditSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuditSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            }
        },
        "/platform/3/audit/settings/global": {
            "get": {
                "description": "View Global Audit settings.",
                "operationId": "getSettingsGlobal",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View Global Audit settings.",
                        "schema": {
                            "$ref": "#/definitions/SettingsGlobalExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            },
            "put": {
                "description": "Modify Global Audit settings.",
                "operationId": "updateSettingsGlobal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsGlobal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsGlobalSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Audit"
                ]
            }
        },
        "/platform/3/auth/log-level": {
            "get": {
                "description": "Get the current authentications service and netlogon logging level.",
                "operationId": "getAuthLogLevel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the current authentications service and netlogon logging level.",
                        "schema": {
                            "$ref": "#/definitions/AuthLogLevel"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Set the current authentication service and netlogon logging level.",
                "operationId": "updateAuthLogLevel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuthLogLevel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthLogLevelExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/mapping/dump": {
            "get": {
                "description": "Retrieve all identity mappings (uid, gid, sid, and on-disk) for the supplied source persona.",
                "operationId": "getMappingDump",
                "parameters": [
                    {
                        "description": "Idmap should attempt to create missing identity mappings.",
                        "in": "query",
                        "name": "nocreate",
                        "type": "boolean"
                    },
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve all identity mappings (uid, gid, sid, and on-disk) for the supplied source persona.",
                        "schema": {
                            "$ref": "#/definitions/MappingDump"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/mapping/import": {
            "put": {
                "description": "Set or update a list of mappings between two personae.",
                "operationId": "updateMappingImport",
                "parameters": [
                    {
                        "description": "Optional zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Specify whether existing mappings should be replaced. The default behavior is to leave existing mappings intact and return an error.",
                        "in": "query",
                        "name": "replace",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "MappingImport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MappingImport"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/ads": {
            "get": {
                "description": "List all ADS providers.",
                "operationId": "listProvidersAds",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all ADS providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersAds"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new ADS provider.",
                "operationId": "createProvidersAd",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersAd",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersAdCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new ADS provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/ads/{Id}/domains": {
            "get": {
                "description": "List all ADS domains.",
                "operationId": "getProvidersAdsIdDomains",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all ADS domains.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersAdsIdDomains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/ads/{Id}/domains/{ProvidersAdsIdDomainId}": {
            "get": {
                "description": "Retrieve the ADS domain information.",
                "operationId": "getProvidersAdsIdDomain",
                "parameters": [
                    {
                        "description": "Retrieve the ADS domain information.",
                        "in": "path",
                        "name": "ProvidersAdsIdDomainId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the ADS domain information.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersAdsIdDomains"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/ads/{ProvidersAdId}": {
            "delete": {
                "description": "Delete the ADS provider.",
                "operationId": "deleteProvidersAd",
                "parameters": [
                    {
                        "description": "Delete the ADS provider.",
                        "in": "path",
                        "name": "ProvidersAdId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the ADS provider.",
                "operationId": "getProvidersAd",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the ADS provider.",
                        "in": "path",
                        "name": "ProvidersAdId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the ADS provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersAds"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the ADS provider.",
                "operationId": "updateProvidersAd",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersAd",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersAd"
                        }
                    },
                    {
                        "description": "Modify the ADS provider.",
                        "in": "path",
                        "name": "ProvidersAdId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/krb5": {
            "get": {
                "description": "List all KRB5 providers.",
                "operationId": "listProvidersKrb5",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all KRB5 providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersKrb5Extended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new KRB5 provider.",
                "operationId": "createProvidersKrb5Item",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersKrb5Item",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersKrb5Item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new KRB5 provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/krb5/{ProvidersKrb5Id}": {
            "delete": {
                "description": "Delete the KRB5 provider.",
                "operationId": "deleteProvidersKrb5Id",
                "parameters": [
                    {
                        "description": "Delete the KRB5 provider.",
                        "in": "path",
                        "name": "ProvidersKrb5Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the KRB5 provider.",
                "operationId": "getProvidersKrb5Id",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the KRB5 provider.",
                        "in": "path",
                        "name": "ProvidersKrb5Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the KRB5 provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersKrb5"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the KRB5 provider.",
                "operationId": "updateProvidersKrb5Id",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersKrb5IdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersKrb5IdParams"
                        }
                    },
                    {
                        "description": "Modify the KRB5 provider.",
                        "in": "path",
                        "name": "ProvidersKrb5Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/ldap": {
            "get": {
                "description": "List all LDAP providers.",
                "operationId": "listProvidersLdap",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all LDAP providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersLdap"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new LDAP provider.",
                "operationId": "createProvidersLdapItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersLdapItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersLdapItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new LDAP provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/ldap/{ProvidersLdapId}": {
            "delete": {
                "description": "Delete the LDAP provider.",
                "operationId": "deleteProvidersLdapId",
                "parameters": [
                    {
                        "description": "Delete the LDAP provider.",
                        "in": "path",
                        "name": "ProvidersLdapId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the LDAP provider.",
                "operationId": "getProvidersLdapId",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the LDAP provider.",
                        "in": "path",
                        "name": "ProvidersLdapId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the LDAP provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersLdap"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the LDAP provider.",
                "operationId": "updateProvidersLdapId",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersLdapIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersLdapIdParams"
                        }
                    },
                    {
                        "description": "Modify the LDAP provider.",
                        "in": "path",
                        "name": "ProvidersLdapId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/nis": {
            "get": {
                "description": "List all NIS providers.",
                "operationId": "listProvidersNis",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NIS providers.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersNis"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Create a new NIS provider.",
                "operationId": "createProvidersNi",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersNi",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersNiCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new NIS provider.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/nis/{ProvidersNiId}": {
            "delete": {
                "description": "Delete the NIS provider.",
                "operationId": "deleteProvidersNi",
                "parameters": [
                    {
                        "description": "Delete the NIS provider.",
                        "in": "path",
                        "name": "ProvidersNiId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "get": {
                "description": "Retrieve the NIS provider.",
                "operationId": "getProvidersNi",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve the NIS provider.",
                        "in": "path",
                        "name": "ProvidersNiId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the NIS provider.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersNis"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify the NIS provider.",
                "operationId": "updateProvidersNi",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ProvidersNi",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProvidersNi"
                        }
                    },
                    {
                        "description": "Modify the NIS provider.",
                        "in": "path",
                        "name": "ProvidersNiId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/providers/summary": {
            "get": {
                "description": "Retrieve the summary information.",
                "operationId": "getProvidersSummary",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the summary information.",
                        "schema": {
                            "$ref": "#/definitions/ProvidersSummary"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/refresh": {
            "post": {
                "description": "Refresh the authentication service configuration.",
                "operationId": "createAuthRefreshItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "AuthRefreshItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Refresh the authentication service configuration.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuthRefreshItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/settings/acls": {
            "get": {
                "description": "Retrieve the ACL policy settings and preset configurations.",
                "operationId": "getSettingsAcls",
                "parameters": [
                    {
                        "description": "If specified the preset configuration values for all applicable ACL policies are returned.",
                        "enum": [
                            "balanced",
                            "unix",
                            "windows"
                        ],
                        "in": "query",
                        "name": "preset",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the ACL policy settings and preset configurations.",
                        "schema": {
                            "$ref": "#/definitions/SettingsAcls"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "description": "Modify cluster ACL policy settings.",
                "operationId": "updateSettingsAcls",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsAcls",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsAclsAclPolicySettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/users/{User}/change-password": {
            "put": {
                "description": "Change the user's password.",
                "operationId": "updateUsersUserChangePassword",
                "parameters": [
                    {
                        "description": "Specifies access zone containing user.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "UsersUserChangePassword",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UsersUserChangePassword"
                        }
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/users/{User}/member-of": {
            "get": {
                "description": "List all groups the user is a member of.",
                "operationId": "listUsersUserMemberOf",
                "parameters": [
                    {
                        "description": "Resolve names of personas.",
                        "in": "query",
                        "name": "resolve_names",
                        "type": "boolean"
                    },
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all groups the user is a member of.",
                        "schema": {
                            "$ref": "#/definitions/UsersUserMemberOf"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "description": "Add the user to a group.",
                "operationId": "createUsersUserMemberOfItem",
                "parameters": [
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "UsersUserMemberOfItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupsGroupMember"
                        }
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add the user to a group.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/auth/users/{User}/member-of/{UsersUserMemberOfMemberOf}": {
            "delete": {
                "description": "Remove the user from the group.",
                "operationId": "deleteUsersUserMemberOfMemberOf",
                "parameters": [
                    {
                        "description": "Filter groups by zone.",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Filter groups by provider.",
                        "in": "query",
                        "name": "provider",
                        "type": "string"
                    },
                    {
                        "description": "Remove the user from the group.",
                        "in": "path",
                        "name": "UsersUserMemberOfMemberOf",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "User",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/platform/3/cloud/access/{CloudAccessGuid}": {
            "delete": {
                "description": "Delete cloud access.",
                "operationId": "deleteCloudAccessGuid",
                "parameters": [
                    {
                        "description": "Delete cloud access.",
                        "in": "path",
                        "name": "CloudAccessGuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "get": {
                "description": "Retrieve cloud access information.",
                "operationId": "getCloudAccessGuid",
                "parameters": [
                    {
                        "description": "Retrieve cloud access information.",
                        "in": "path",
                        "name": "CloudAccessGuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cloud access information.",
                        "schema": {
                            "$ref": "#/definitions/CloudAccess"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/3/cloud/accounts": {
            "get": {
                "description": "List all accounts.",
                "operationId": "listCloudAccounts",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all accounts.",
                        "schema": {
                            "$ref": "#/definitions/CloudAccountsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "post": {
                "description": "Create a new account.",
                "operationId": "createCloudAccount",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudAccount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccountCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new account.",
                        "schema": {
                            "$ref": "#/definitions/CreateCloudAccountResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/3/cloud/accounts/{CloudAccountId}": {
            "delete": {
                "description": "Delete cloud account.",
                "operationId": "deleteCloudAccount",
                "parameters": [
                    {
                        "description": "Delete cloud account.",
                        "in": "path",
                        "name": "CloudAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "get": {
                "description": "Retrieve cloud account information.",
                "operationId": "getCloudAccount",
                "parameters": [
                    {
                        "description": "Retrieve cloud account information.",
                        "in": "path",
                        "name": "CloudAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cloud account information.",
                        "schema": {
                            "$ref": "#/definitions/CloudAccounts"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "put": {
                "description": "Modify cloud account.  All fields are optional, but one or more must be supplied.",
                "operationId": "updateCloudAccount",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudAccount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudAccount"
                        }
                    },
                    {
                        "description": "Modify cloud account.  All fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "CloudAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/3/cloud/jobs-files/{CloudJobsFileId}": {
            "get": {
                "description": "Retrieve files associated with a cloudpool job.",
                "operationId": "getCloudJobsFile",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, only \"limit\" and \"page\" arguments are honored.  Query will return all results, unsorted, as quickly as possible.",
                        "in": "query",
                        "name": "batch",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Works only when \"batch\" parameter and \"limit\" parameters are specified.  Indicates which the page index of results to be returned",
                        "in": "query",
                        "name": "page",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve files associated with a cloudpool job.",
                        "in": "path",
                        "name": "CloudJobsFileId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve files associated with a cloudpool job.",
                        "schema": {
                            "$ref": "#/definitions/CloudJobsFiles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/3/cloud/pools": {
            "get": {
                "description": "List all pools.",
                "operationId": "listCloudPools",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all pools.",
                        "schema": {
                            "$ref": "#/definitions/CloudPoolsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "post": {
                "description": "Create a new pool.",
                "operationId": "createCloudPool",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudPool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPoolCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new pool.",
                        "schema": {
                            "$ref": "#/definitions/CreateCloudPoolResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/3/cloud/pools/{CloudPoolId}": {
            "delete": {
                "description": "Delete a cloud pool.",
                "operationId": "deleteCloudPool",
                "parameters": [
                    {
                        "description": "Delete a cloud pool.",
                        "in": "path",
                        "name": "CloudPoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "get": {
                "description": "Retrieve cloud pool information",
                "operationId": "getCloudPool",
                "parameters": [
                    {
                        "description": "Retrieve cloud pool information",
                        "in": "path",
                        "name": "CloudPoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cloud pool information",
                        "schema": {
                            "$ref": "#/definitions/CloudPools"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "put": {
                "description": "Modify a cloud pool.  All fields are optional, but one or more must be supplied.",
                "operationId": "updateCloudPool",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CloudPool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloudPool"
                        }
                    },
                    {
                        "description": "Modify a cloud pool.  All fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "CloudPoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/3/cloud/settings/reporting-eula": {
            "delete": {
                "description": "Revoke acceptance of telemetry collection EULA.",
                "operationId": "deleteSettingsReportingEula",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "get": {
                "description": "View telemetry collection EULA acceptance and content URI.",
                "operationId": "listSettingsReportingEula",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View telemetry collection EULA acceptance and content URI.",
                        "schema": {
                            "$ref": "#/definitions/SettingsReportingEulaItem"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            },
            "post": {
                "description": "Accept telemetry collection EULA.",
                "operationId": "createSettingsReportingEulaItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SettingsReportingEulaItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SettingsReportingEulaItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accept telemetry collection EULA.",
                        "schema": {
                            "$ref": "#/definitions/SettingsReportingEulaItem"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cloud"
                ]
            }
        },
        "/platform/3/cluster/add-node": {
            "post": {
                "description": "Serial number and arguments of node to add.",
                "operationId": "createClusterAddNodeItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterAddNodeItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterAddNodeItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Serial number and arguments of node to add.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/identity": {
            "get": {
                "description": "Retrieve the login information.",
                "operationId": "getClusterIdentity",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the login information.",
                        "schema": {
                            "$ref": "#/definitions/ClusterIdentity"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "put": {
                "description": "Modify the login information.",
                "operationId": "updateClusterIdentity",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterIdentity",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterIdentity"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes": {
            "get": {
                "description": "List the nodes on this cluster.",
                "operationId": "getClusterNodes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List the nodes on this cluster.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodes"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes-available": {
            "get": {
                "description": "List all nodes that are available to add to this cluster.",
                "operationId": "getClusterNodesAvailable",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all nodes that are available to add to this cluster.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodesAvailable"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{ClusterNodeId}": {
            "get": {
                "description": "Retrieve node information.",
                "operationId": "getClusterNode",
                "parameters": [
                    {
                        "description": "Retrieve node information.",
                        "in": "path",
                        "name": "ClusterNodeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node information.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodes"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "put": {
                "description": "Modify one or more node settings.",
                "operationId": "updateClusterNode",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterNode"
                        }
                    },
                    {
                        "description": "Modify one or more node settings.",
                        "in": "path",
                        "name": "ClusterNodeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives": {
            "get": {
                "description": "List the drives on this node.",
                "operationId": "getNodesLnnDrives",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List the drives on this node.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnDrives"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives-purposelist": {
            "get": {
                "description": "Lists the available purposes for drives in this node.",
                "operationId": "getNodesLnnDrivesPurposelist",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lists the available purposes for drives in this node.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnDrivesPurposelist"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{Driveid}/add": {
            "post": {
                "description": "Add a drive to a node.",
                "operationId": "createNodesLnnDrivesDriveidAddItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnDrivesDriveidAddItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add a drive to a node.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{Driveid}/firmware": {
            "get": {
                "description": "Retrieve drive firmware information.",
                "operationId": "getNodesLnnDrivesDriveidFirmware",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve drive firmware information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnDrivesDriveidFirmware"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{Driveid}/firmware/update": {
            "get": {
                "description": "Retrieve firmware update information.",
                "operationId": "listNodesLnnDrivesDriveidFirmwareUpdate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve firmware update information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnDrivesDriveidFirmwareUpdate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "post": {
                "description": "Start a drive firmware update.",
                "operationId": "createNodesLnnDrivesDriveidFirmwareUpdateItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnDrivesDriveidFirmwareUpdateItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NodesLnnDrivesDriveidFirmwareUpdateItem"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Start a drive firmware update.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{Driveid}/format": {
            "post": {
                "description": "Format a drive for use by OneFS.",
                "operationId": "createNodesLnnDrivesDriveidFormatItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnDrivesDriveidFormatItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NodesLnnDrivesDriveidFormatItem"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Format a drive for use by OneFS.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{Driveid}/purpose": {
            "post": {
                "description": "Assign a drive to a specific use case.",
                "operationId": "createNodesLnnDrivesDriveidPurposeItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnDrivesDriveidPurposeItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NodesLnnDrivesDriveidPurposeItem"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assign a drive to a specific use case.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{Driveid}/smartfail": {
            "post": {
                "description": "Remove a drive from use by OneFS.",
                "operationId": "createNodesLnnDrivesDriveidSmartfailItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnDrivesDriveidSmartfailItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Remove a drive from use by OneFS.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{Driveid}/stopfail": {
            "post": {
                "description": "Stop restriping from a smartfailing drive.",
                "operationId": "createNodesLnnDrivesDriveidStopfailItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnDrivesDriveidStopfailItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stop restriping from a smartfailing drive.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{Driveid}/suspend": {
            "post": {
                "description": "Temporarily remove a drive from use by OneFS.",
                "operationId": "createNodesLnnDrivesDriveidSuspendItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnDrivesDriveidSuspendItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "Driveid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Temporarily remove a drive from use by OneFS.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/drives/{NodesLnnDriveId}": {
            "get": {
                "description": "Retrieve drive information.",
                "operationId": "getNodesLnnDrive",
                "parameters": [
                    {
                        "description": "Retrieve drive information.",
                        "in": "path",
                        "name": "NodesLnnDriveId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve drive information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnDrives"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/hardware": {
            "get": {
                "description": "Retrieve node hardware identity information.",
                "operationId": "getNodesLnnHardware",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node hardware identity information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnHardware"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/partitions": {
            "get": {
                "description": "Retrieve node partition information.",
                "operationId": "getNodesLnnPartitions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node partition information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnPartitions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/reboot": {
            "post": {
                "description": "Reboot the node specified by <LNN>.",
                "operationId": "createNodesLnnRebootItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnRebootItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reboot the node specified by <LNN>.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/sensors": {
            "get": {
                "description": "Retrieve node sensor information.",
                "operationId": "getNodesLnnSensors",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node sensor information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnSensors"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/shutdown": {
            "post": {
                "description": "Shutdown the node specified by <LNN>.",
                "operationId": "createNodesLnnShutdownItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnShutdownItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shutdown the node specified by <LNN>.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/state": {
            "get": {
                "description": "Retrieve node state information.",
                "operationId": "getNodesLnnState",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node state information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnState"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/state/readonly": {
            "get": {
                "description": "Retrieve node readonly state information.",
                "operationId": "getNodesLnnStateReadonly",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node readonly state information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "put": {
                "description": "Modify one or more node readonly state settings.",
                "operationId": "updateNodesLnnStateReadonly",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnStateReadonly",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NodesLnnStateReadonlyExtended"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/state/servicelight": {
            "get": {
                "description": "Retrieve node service light state information.",
                "operationId": "getNodesLnnStateServicelight",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node service light state information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnStateServicelight"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "put": {
                "description": "Modify one or more node service light state settings.",
                "operationId": "updateNodesLnnStateServicelight",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnStateServicelight",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NodesLnnStateServicelightExtended"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/state/smartfail": {
            "get": {
                "description": "Retrieve node smartfail state information.",
                "operationId": "getNodesLnnStateSmartfail",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node smartfail state information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnStateSmartfail"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "put": {
                "description": "Modify smartfail state of the node.  Only the 'smartfailed' body member has any effect on node smartfail state.",
                "operationId": "updateNodesLnnStateSmartfail",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NodesLnnStateSmartfail",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NodesLnnStateSmartfailExtended"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/status": {
            "get": {
                "description": "Retrieve node status information.",
                "operationId": "getNodesLnnStatus",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node status information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/nodes/{Lnn}/status/batterystatus": {
            "get": {
                "description": "Retrieve node battery status information.",
                "operationId": "getNodesLnnStatusBatterystatus",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node battery status information.",
                        "schema": {
                            "$ref": "#/definitions/NodesLnnStatusBatterystatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/timezone/regions/{TimezoneRegionId}": {
            "get": {
                "description": "List timezone regions.",
                "operationId": "getTimezoneRegion",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Show all timezones within the region specified in the URI.",
                        "in": "query",
                        "name": "show_all",
                        "type": "boolean"
                    },
                    {
                        "description": "This query arg is not needed in normal use cases.",
                        "in": "query",
                        "name": "dst_reset",
                        "type": "boolean"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "List timezone regions.",
                        "in": "path",
                        "name": "TimezoneRegionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List timezone regions.",
                        "schema": {
                            "$ref": "#/definitions/TimezoneRegions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/cluster/timezone/settings": {
            "get": {
                "description": "Retrieve the cluster timezone.",
                "operationId": "getTimezoneSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the cluster timezone.",
                        "schema": {
                            "$ref": "#/definitions/TimezoneSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            },
            "put": {
                "description": "Modify the cluster timezone.",
                "operationId": "updateTimezoneSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "TimezoneSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimezoneRegionTimezone"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Cluster"
                ]
            }
        },
        "/platform/3/event/alert-conditions": {
            "delete": {
                "description": "Bulk delete of alert conditions.",
                "operationId": "deleteEventAlertConditions",
                "parameters": [
                    {
                        "description": "Delete only conditions for this channel",
                        "in": "query",
                        "name": "channel`",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "get": {
                "description": "List all alert conditions.",
                "operationId": "listEventAlertConditions",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return only conditions for the specified channel:",
                        "in": "query",
                        "name": "channel_ids",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all alert conditions.",
                        "schema": {
                            "$ref": "#/definitions/EventAlertConditionsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "post": {
                "description": "Create a new alert condition.",
                "operationId": "createEventAlertCondition",
                "parameters": [
                    {
                        "in": "body",
                        "name": "EventAlertCondition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventAlertConditionsAlert-Condition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new alert condition.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/alert-conditions/{EventAlertConditionId}": {
            "delete": {
                "description": "Delete the alert-condition.",
                "operationId": "deleteEventAlertCondition",
                "parameters": [
                    {
                        "description": "Delete the alert-condition.",
                        "in": "path",
                        "name": "EventAlertConditionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "get": {
                "description": "Retrieve the alert-condition.",
                "operationId": "getEventAlertCondition",
                "parameters": [
                    {
                        "description": "Retrieve the alert-condition.",
                        "in": "path",
                        "name": "EventAlertConditionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the alert-condition.",
                        "schema": {
                            "$ref": "#/definitions/EventAlertConditions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "put": {
                "description": "Modify the alert-condition",
                "operationId": "updateEventAlertCondition",
                "parameters": [
                    {
                        "in": "body",
                        "name": "EventAlertCondition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventAlertCondition"
                        }
                    },
                    {
                        "description": "Modify the alert-condition",
                        "in": "path",
                        "name": "EventAlertConditionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/categories": {
            "get": {
                "description": "List all eventgroup categories.",
                "operationId": "getEventCategories",
                "parameters": [
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all eventgroup categories.",
                        "schema": {
                            "$ref": "#/definitions/EventCategoriesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/categories/{EventCategoryId}": {
            "get": {
                "description": "Retrieve the eventgroup category.",
                "operationId": "getEventCategory",
                "parameters": [
                    {
                        "description": "Retrieve the eventgroup category.",
                        "in": "path",
                        "name": "EventCategoryId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the eventgroup category.",
                        "schema": {
                            "$ref": "#/definitions/EventCategories"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/channels": {
            "get": {
                "description": "List all channels.",
                "operationId": "listEventChannels",
                "parameters": [
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all channels.",
                        "schema": {
                            "$ref": "#/definitions/EventChannelsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "post": {
                "description": "Create a new channel.",
                "operationId": "createEventChannel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "EventChannel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventChannelsAlert-Condition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new channel.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/channels/{EventChannelId}": {
            "delete": {
                "description": "Delete the alert-condition.",
                "operationId": "deleteEventChannel",
                "parameters": [
                    {
                        "description": "Delete the alert-condition.",
                        "in": "path",
                        "name": "EventChannelId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "get": {
                "description": "Retrieve the alert-condition.",
                "operationId": "getEventChannel",
                "parameters": [
                    {
                        "description": "Retrieve the alert-condition.",
                        "in": "path",
                        "name": "EventChannelId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the alert-condition.",
                        "schema": {
                            "$ref": "#/definitions/EventChannels"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "put": {
                "description": "Modify the alert-condition",
                "operationId": "updateEventChannel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "EventChannel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventChannel"
                        }
                    },
                    {
                        "description": "Modify the alert-condition",
                        "in": "path",
                        "name": "EventChannelId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/eventgroup-definitions": {
            "get": {
                "description": "List all eventgroup definitions.",
                "operationId": "getEventEventgroupDefinitions",
                "parameters": [
                    {
                        "description": "Return eventgroups in the specified category",
                        "in": "query",
                        "name": "category",
                        "type": "integer"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all eventgroup definitions.",
                        "schema": {
                            "$ref": "#/definitions/EventEventgroupDefinitionsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/eventgroup-definitions/{EventEventgroupDefinitionId}": {
            "get": {
                "description": "Retrieve the eventgroup definition.",
                "operationId": "getEventEventgroupDefinition",
                "parameters": [
                    {
                        "description": "Retrieve the eventgroup definition.",
                        "in": "path",
                        "name": "EventEventgroupDefinitionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the eventgroup definition.",
                        "schema": {
                            "$ref": "#/definitions/EventEventgroupDefinitions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/events": {
            "post": {
                "description": "Create a test event.",
                "operationId": "createEventEvent",
                "parameters": [
                    {
                        "in": "body",
                        "name": "EventEvent",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a test event.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/event/settings": {
            "get": {
                "description": "Retrieve the settings.",
                "operationId": "getEventSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the settings.",
                        "schema": {
                            "$ref": "#/definitions/EventSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            },
            "put": {
                "description": "Update settings",
                "operationId": "updateEventSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "EventSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/platform/3/file-filter/settings": {
            "get": {
                "description": "View File Filtering settings of an access zone",
                "operationId": "getFileFilterSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View File Filtering settings of an access zone",
                        "schema": {
                            "$ref": "#/definitions/FileFilterSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "FileFilter"
                ]
            },
            "put": {
                "description": "Modify one or more File Filtering settings for an access zone",
                "operationId": "updateFileFilterSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FileFilterSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileFilterSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "FileFilter"
                ]
            }
        },
        "/platform/3/fsa/results/{Id}/histogram": {
            "get": {
                "description": "This resource retrieves a histogram of file counts for an individual FSA result set. ID in the resource path is the result set ID.",
                "operationId": "getResultsIdHistogram",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This resource retrieves a histogram of file counts for an individual FSA result set. ID in the resource path is the result set ID.",
                        "schema": {
                            "$ref": "#/definitions/ResultsIdHistogram"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/3/fsa/results/{Id}/histogram/{ResultsIdHistogramStat}": {
            "get": {
                "description": "This resource retrieves a histogram of file counts for an individual FSA result set. ID in the resource path is the result set ID.",
                "operationId": "getResultsIdHistogramStat",
                "parameters": [
                    {
                        "description": "Filter according to a specific directory, which includes all of its subdirectories.",
                        "in": "query",
                        "name": "directory_filter",
                        "type": "string"
                    },
                    {
                        "description": "Filter according to the name of a file user attribute.",
                        "in": "query",
                        "name": "attribute_filter",
                        "type": "string"
                    },
                    {
                        "description": "Filter according to the name of a node pool, which is a set of disk pools that belong to nodes of the same equivalence class.",
                        "in": "query",
                        "name": "node_pool_filter",
                        "type": "string"
                    },
                    {
                        "description": "Filter according to the name of a disk pool, which is a set of drives that represent an independent failure domain.",
                        "in": "query",
                        "name": "disk_pool_filter",
                        "type": "string"
                    },
                    {
                        "description": "Filter according to the name of a storage tier, which is a user-created set of node pools.",
                        "in": "query",
                        "name": "tier_filter",
                        "type": "string"
                    },
                    {
                        "description": "Result set identifier for comparison of database results.",
                        "in": "query",
                        "name": "comp_report",
                        "type": "integer"
                    },
                    {
                        "description": "Filter according to file logical size, where the filter value specifies the lower bound in bytes to a set of files that have been grouped by logical size. The list of valid log_size filter values may be found by performing a histogram breakout by log_size and viewing the resulting key values.",
                        "in": "query",
                        "name": "log_size_filter",
                        "type": "integer"
                    },
                    {
                        "description": "Filter according to file physical size, where the filter value specifies the lower bound in bytes to a set of files that have been grouped by physical size. The list of valid phys_size filter values may be found by performing a histogram breakout by phys_size and viewing the resulting key values.",
                        "in": "query",
                        "name": "phys_size_filter",
                        "type": "integer"
                    },
                    {
                        "description": "Filter according to the name of a single file extension.",
                        "in": "query",
                        "name": "path_ext_filter",
                        "type": "string"
                    },
                    {
                        "description": "Filter according to file modified time, where the filter value specifies a negative number of seconds representing a time before the begin time of the report. The list of valid ctime filter values may be found by performing a histogram breakout by ctime and viewing the resulting key values.",
                        "in": "query",
                        "name": "ctime_filter",
                        "type": "integer"
                    },
                    {
                        "description": "Filter according to file accessed time, where the filter value specifies a negative number of seconds representing a time before the begin time of the report. The list of valid atime filter values may be found by performing a histogram breakout by atime and viewing the resulting key values.",
                        "in": "query",
                        "name": "atime_filter",
                        "type": "integer"
                    },
                    {
                        "description": "This resource retrieves a histogram of file counts for an individual FSA result set. ID in the resource path is the result set ID.",
                        "in": "path",
                        "name": "ResultsIdHistogramStat",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This resource retrieves a histogram of file counts for an individual FSA result set. ID in the resource path is the result set ID.",
                        "schema": {
                            "$ref": "#/definitions/ResultsIdHistogram"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/3/fsa/results/{Id}/top-dirs": {
            "get": {
                "description": "This resource retrieves the top directories. ID in the resource path is the result set ID.",
                "operationId": "getResultsIdTopDirs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This resource retrieves the top directories. ID in the resource path is the result set ID.",
                        "schema": {
                            "$ref": "#/definitions/ResultsIdTopDirs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/3/fsa/results/{Id}/top-dirs/{ResultsIdTopDirId}": {
            "get": {
                "description": "This resource retrieves the top directories. ID in the resource path is the result set ID.",
                "operationId": "getResultsIdTopDir",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Starting index for results. Default value of 0.",
                        "in": "query",
                        "name": "start",
                        "type": "integer"
                    },
                    {
                        "description": "Number of results from start index. Default value of 1000.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Result set identifier for comparison of database results.",
                        "in": "query",
                        "name": "comp_report",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "This resource retrieves the top directories. ID in the resource path is the result set ID.",
                        "in": "path",
                        "name": "ResultsIdTopDirId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This resource retrieves the top directories. ID in the resource path is the result set ID.",
                        "schema": {
                            "$ref": "#/definitions/ResultsIdTopDirs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/3/fsa/results/{Id}/top-files": {
            "get": {
                "description": "This resource retrieves the top files. ID in the resource path is the result set ID.",
                "operationId": "getResultsIdTopFiles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This resource retrieves the top files. ID in the resource path is the result set ID.",
                        "schema": {
                            "$ref": "#/definitions/ResultsIdTopFiles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/3/fsa/results/{Id}/top-files/{ResultsIdTopFileId}": {
            "get": {
                "description": "This resource retrieves the top files. ID in the resource path is the result set ID.",
                "operationId": "getResultsIdTopFile",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Starting index for results. Default value of 0.",
                        "in": "query",
                        "name": "start",
                        "type": "integer"
                    },
                    {
                        "description": "Number of results from start index. Default value of 1000.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Result set identifier for comparison of database results.",
                        "in": "query",
                        "name": "comp_report",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "This resource retrieves the top files. ID in the resource path is the result set ID.",
                        "in": "path",
                        "name": "ResultsIdTopFileId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This resource retrieves the top files. ID in the resource path is the result set ID.",
                        "schema": {
                            "$ref": "#/definitions/ResultsIdTopFiles"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Fsa"
                ]
            }
        },
        "/platform/3/hardening/apply": {
            "post": {
                "description": "Apply hardening on the cluster.",
                "operationId": "createHardeningApplyItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HardeningApplyItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HardeningApplyItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Apply hardening on the cluster.",
                        "schema": {
                            "$ref": "#/definitions/CreateHardeningApplyItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardening"
                ]
            }
        },
        "/platform/3/hardening/resolve": {
            "post": {
                "description": "Resolve issues related to hardening, found in current cluster configuration.",
                "operationId": "createHardeningResolveItem",
                "parameters": [
                    {
                        "description": "If true, execution proceeds to resolve all issues. If false, executrion aborts. This is a required argument.",
                        "in": "query",
                        "name": "accept",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "HardeningResolveItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HardeningResolveItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resolve issues related to hardening, found in current cluster configuration.",
                        "schema": {
                            "$ref": "#/definitions/CreateHardeningResolveItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardening"
                ]
            }
        },
        "/platform/3/hardening/revert": {
            "post": {
                "description": "Revert hardening on the cluster.",
                "operationId": "createHardeningRevertItem",
                "parameters": [
                    {
                        "description": "If specified, revert operation continues even in case of a failure. Default is false in which case revert stops at the first failure.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "HardeningRevertItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Revert hardening on the cluster.",
                        "schema": {
                            "$ref": "#/definitions/CreateHardeningRevertItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardening"
                ]
            }
        },
        "/platform/3/hardening/state": {
            "get": {
                "description": "Get the state of the current hardening operation, if one is happening.  Note that this is different from the /status resource, which returns the overall hardening status of the cluster.",
                "operationId": "getHardeningState",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the state of the current hardening operation, if one is happening.  Note that this is different from the /status resource, which returns the overall hardening status of the cluster.",
                        "schema": {
                            "$ref": "#/definitions/HardeningState"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardening"
                ]
            }
        },
        "/platform/3/hardening/status": {
            "get": {
                "description": "Get a message indicating whether or not the cluster is hardened. Note that this is different from the /state resource, which returns the state of a specific hardening operation (apply or revert).",
                "operationId": "getHardeningStatus",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a message indicating whether or not the cluster is hardened. Note that this is different from the /state resource, which returns the state of a specific hardening operation (apply or revert).",
                        "schema": {
                            "$ref": "#/definitions/HardeningStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardening"
                ]
            }
        },
        "/platform/3/hardware/fcports/{HardwareFcportId}": {
            "get": {
                "description": "Get one fibre-channel port",
                "operationId": "getHardwareFcport",
                "parameters": [
                    {
                        "description": "Get one fibre-channel port",
                        "in": "path",
                        "name": "HardwareFcportId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get one fibre-channel port",
                        "schema": {
                            "$ref": "#/definitions/HardwareFcports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardware"
                ]
            },
            "put": {
                "description": "Change wwnn, wwpn, state, topology, or rate of a FC port",
                "operationId": "updateHardwareFcport",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HardwareFcport",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HardwareFcport"
                        }
                    },
                    {
                        "description": "Change wwnn, wwpn, state, topology, or rate of a FC port",
                        "in": "path",
                        "name": "HardwareFcportId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardware"
                ]
            }
        },
        "/platform/3/hardware/tape/{HardwareTapeName}": {
            "delete": {
                "description": "Tape/Changer devices remove",
                "operationId": "deleteHardwareTapeName",
                "parameters": [
                    {
                        "description": "Tape/Changer devices remove",
                        "in": "path",
                        "name": "HardwareTapeName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardware"
                ]
            },
            "post": {
                "description": "Tape/Changer devices rescan",
                "operationId": "createHardwareTapeName",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HardwareTapeName",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tape/Changer devices rescan",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardware"
                ]
            },
            "put": {
                "description": "Tape/Changer device modify",
                "operationId": "updateHardwareTapeName",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HardwareTapeNameParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HardwareTapeNameParams"
                        }
                    },
                    {
                        "description": "Tape/Changer device modify",
                        "in": "path",
                        "name": "HardwareTapeName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardware"
                ]
            }
        },
        "/platform/3/hardware/tapes": {
            "get": {
                "description": "Get list Tape and Changer devices",
                "operationId": "getHardwareTapes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get list Tape and Changer devices",
                        "schema": {
                            "$ref": "#/definitions/HardwareTapes"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Hardware"
                ]
            }
        },
        "/platform/3/job/events": {
            "get": {
                "description": "List job events.",
                "operationId": "getJobEvents",
                "parameters": [
                    {
                        "description": "Restrict the query to events at or after the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to events before the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to the given job ID.",
                        "in": "query",
                        "name": "job_id",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to the given job type.",
                        "in": "query",
                        "name": "job_type",
                        "type": "string"
                    },
                    {
                        "description": "Query timeout in milliseconds. The default is 10000 ms.",
                        "in": "query",
                        "name": "timeout_ms",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to events containing the given state.",
                        "enum": [
                            "running",
                            "paused_user",
                            "paused_system",
                            "paused_policy",
                            "paused_priority",
                            "cancelled_user",
                            "cancelled_system",
                            "failed",
                            "succeeded",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to the given key name.",
                        "in": "query",
                        "name": "key",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List job events.",
                        "schema": {
                            "$ref": "#/definitions/JobEvents"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/3/job/jobs": {
            "get": {
                "description": "List running and paused jobs.",
                "operationId": "listJobJobs",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If true, other arguments are ignored, and the query will return all results, unsorted, as quickly as possible.",
                        "in": "query",
                        "name": "batch",
                        "type": "boolean"
                    },
                    {
                        "description": "Limit the results to jobs in the specified state.",
                        "enum": [
                            "running",
                            "paused_user",
                            "paused_system",
                            "paused_policy",
                            "paused_priority"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List running and paused jobs.",
                        "schema": {
                            "$ref": "#/definitions/JobJobsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "post": {
                "description": "Queue a new instance of a job type.",
                "operationId": "createJobJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobJobCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Queue a new instance of a job type.",
                        "schema": {
                            "$ref": "#/definitions/CreateJobJobResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/3/job/jobs/{JobJobId}": {
            "get": {
                "description": "View a single job instance.",
                "operationId": "getJobJob",
                "parameters": [
                    {
                        "description": "View a single job instance.",
                        "in": "path",
                        "name": "JobJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single job instance.",
                        "schema": {
                            "$ref": "#/definitions/JobJobs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            },
            "put": {
                "description": "Modify a running or paused job instance.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateJobJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "JobJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobJob"
                        }
                    },
                    {
                        "description": "Modify a running or paused job instance.  All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "JobJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/3/job/recent": {
            "get": {
                "description": "List recently completed jobs.",
                "operationId": "getJobRecent",
                "parameters": [
                    {
                        "description": "Query timeout in milliseconds. The default is 10000 ms.",
                        "in": "query",
                        "name": "timeout_ms",
                        "type": "integer"
                    },
                    {
                        "description": "Max number of recent jobs to return. The default is 8, the max is 100.",
                        "in": "query",
                        "name": "limit",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List recently completed jobs.",
                        "schema": {
                            "$ref": "#/definitions/JobRecent"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/3/job/reports": {
            "get": {
                "description": "List job reports.",
                "operationId": "getJobReports",
                "parameters": [
                    {
                        "description": "Restrict the query to reports at or after the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to reports before the given time, in seconds since the Epoch.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    },
                    {
                        "description": "Restrict the query to the given job ID.",
                        "in": "query",
                        "name": "job_id",
                        "type": "integer"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Restrict the query to the given job type.",
                        "in": "query",
                        "name": "job_type",
                        "type": "string"
                    },
                    {
                        "description": "Query timeout in milliseconds. The default is 10000 ms.",
                        "in": "query",
                        "name": "timeout_ms",
                        "type": "integer"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List job reports.",
                        "schema": {
                            "$ref": "#/definitions/JobReports"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Job"
                ]
            }
        },
        "/platform/3/librarytest/example": {
            "get": {
                "description": "View the example.",
                "operationId": "getLibrarytestExample",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View the example.",
                        "schema": {
                            "$ref": "#/definitions/LibrarytestExample"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Librarytest"
                ]
            }
        },
        "/platform/3/local/cluster/time": {
            "get": {
                "description": "Get the current time on the local node.",
                "operationId": "getClusterTime",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the current time on the local node.",
                        "schema": {
                            "$ref": "#/definitions/ClusterTime"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Local"
                ]
            }
        },
        "/platform/3/network/dnscache": {
            "get": {
                "description": "View network dns cache settings.",
                "operationId": "getNetworkDnscache",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View network dns cache settings.",
                        "schema": {
                            "$ref": "#/definitions/NetworkDnscache"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "put": {
                "description": "Modify network dns cache settings.",
                "operationId": "updateNetworkDnscache",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NetworkDnscache",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkDnscacheSetting"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/dnscache/flush": {
            "post": {
                "description": "Flush the DNSCache.",
                "operationId": "createDnscacheFlushItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "DnscacheFlushItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flush the DNSCache.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/external": {
            "get": {
                "description": "View external network settings.",
                "operationId": "getNetworkExternal",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View external network settings.",
                        "schema": {
                            "$ref": "#/definitions/NetworkExternal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "put": {
                "description": "Modify external network settings.",
                "operationId": "updateNetworkExternal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NetworkExternal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkExternalExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets": {
            "get": {
                "description": "Get a list of groupnets.",
                "operationId": "listNetworkGroupnets",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of groupnets.",
                        "schema": {
                            "$ref": "#/definitions/NetworkGroupnetsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "post": {
                "description": "Create a new groupnet.",
                "operationId": "createNetworkGroupnet",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NetworkGroupnet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkGroupnet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new groupnet.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets": {
            "get": {
                "description": "Get a list of subnets.",
                "operationId": "listGroupnetsGroupnetSubnets",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of subnets.",
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "post": {
                "description": "Create a new subnet.",
                "operationId": "createGroupnetsGroupnetSubnet",
                "parameters": [
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetCreateParams"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new subnet.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{GroupnetsGroupnetSubnetId}": {
            "delete": {
                "description": "Delete a network subnet..",
                "operationId": "deleteGroupnetsGroupnetSubnet",
                "parameters": [
                    {
                        "description": "force deleting this subnet even if pools in other subnets rely on this subnet's SC VIP.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Delete a network subnet..",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "get": {
                "description": "View a network subnet.",
                "operationId": "getGroupnetsGroupnetSubnet",
                "parameters": [
                    {
                        "description": "force modifying this subnet even if it causes an MTU conflict.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "View a network subnet.",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a network subnet.",
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnets"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "put": {
                "description": "Modify a network subnet.",
                "operationId": "updateGroupnetsGroupnetSubnet",
                "parameters": [
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnet"
                        }
                    },
                    {
                        "description": "Modify a network subnet.",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{Subnet}/pools": {
            "get": {
                "description": "Get a list of network pools.",
                "operationId": "listGroupnetsGroupnetSubnetsSubnetPools",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If specified, only pools with this zone name will be returned.",
                        "in": "query",
                        "name": "access_zone",
                        "type": "string"
                    },
                    {
                        "description": "If specified, only pools with this allocation type will be returned.",
                        "enum": [
                            "static",
                            "dynamic"
                        ],
                        "in": "query",
                        "name": "alloc_method",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of network pools.",
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "post": {
                "description": "Create a new pool.",
                "operationId": "createGroupnetsGroupnetSubnetsSubnetPool",
                "parameters": [
                    {
                        "description": "force creating this pool even if it causes an MTU conflict.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnetsSubnetPool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPool"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new pool.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{Subnet}/pools/{GroupnetsGroupnetSubnetsSubnetPoolId}": {
            "delete": {
                "description": "Delete a network pool.",
                "operationId": "deleteGroupnetsGroupnetSubnetsSubnetPool",
                "parameters": [
                    {
                        "description": "Delete a network pool.",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "get": {
                "description": "View a single network pool.",
                "operationId": "getGroupnetsGroupnetSubnetsSubnetPool",
                "parameters": [
                    {
                        "description": "View a single network pool.",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single network pool.",
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPools"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "put": {
                "description": "Modify a network pool.",
                "operationId": "updateGroupnetsGroupnetSubnetsSubnetPool",
                "parameters": [
                    {
                        "description": "force creating this pool even if it causes an MTU conflict.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnetsSubnetPool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPool"
                        }
                    },
                    {
                        "description": "Modify a network pool.",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{Subnet}/pools/{Pool}/interfaces": {
            "get": {
                "description": "Get a list of interfaces.",
                "operationId": "getGroupnetsGroupnetSubnetsSubnetPoolsPoolInterfaces",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Get a list of interfaces for the specified lnn.",
                        "in": "query",
                        "name": "lnns",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of interfaces.",
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolInterfaces"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{Subnet}/pools/{Pool}/rebalance-ips": {
            "post": {
                "description": "Rebalance IP addresses in specified pool.",
                "operationId": "createGroupnetsGroupnetSubnetsSubnetPoolsPoolRebalanceIp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolsPoolRebalanceIp",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rebalance IP addresses in specified pool.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{Subnet}/pools/{Pool}/rules": {
            "get": {
                "description": "Get a list of network rules.",
                "operationId": "listGroupnetsGroupnetSubnetsSubnetPoolsPoolRules",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of network rules.",
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolRulesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "post": {
                "description": "Create a new rule.",
                "operationId": "createGroupnetsGroupnetSubnetsSubnetPoolsPoolRule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolsPoolRule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolRule"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new rule.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{Subnet}/pools/{Pool}/rules/{GroupnetsGroupnetSubnetsSubnetPoolsPoolRuleId}": {
            "delete": {
                "description": "Delete a network rule.",
                "operationId": "deleteGroupnetsGroupnetSubnetsSubnetPoolsPoolRule",
                "parameters": [
                    {
                        "description": "Delete a network rule.",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolsPoolRuleId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "get": {
                "description": "View a single network rule.",
                "operationId": "getGroupnetsGroupnetSubnetsSubnetPoolsPoolRule",
                "parameters": [
                    {
                        "description": "View a single network rule.",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolsPoolRuleId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single network rule.",
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolRules"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "put": {
                "description": "Modify a network rule.",
                "operationId": "updateGroupnetsGroupnetSubnetsSubnetPoolsPoolRule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolsPoolRule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolRule"
                        }
                    },
                    {
                        "description": "Modify a network rule.",
                        "in": "path",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolsPoolRuleId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{Subnet}/pools/{Pool}/sc-resume-nodes": {
            "post": {
                "description": "Resume suspended nodes.",
                "operationId": "createGroupnetsGroupnetSubnetsSubnetPoolsPoolScResumeNode",
                "parameters": [
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolsPoolScResumeNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolScResumeNode"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resume suspended nodes.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{Groupnet}/subnets/{Subnet}/pools/{Pool}/sc-suspend-nodes": {
            "post": {
                "description": "Suspend nodes.",
                "operationId": "createGroupnetsGroupnetSubnetsSubnetPoolsPoolScSuspendNode",
                "parameters": [
                    {
                        "in": "body",
                        "name": "GroupnetsGroupnetSubnetsSubnetPoolsPoolScSuspendNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolScResumeNode"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Groupnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Subnet",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Pool",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Suspend nodes.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/groupnets/{NetworkGroupnetId}": {
            "delete": {
                "description": "Delete a network groupnet.",
                "operationId": "deleteNetworkGroupnet",
                "parameters": [
                    {
                        "description": "Delete a network groupnet.",
                        "in": "path",
                        "name": "NetworkGroupnetId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "get": {
                "description": "View a network groupnet.",
                "operationId": "getNetworkGroupnet",
                "parameters": [
                    {
                        "description": "View a network groupnet.",
                        "in": "path",
                        "name": "NetworkGroupnetId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a network groupnet.",
                        "schema": {
                            "$ref": "#/definitions/NetworkGroupnets"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            },
            "put": {
                "description": "Modify a network groupnet.",
                "operationId": "updateNetworkGroupnet",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NetworkGroupnet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkGroupnet"
                        }
                    },
                    {
                        "description": "Modify a network groupnet.",
                        "in": "path",
                        "name": "NetworkGroupnetId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/interfaces": {
            "get": {
                "description": "Get a list of interfaces.",
                "operationId": "getNetworkInterfaces",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Get a list of interfaces for the specified lnn.",
                        "in": "query",
                        "name": "lnns",
                        "type": "string"
                    },
                    {
                        "description": "Filter addresses and owners by pool address allocation method.",
                        "enum": [
                            "dynamic",
                            "static"
                        ],
                        "in": "query",
                        "name": "alloc_method",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of interfaces.",
                        "schema": {
                            "$ref": "#/definitions/GroupnetsGroupnetSubnetsSubnetPoolsPoolInterfaces"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/pools": {
            "get": {
                "description": "Get a list of flexnet pools.",
                "operationId": "getNetworkPools",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "If specified, only pools for this subnet will be returned.",
                        "in": "query",
                        "name": "subnet",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "If specified, only pools with this zone name will be returned.",
                        "in": "query",
                        "name": "access_zone",
                        "type": "string"
                    },
                    {
                        "description": "If specified, only pools with this allocation type will be returned.",
                        "enum": [
                            "static",
                            "dynamic"
                        ],
                        "in": "query",
                        "name": "alloc_method",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "If specified, only pools for this groupnet will be returned.",
                        "in": "query",
                        "name": "groupnet",
                        "type": "string"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of flexnet pools.",
                        "schema": {
                            "$ref": "#/definitions/NetworkPools"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/rules": {
            "get": {
                "description": "Get a list of network rules.",
                "operationId": "getNetworkRules",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Name of the subnet to list rules from.",
                        "in": "query",
                        "name": "subnet",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Name of the groupnet to list rules from.",
                        "in": "query",
                        "name": "groupnet",
                        "type": "string"
                    },
                    {
                        "description": "Name of the pool to list rules from.",
                        "in": "query",
                        "name": "pool",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of network rules.",
                        "schema": {
                            "$ref": "#/definitions/NetworkRules"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/sc-rebalance-all": {
            "post": {
                "description": "Rebalance IP addresses in all pools.",
                "operationId": "createNetworkScRebalanceAllItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NetworkScRebalanceAllItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rebalance IP addresses in all pools.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/network/subnets": {
            "get": {
                "description": "Get a list of subnets.",
                "operationId": "getNetworkSubnets",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "If specified, only subnets for this groupnet will be returned.",
                        "in": "query",
                        "name": "groupnet",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of subnets.",
                        "schema": {
                            "$ref": "#/definitions/NetworkSubnets"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Network"
                ]
            }
        },
        "/platform/3/protocols/ftp/settings": {
            "get": {
                "description": "Retrieve the FTP settings.",
                "operationId": "getFtpSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the FTP settings.",
                        "schema": {
                            "$ref": "#/definitions/FtpSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the FTP settings. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateFtpSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "FtpSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FtpSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/hdfs/log-level": {
            "get": {
                "description": "Retrieve the HDFS service log-level.",
                "operationId": "getHdfsLogLevel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the HDFS service log-level.",
                        "schema": {
                            "$ref": "#/definitions/HdfsLogLevel"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the HDFS service log-level.",
                "operationId": "updateHdfsLogLevel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsLogLevel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsLogLevel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/hdfs/settings": {
            "get": {
                "description": "Retrieve HDFS properties.",
                "operationId": "getHdfsSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve HDFS properties.",
                        "schema": {
                            "$ref": "#/definitions/HdfsSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify HDFS properties.",
                "operationId": "updateHdfsSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HdfsSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HdfsSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/http/settings": {
            "get": {
                "description": "Retrieve HTTP properties.",
                "operationId": "getHttpSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve HTTP properties.",
                        "schema": {
                            "$ref": "#/definitions/HttpSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify HTTP properties.",
                "operationId": "updateHttpSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "HttpSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HttpSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ndmp/contexts/bre": {
            "get": {
                "description": "Get list of NDMP BRE Contexts.",
                "operationId": "getNdmpContextsBre",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get list of NDMP BRE Contexts.",
                        "schema": {
                            "$ref": "#/definitions/NdmpContextsBre"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ndmp/diagnostics": {
            "get": {
                "description": "List ndmp diagnostics settings.",
                "operationId": "getNdmpDiagnostics",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List ndmp diagnostics settings.",
                        "schema": {
                            "$ref": "#/definitions/NdmpDiagnostics"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify ndmp diagnostics settings.",
                "operationId": "updateNdmpDiagnostics",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NdmpDiagnostics",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NdmpDiagnosticsDiagnostics"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ndmp/logs": {
            "get": {
                "description": "Get NDMP logs",
                "operationId": "getNdmpLogs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get NDMP logs",
                        "schema": {
                            "$ref": "#/definitions/NdmpLogs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ndmp/sessions": {
            "get": {
                "description": "List all ndmp sessions.",
                "operationId": "getNdmpSessions",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all ndmp sessions.",
                        "schema": {
                            "$ref": "#/definitions/NdmpSessions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ndmp/settings/global": {
            "get": {
                "description": "List global ndmp settings.",
                "operationId": "getNdmpSettingsGlobal",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List global ndmp settings.",
                        "schema": {
                            "$ref": "#/definitions/NdmpSettingsGlobal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateNdmpSettingsGlobal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NdmpSettingsGlobal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NdmpSettingsGlobalGlobal"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ndmp/users": {
            "get": {
                "description": "List all ndmp administrators.",
                "operationId": "listNdmpUsers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all ndmp administrators.",
                        "schema": {
                            "$ref": "#/definitions/NdmpUsersExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Created a new user.",
                "operationId": "createNdmpUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NdmpUser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NdmpUserCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created a new user.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ndmp/users/{NdmpUserId}": {
            "delete": {
                "description": "Delete the user.",
                "operationId": "deleteNdmpUser",
                "parameters": [
                    {
                        "description": "Delete the user.",
                        "in": "path",
                        "name": "NdmpUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve the user.",
                "operationId": "getNdmpUser",
                "parameters": [
                    {
                        "description": "Retrieve the user.",
                        "in": "path",
                        "name": "NdmpUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the user.",
                        "schema": {
                            "$ref": "#/definitions/NdmpUsers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the user",
                "operationId": "updateNdmpUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NdmpUser",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NdmpUser"
                        }
                    },
                    {
                        "description": "Modify the user",
                        "in": "path",
                        "name": "NdmpUserId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/nfs/log-level": {
            "get": {
                "description": "Get the current NFS service logging level.",
                "operationId": "getNfsLogLevel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the current NFS service logging level.",
                        "schema": {
                            "$ref": "#/definitions/NfsLogLevel"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Set the current NFS service logging level.",
                "operationId": "updateNfsLogLevel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NfsLogLevel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsLogLevel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/nfs/netgroup/check": {
            "post": {
                "description": "Update the NFS netgroups in the cache.",
                "operationId": "createNfsNetgroupCheckItem",
                "parameters": [
                    {
                        "description": "IP address of node to update. If unspecified, the local nodes cache is updated.",
                        "in": "query",
                        "name": "host",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsNetgroupCheckItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update the NFS netgroups in the cache.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/nfs/netgroup/flush": {
            "post": {
                "description": "Flush the NFS netgroups in the cache.",
                "operationId": "createNfsNetgroupFlushItem",
                "parameters": [
                    {
                        "description": "IP address of node to flush. If unspecified, all nodes on the cluster are flushed.",
                        "in": "query",
                        "name": "host",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsNetgroupFlushItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flush the NFS netgroups in the cache.",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/nfs/nlm/sessions": {
            "get": {
                "description": "List all NSM clients (optionally filtered by either zone or IP)",
                "operationId": "getNfsNlmSessions",
                "parameters": [
                    {
                        "description": "An IP address for which NSM has client records",
                        "in": "query",
                        "name": "ip",
                        "type": "string"
                    },
                    {
                        "description": "Represents an extant auth zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NSM clients (optionally filtered by either zone or IP)",
                        "schema": {
                            "$ref": "#/definitions/NfsNlmSessionsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/nfs/nlm/sessions-check": {
            "post": {
                "description": "Perform an active scan for lost NFSv3 locks.",
                "operationId": "createNfsNlmSessionsCheckItem",
                "parameters": [
                    {
                        "description": "An IP address for which NSM has client records",
                        "in": "query",
                        "name": "ip",
                        "type": "string"
                    },
                    {
                        "description": "Represents an extant auth zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "NfsNlmSessionsCheckItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Perform an active scan for lost NFSv3 locks.",
                        "schema": {
                            "$ref": "#/definitions/CreateNfsNlmSessionsCheckItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/nfs/nlm/sessions/{NfsNlmSessionId}": {
            "delete": {
                "description": "Delete all lock state for this host.",
                "operationId": "deleteNfsNlmSession",
                "parameters": [
                    {
                        "description": "An IP address for which NSM has client records",
                        "in": "query",
                        "name": "ip",
                        "type": "string"
                    },
                    {
                        "description": "Represents an extant auth zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "if set to true, the client will be given a chance to reclaim its locks before they are destroyed",
                        "in": "query",
                        "name": "refresh",
                        "type": "boolean"
                    },
                    {
                        "description": "Delete all lock state for this host.",
                        "in": "path",
                        "name": "NfsNlmSessionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve all lock state for a single client.",
                "operationId": "getNfsNlmSession",
                "parameters": [
                    {
                        "description": "An IP address for which NSM has client records",
                        "in": "query",
                        "name": "ip",
                        "type": "string"
                    },
                    {
                        "description": "Represents an extant auth zone",
                        "in": "query",
                        "name": "zone",
                        "type": "string"
                    },
                    {
                        "description": "Retrieve all lock state for a single client.",
                        "in": "path",
                        "name": "NfsNlmSessionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve all lock state for a single client.",
                        "schema": {
                            "$ref": "#/definitions/NfsNlmSessions"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/nfs/settings/global": {
            "get": {
                "description": "Retrieve the NFS configuration.",
                "operationId": "getNfsSettingsGlobal",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the NFS configuration.",
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsGlobal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the default values for NFS exports. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNfsSettingsGlobal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NfsSettingsGlobal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NfsSettingsGlobalSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ntp/servers": {
            "delete": {
                "description": "Delete all NTP server entries.",
                "operationId": "deleteNtpServers",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "List all NTP servers.",
                "operationId": "listNtpServers",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all NTP servers.",
                        "schema": {
                            "$ref": "#/definitions/NtpServersExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create an NTP server entry.",
                "operationId": "createNtpServer",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NtpServer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NtpServerCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create an NTP server entry.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ntp/servers/{NtpServerId}": {
            "delete": {
                "description": "Delete an NTP server entry.",
                "operationId": "deleteNtpServer",
                "parameters": [
                    {
                        "description": "Delete an NTP server entry.",
                        "in": "path",
                        "name": "NtpServerId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Retrieve one NTP server.",
                "operationId": "getNtpServer",
                "parameters": [
                    {
                        "description": "Retrieve one NTP server.",
                        "in": "path",
                        "name": "NtpServerId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve one NTP server.",
                        "schema": {
                            "$ref": "#/definitions/NtpServers"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the key value for an NTP server.",
                "operationId": "updateNtpServer",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NtpServer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NtpServer"
                        }
                    },
                    {
                        "description": "Modify the key value for an NTP server.",
                        "in": "path",
                        "name": "NtpServerId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/ntp/settings": {
            "get": {
                "description": "Retrieve the NTP settings.",
                "operationId": "getNtpSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the NTP settings.",
                        "schema": {
                            "$ref": "#/definitions/NtpSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the NTP settings. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateNtpSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "NtpSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NtpSettingsSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/smb/log-level": {
            "get": {
                "description": "Get the current SMB logging level.",
                "operationId": "getSmbLogLevel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the current SMB logging level.",
                        "schema": {
                            "$ref": "#/definitions/SmbLogLevel"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Set the current SMB logging level.",
                "operationId": "updateSmbLogLevel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SmbLogLevel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbLogLevel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/smb/log-level/filters": {
            "delete": {
                "description": "Delete an existing SMB log filter.",
                "operationId": "deleteSmbLogLevelFilters",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "Get the current SMB log filters.",
                "operationId": "listSmbLogLevelFilters",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get the current SMB log filters.",
                        "schema": {
                            "$ref": "#/definitions/SmbLogLevelFiltersExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Add an SMB log filter.",
                "operationId": "createSmbLogLevelFilter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SmbLogLevelFilter",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbLogLevelFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add an SMB log filter.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuthRefreshItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/smb/log-level/filters/{SmbLogLevelFilterId}": {
            "delete": {
                "description": "Delete log filter.",
                "operationId": "deleteSmbLogLevelFilter",
                "parameters": [
                    {
                        "description": "Delete log filter.",
                        "in": "path",
                        "name": "SmbLogLevelFilterId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "View log filter.",
                "operationId": "getSmbLogLevelFilter",
                "parameters": [
                    {
                        "description": "View log filter.",
                        "in": "path",
                        "name": "SmbLogLevelFilterId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View log filter.",
                        "schema": {
                            "$ref": "#/definitions/SmbLogLevelFilters"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/smb/settings/global": {
            "get": {
                "description": "List all settings.",
                "operationId": "getSmbSettingsGlobal",
                "parameters": [
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all settings.",
                        "schema": {
                            "$ref": "#/definitions/SmbSettingsGlobal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify one or more settings.",
                "operationId": "updateSmbSettingsGlobal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SmbSettingsGlobal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmbSettingsGlobalSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/snmp/settings": {
            "get": {
                "description": "Retrieve the SNMP settings.",
                "operationId": "getSnmpSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the SNMP settings.",
                        "schema": {
                            "$ref": "#/definitions/SnmpSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify the SNMO settings. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnmpSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnmpSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnmpSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/swift/accounts": {
            "get": {
                "description": "List all swift accounts.",
                "operationId": "listSwiftAccounts",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all swift accounts.",
                        "schema": {
                            "$ref": "#/definitions/SwiftAccounts"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "post": {
                "description": "Create a new Swift account",
                "operationId": "createSwiftAccount",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SwiftAccount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SwiftAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new Swift account",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/protocols/swift/accounts/{SwiftAccountId}": {
            "delete": {
                "description": "Delete a Swift account.",
                "operationId": "deleteSwiftAccount",
                "parameters": [
                    {
                        "description": "Delete a Swift account.",
                        "in": "path",
                        "name": "SwiftAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "get": {
                "description": "List a swift account.",
                "operationId": "getSwiftAccount",
                "parameters": [
                    {
                        "description": "List a swift account.",
                        "in": "path",
                        "name": "SwiftAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List a swift account.",
                        "schema": {
                            "$ref": "#/definitions/SwiftAccounts"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            },
            "put": {
                "description": "Modify a Swift account",
                "operationId": "updateSwiftAccount",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SwiftAccount",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SwiftAccount"
                        }
                    },
                    {
                        "description": "Modify a Swift account",
                        "in": "path",
                        "name": "SwiftAccountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Protocols"
                ]
            }
        },
        "/platform/3/snapshot/schedules": {
            "delete": {
                "description": "Delete all snapshot schedules.",
                "operationId": "deleteSnapshotSchedules",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "List all or matching schedules.",
                "operationId": "listSnapshotSchedules",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.  Choices are id, name, path, pattern, schedule, duration, alias, next_run, and next_snapshot.  Default is id.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all or matching schedules.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSchedulesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "post": {
                "description": "Create a new schedule.",
                "operationId": "createSnapshotSchedule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSchedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotScheduleCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new schedule.",
                        "schema": {
                            "$ref": "#/definitions/CreateSnapshotScheduleResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/3/snapshot/schedules/{SnapshotScheduleId}": {
            "delete": {
                "description": "Delete the schedule. This does not affect already created snapshots.",
                "operationId": "deleteSnapshotSchedule",
                "parameters": [
                    {
                        "description": "Delete the schedule. This does not affect already created snapshots.",
                        "in": "path",
                        "name": "SnapshotScheduleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "get": {
                "description": "Retrieve the schedule.",
                "operationId": "getSnapshotSchedule",
                "parameters": [
                    {
                        "description": "Retrieve the schedule.",
                        "in": "path",
                        "name": "SnapshotScheduleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the schedule.",
                        "schema": {
                            "$ref": "#/definitions/SnapshotSchedules"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            },
            "put": {
                "description": "Modify the schedule. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSnapshotSchedule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SnapshotSchedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SnapshotSchedule"
                        }
                    },
                    {
                        "description": "Modify the schedule. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "SnapshotScheduleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Snapshot"
                ]
            }
        },
        "/platform/3/statistics/operations": {
            "get": {
                "description": "Retrieve operations list.",
                "operationId": "getStatisticsOperations",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve operations list.",
                        "schema": {
                            "$ref": "#/definitions/StatisticsOperations"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/3/statistics/summary/client": {
            "get": {
                "description": "",
                "operationId": "getSummaryClient",
                "parameters": [
                    {
                        "description": "{ drive_id | type | xfers_in | bytes_in | xfer_size_in | xfers_out | bytes_out | xfer_size_out | access_latency | access_slow | iosched_latency | iosched_queue | busy | used_bytes_percent | used_inodes } Sort data by the specified comma-separated field(s). Prepend 'asc:' or 'desc:' to a field to change the sort direction.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "A comma separated list specifying what should be unique. node|protocol|class|local_addr|local_name|remote_addr|remote_name|user_id|user_name|devid",
                        "in": "query",
                        "name": "totalby",
                        "type": "string"
                    },
                    {
                        "description": "A comma seperated list. Only report statistics for operations requested by users with resolved names enumerated.",
                        "in": "query",
                        "name": "user_names",
                        "type": "string"
                    },
                    {
                        "description": "Whether to convert hostnames or usernames to their human readable form. False by default.",
                        "in": "query",
                        "name": "numeric",
                        "type": "boolean"
                    },
                    {
                        "description": "A comma seperated list. Only report statistics for operations handled by the local hosts with resolved names enumerated.",
                        "in": "query",
                        "name": "local_names",
                        "type": "string"
                    },
                    {
                        "description": "A comma seperated list. Only report statistics for operations requested by users with numeric UIDs enumerated.",
                        "in": "query",
                        "name": "user_ids",
                        "type": "string"
                    },
                    {
                        "description": "Specify class(es) for which statistics should be reported. Default is all supported classes.",
                        "in": "query",
                        "name": "classes",
                        "type": "string"
                    },
                    {
                        "description": "Timeout remote commands after NUM seconds, where NUM is the integer passed to the argument.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    },
                    {
                        "description": "A comma seperated list. Only report statistics for operations handled by the local hosts with dotted-quad IP addresses enumerated.",
                        "in": "query",
                        "name": "local_addrs",
                        "type": "string"
                    },
                    {
                        "description": "Continue to report if some nodes do not respond.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    },
                    {
                        "description": "A comma seperated list. Only report statistics for operations requested by the remote clients with dotted-quad IP addresses enumerated.",
                        "in": "query",
                        "name": "remote_addrs",
                        "type": "string"
                    },
                    {
                        "description": "A comma seperated list. Only report statistics for operations requested by the remote clients with resolved names enumerated.",
                        "in": "query",
                        "name": "remote_names",
                        "type": "string"
                    },
                    {
                        "description": "A comma seperated list. Specify node(s) for which statistics should be reported. Default is 'all'. Zero (0) should be passed in as the sole argument to indicate local.",
                        "in": "query",
                        "name": "nodes",
                        "type": "string"
                    },
                    {
                        "description": "A comma seperated list of the protocol(s) you wish to return. Default is 'all' of the folowing: nfs3|smb1|nlm|ftp|http|siq|iscsi|smb2|nfs4|papi|jobd|irp|lsass_in|lsass_out|hdfs|internal|external",
                        "in": "query",
                        "name": "protocols",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SummaryClient"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/3/statistics/summary/drive": {
            "get": {
                "description": "",
                "operationId": "getSummaryDrive",
                "parameters": [
                    {
                        "description": "{ drive_id | type | xfers_in | bytes_in | xfer_size_in | xfers_out | bytes_out | xfer_size_out | access_latency | access_slow | iosched_latency | iosched_queue | busy | used_bytes_percent | used_inodes } Sort data by the specified comma-separated field(s). Prepend 'asc:' or 'desc:' to a field to change the sort direction.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Continue to report if some nodes do not respond.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    },
                    {
                        "description": "Specify drive type(s) for which statistics should be reported.",
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "Specify node(s) for which statistics should be reported. A comma separated set of numbers. Default is 'all'. Zero (0) should be passed in as the sole argument to indicate only the local node.",
                        "in": "query",
                        "name": "nodes",
                        "type": "string"
                    },
                    {
                        "description": "Timeout remote commands after NUM seconds, where NUM is the integer passed to the argument.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SummaryDrive"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/3/statistics/summary/heat": {
            "get": {
                "description": "File heat map, i.e. rate of file operations, and the type of operation listed by path/lin(s).",
                "operationId": "getSummaryHeat",
                "parameters": [
                    {
                        "description": "{ drive_id | type | xfers_in | bytes_in | xfer_size_in | xfers_out | bytes_out | xfer_size_out | access_latency | access_slow | iosched_latency | iosched_queue | busy | used_bytes_percent | used_inodes } Sort data by the specified comma-separated field(s). Prepend 'asc:' or 'desc:' to a field to change the sort direction.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Convert lin to hex. Defaults to true.",
                        "in": "query",
                        "name": "convertlin",
                        "type": "boolean"
                    },
                    {
                        "description": "Aggregate per specified fields(s). Defaults to none.",
                        "in": "query",
                        "name": "totalby",
                        "type": "string"
                    },
                    {
                        "description": "Squash paths to this directory depth. Defaults to none, ie. the paths are not limited (Subject to the system limits.)",
                        "in": "query",
                        "name": "pathdepth",
                        "type": "integer"
                    },
                    {
                        "description": "Whether to convert hostnames or usernames to their human readable form. False by default.",
                        "in": "query",
                        "name": "numeric",
                        "type": "boolean"
                    },
                    {
                        "description": "Only report specified event types(s). A comma separated list of events. Defaults to all supported events. See [...]/platform/3/statistics/summary/filters/events for a complete list.",
                        "in": "query",
                        "name": "events",
                        "type": "string"
                    },
                    {
                        "description": "Maximum bytes allocated for looking up a path. An ASCII character is 1 byte (It may be more for other types of encoding). The default is 1024 bytes. Zero (0) means unlimited (Subject to the system limits.)",
                        "in": "query",
                        "name": "maxpath",
                        "type": "integer"
                    },
                    {
                        "description": "Specify class(es) for which statistics should be reported. Default is all supported classes. See [...]/platform/3/statistics/summary/filters/classes for a complete list.",
                        "in": "query",
                        "name": "classes",
                        "type": "string"
                    },
                    {
                        "description": "Timeout remote commands after NUM seconds, where NUM is the integer passed to the argument.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    },
                    {
                        "description": "Specify node(s) for which statistics should be reported. A comma separated set of numbers. Default is 'all'. Zero (0) should be passed in as the sole argument to indicate only the local node.",
                        "in": "query",
                        "name": "nodes",
                        "type": "string"
                    },
                    {
                        "description": "Continue to report if some nodes do not respond.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File heat map, i.e. rate of file operations, and the type of operation listed by path/lin(s).",
                        "schema": {
                            "$ref": "#/definitions/SummaryHeat"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/3/statistics/summary/protocol": {
            "get": {
                "description": "",
                "operationId": "getSummaryProtocol",
                "parameters": [
                    {
                        "description": "Specify operation(s) for which statistics should be reported. Default is all operations. See isi-statistics man page for complete listing of operations.",
                        "in": "query",
                        "name": "operations",
                        "type": "string"
                    },
                    {
                        "description": "{ drive_id | type | xfers_in | bytes_in | xfer_size_in | xfers_out | bytes_out | xfer_size_out | access_latency | access_slow | iosched_latency | iosched_queue | busy | used_bytes_percent | used_inodes } Sort data by the specified comma-separated field(s). Prepend 'asc:' or 'desc:' to a field to change the sort direction.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Specify protocol(s) for which statistics should be reported. Default is all external protocols.",
                        "in": "query",
                        "name": "protocol",
                        "type": "string"
                    },
                    {
                        "description": "Aggregate per specified fields(s). Defaults to none.",
                        "in": "query",
                        "name": "totalby",
                        "type": "string"
                    },
                    {
                        "description": "Show table entries with no values.",
                        "in": "query",
                        "name": "zero",
                        "type": "boolean"
                    },
                    {
                        "description": "Specify class(es) for which statistics should be reported. Default is all supported classes. See [...]/platform/3/statistics/summary/filters/classes for a complete list.",
                        "in": "query",
                        "name": "classes",
                        "type": "string"
                    },
                    {
                        "description": "Timeout remote commands after NUM seconds, where NUM is the integer passed to the argument.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    },
                    {
                        "description": "Continue to report if some nodes do not respond.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    },
                    {
                        "description": "Specify node(s) for which statistics should be reported. A comma separated set of numbers. Default is 'all'. Zero (0) should be passed in as the sole argument to indicate only the local node.",
                        "in": "query",
                        "name": "nodes",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SummaryProtocol"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/3/statistics/summary/system": {
            "get": {
                "description": "",
                "operationId": "getSummarySystem",
                "parameters": [
                    {
                        "description": "{ drive_id | type | xfers_in | bytes_in | xfer_size_in | xfers_out | bytes_out | xfer_size_out | access_latency | access_slow | iosched_latency | iosched_queue | busy | used_bytes_percent | used_inodes } Sort data by the specified comma-separated field(s). Prepend 'asc:' or 'desc:' to a field to change the sort direction.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Display protocol operation rate statistics rather than the default throughput statistics.",
                        "in": "query",
                        "name": "oprates",
                        "type": "boolean"
                    },
                    {
                        "description": "Continue to report if some nodes do not respond.",
                        "in": "query",
                        "name": "degraded",
                        "type": "boolean"
                    },
                    {
                        "description": "Specify node(s) for which statistics should be reported. A comma separated set of numbers. Default is 'all'. Zero (0) should be passed in as the sole argument to indicate only the local node.",
                        "in": "query",
                        "name": "nodes",
                        "type": "string"
                    },
                    {
                        "description": "Timeout remote commands after NUM seconds, where NUM is the integer passed to the argument.",
                        "in": "query",
                        "name": "timeout",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SummarySystem"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Statistics"
                ]
            }
        },
        "/platform/3/storagepool/compatibilities/ssd/active": {
            "get": {
                "description": "Get a list of active ssd compatibilities",
                "operationId": "listCompatibilitiesSsdActive",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get a list of active ssd compatibilities",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdActiveExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "post": {
                "description": "Create a new ssd compatibility",
                "operationId": "createCompatibilitiesSsdActiveItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CompatibilitiesSsdActiveItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdActiveItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new ssd compatibility",
                        "schema": {
                            "$ref": "#/definitions/CreateCompatibilitiesClassActiveItemResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/3/storagepool/compatibilities/ssd/active/{CompatibilitiesSsdActiveId}": {
            "delete": {
                "description": "Delete an active ssd compatibility by id",
                "operationId": "deleteCompatibilitiesSsdActiveId",
                "parameters": [
                    {
                        "description": "Delete an active ssd compatibility by id",
                        "in": "path",
                        "name": "CompatibilitiesSsdActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "Get a active ssd compatibilities by id",
                "operationId": "getCompatibilitiesSsdActiveId",
                "parameters": [
                    {
                        "description": "Get a active ssd compatibilities by id",
                        "in": "path",
                        "name": "CompatibilitiesSsdActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a active ssd compatibilities by id",
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdActive"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "put": {
                "description": "Modify an ssd compatibility by id",
                "operationId": "updateCompatibilitiesSsdActiveId",
                "parameters": [
                    {
                        "in": "body",
                        "name": "CompatibilitiesSsdActiveIdParams",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompatibilitiesSsdActiveIdParams"
                        }
                    },
                    {
                        "description": "Modify an ssd compatibility by id",
                        "in": "path",
                        "name": "CompatibilitiesSsdActiveId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/3/storagepool/nodepools": {
            "get": {
                "description": "List all node pools.",
                "operationId": "listStoragepoolNodepools",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all node pools.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolNodepoolsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "post": {
                "description": "Create a new node pool.",
                "operationId": "createStoragepoolNodepool",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolNodepool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolNodepoolCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new node pool.",
                        "schema": {
                            "$ref": "#/definitions/CreateStoragepoolTierResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/3/storagepool/nodepools/{StoragepoolNodepoolId}": {
            "delete": {
                "description": "Delete node pool.",
                "operationId": "deleteStoragepoolNodepool",
                "parameters": [
                    {
                        "description": "Delete node pool.",
                        "in": "path",
                        "name": "StoragepoolNodepoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "get": {
                "description": "Retrieve node pool information.",
                "operationId": "getStoragepoolNodepool",
                "parameters": [
                    {
                        "description": "Retrieve node pool information.",
                        "in": "path",
                        "name": "StoragepoolNodepoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve node pool information.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolNodepools"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            },
            "put": {
                "description": "Modify node pool. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateStoragepoolNodepool",
                "parameters": [
                    {
                        "in": "body",
                        "name": "StoragepoolNodepool",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StoragepoolNodepool"
                        }
                    },
                    {
                        "description": "Modify node pool. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "StoragepoolNodepoolId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/3/storagepool/storagepools": {
            "get": {
                "description": "List all storage pools.",
                "operationId": "getStoragepoolStoragepools",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all storage pools.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolStoragepools"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/3/storagepool/suggested-protection/{StoragepoolSuggestedProtectionNid}": {
            "get": {
                "description": "Retrieve the suggested protection policy.",
                "operationId": "getStoragepoolSuggestedProtectionNid",
                "parameters": [
                    {
                        "description": "Retrieve the suggested protection policy.",
                        "in": "path",
                        "name": "StoragepoolSuggestedProtectionNid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the suggested protection policy.",
                        "schema": {
                            "$ref": "#/definitions/StoragepoolSuggestedProtection"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Storagepool"
                ]
            }
        },
        "/platform/3/sync/history/cpu": {
            "get": {
                "description": "List cpu performance data.",
                "operationId": "getHistoryCpu",
                "parameters": [
                    {
                        "description": "Begin timestamp for time-series report.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "End timestamp for time-series report.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List cpu performance data.",
                        "schema": {
                            "$ref": "#/definitions/HistoryFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/sync/history/worker": {
            "get": {
                "description": "List worker performance data.",
                "operationId": "getHistoryWorker",
                "parameters": [
                    {
                        "description": "Begin timestamp for time-series report.",
                        "in": "query",
                        "name": "begin",
                        "type": "integer"
                    },
                    {
                        "description": "End timestamp for time-series report.",
                        "in": "query",
                        "name": "end",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List worker performance data.",
                        "schema": {
                            "$ref": "#/definitions/HistoryFile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/sync/jobs": {
            "get": {
                "description": "Get a list of SyncIQ jobs.",
                "operationId": "listSyncJobs",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "The state of the job.",
                        "enum": [
                            "scheduled",
                            "running",
                            "paused",
                            "finished",
                            "failed",
                            "canceled",
                            "needs_attention",
                            "skipped",
                            "pending",
                            "unknown"
                        ],
                        "in": "query",
                        "name": "state",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a list of SyncIQ jobs.",
                        "schema": {
                            "$ref": "#/definitions/SyncJobsExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "post": {
                "description": "Start a SyncIQ job.",
                "operationId": "createSyncJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncJobCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Start a SyncIQ job.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/sync/jobs/{SyncJobId}": {
            "get": {
                "description": "View a single SyncIQ job.",
                "operationId": "getSyncJob",
                "parameters": [
                    {
                        "description": "View a single SyncIQ job.",
                        "in": "path",
                        "name": "SyncJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ job.",
                        "schema": {
                            "$ref": "#/definitions/SyncJobs"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "put": {
                "description": "Perform an action (pause, cancel, etc...) on a single job.",
                "operationId": "updateSyncJob",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncJob",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncJob"
                        }
                    },
                    {
                        "description": "Perform an action (pause, cancel, etc...) on a single job.",
                        "in": "path",
                        "name": "SyncJobId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/sync/policies": {
            "delete": {
                "description": "Delete all SyncIQ policies.",
                "operationId": "deleteSyncPolicies",
                "parameters": [
                    {
                        "description": "Skip deleting the policy association on the target.",
                        "in": "query",
                        "name": "local_only",
                        "type": "boolean"
                    },
                    {
                        "description": "Ignore any running jobs when preparing to delete a policy.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "List all SyncIQ policies.",
                "operationId": "listSyncPolicies",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "If specified as \"effective\" or not specified, all fields are returned.  If specified as \"user\", only fields with non-default values are shown.  If specified as \"default\", the original values are returned.",
                        "enum": [
                            "user",
                            "default",
                            "effective"
                        ],
                        "in": "query",
                        "name": "scope",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all SyncIQ policies.",
                        "schema": {
                            "$ref": "#/definitions/SyncPoliciesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "post": {
                "description": "Create a SyncIQ policy.",
                "operationId": "createSyncPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncPolicyCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a SyncIQ policy.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/sync/policies/{SyncPolicyId}": {
            "delete": {
                "description": "Delete a single SyncIQ policy.",
                "operationId": "deleteSyncPolicy",
                "parameters": [
                    {
                        "description": "Skip deleting the policy association on the target.",
                        "in": "query",
                        "name": "local_only",
                        "type": "boolean"
                    },
                    {
                        "description": "Ignore any running jobs when preparing to delete a policy.",
                        "in": "query",
                        "name": "force",
                        "type": "boolean"
                    },
                    {
                        "description": "Delete a single SyncIQ policy.",
                        "in": "path",
                        "name": "SyncPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "View a single SyncIQ policy.",
                "operationId": "getSyncPolicy",
                "parameters": [
                    {
                        "description": "View a single SyncIQ policy.",
                        "in": "path",
                        "name": "SyncPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ policy.",
                        "schema": {
                            "$ref": "#/definitions/SyncPolicies"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "put": {
                "description": "Modify a single SyncIQ policy.",
                "operationId": "updateSyncPolicy",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncPolicy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncPolicy"
                        }
                    },
                    {
                        "description": "Modify a single SyncIQ policy.",
                        "in": "path",
                        "name": "SyncPolicyId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/sync/rules": {
            "delete": {
                "description": "Delete all SyncIQ performance rules or all rules of a specified type.",
                "operationId": "deleteSyncRules",
                "parameters": [
                    {
                        "description": "Delete all rules of the specified rule type only.",
                        "enum": [
                            "bandwidth",
                            "file_count",
                            "cpu",
                            "worker"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "List all SyncIQ performance rules.",
                "operationId": "listSyncRules",
                "parameters": [
                    {
                        "description": "The field that will be used for sorting.",
                        "in": "query",
                        "name": "sort",
                        "type": "string"
                    },
                    {
                        "description": "Filter the returned rules to include only those with this rule type.",
                        "enum": [
                            "bandwidth",
                            "file_count",
                            "cpu",
                            "worker"
                        ],
                        "in": "query",
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "description": "Return no more than this many results at once (see resume).",
                        "in": "query",
                        "minimum": 1,
                        "name": "limit",
                        "type": "integer"
                    },
                    {
                        "description": "The direction of the sort.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "dir",
                        "type": "string"
                    },
                    {
                        "description": "Continue returning results from previous call using this token (token should come from the previous call, resume cannot be used with other options).",
                        "in": "query",
                        "name": "resume",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all SyncIQ performance rules.",
                        "schema": {
                            "$ref": "#/definitions/SyncRulesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "post": {
                "description": "Create a new SyncIQ performance rule.",
                "operationId": "createSyncRule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncRule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncRuleCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new SyncIQ performance rule.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/sync/rules/{SyncRuleId}": {
            "delete": {
                "description": "Delete a single SyncIQ performance rule.",
                "operationId": "deleteSyncRule",
                "parameters": [
                    {
                        "description": "Delete a single SyncIQ performance rule.",
                        "in": "path",
                        "name": "SyncRuleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "get": {
                "description": "View a single SyncIQ performance rule.",
                "operationId": "getSyncRule",
                "parameters": [
                    {
                        "description": "View a single SyncIQ performance rule.",
                        "in": "path",
                        "name": "SyncRuleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a single SyncIQ performance rule.",
                        "schema": {
                            "$ref": "#/definitions/SyncRules"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "put": {
                "description": "Modify a single SyncIQ performance rule.",
                "operationId": "updateSyncRule",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncRule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncRule"
                        }
                    },
                    {
                        "description": "Modify a single SyncIQ performance rule.",
                        "in": "path",
                        "name": "SyncRuleId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/sync/settings": {
            "get": {
                "description": "Retrieve the global SyncIQ settings.",
                "operationId": "getSyncSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieve the global SyncIQ settings.",
                        "schema": {
                            "$ref": "#/definitions/SyncSettings"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            },
            "put": {
                "description": "Modify the global SyncIQ settings.  All input fields are optional, but one or more must be supplied.",
                "operationId": "updateSyncSettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "SyncSettings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncSettingsExtended"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Sync"
                ]
            }
        },
        "/platform/3/upgrade/cluster": {
            "get": {
                "description": "Cluster wide upgrade status info.",
                "operationId": "getUpgradeCluster",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Cluster wide upgrade status info.",
                        "schema": {
                            "$ref": "#/definitions/UpgradeCluster"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/add_remaining_nodes": {
            "post": {
                "description": "Let system absorb any remaining or new nodes inside the existing upgrade.",
                "operationId": "createClusterAddRemainingNode",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterAddRemainingNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Let system absorb any remaining or new nodes inside the existing upgrade.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/archive": {
            "post": {
                "description": "Start an archive of an upgrade.",
                "operationId": "createClusterArchiveItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterArchiveItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterArchiveItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Start an archive of an upgrade.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/assess": {
            "post": {
                "description": "Start upgrade assessment on cluster.",
                "operationId": "createClusterAssessItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterAssessItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterAssessItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Start upgrade assessment on cluster.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/commit": {
            "post": {
                "description": "Commit the upgrade of a cluster.",
                "operationId": "createClusterCommitItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterCommitItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commit the upgrade of a cluster.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/firmware/assess": {
            "post": {
                "description": "Start firmware upgrade assessment on cluster.",
                "operationId": "createClusterFirmwareAssessItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterFirmwareAssessItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Start firmware upgrade assessment on cluster.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/firmware/progress": {
            "get": {
                "description": "Cluster wide firmware upgrade status info.",
                "operationId": "getClusterFirmwareProgress",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Cluster wide firmware upgrade status info.",
                        "schema": {
                            "$ref": "#/definitions/ClusterFirmwareProgress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/firmware/status": {
            "get": {
                "description": "The firmware status for the cluster.",
                "operationId": "getClusterFirmwareStatus",
                "parameters": [
                    {
                        "description": "Show devices. If false, this returns an empty list. Default is false.",
                        "in": "query",
                        "name": "devices",
                        "type": "boolean"
                    },
                    {
                        "description": "Show package. If false, this returns an empty list.Default is false.",
                        "in": "query",
                        "name": "package",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The firmware status for the cluster.",
                        "schema": {
                            "$ref": "#/definitions/ClusterFirmwareStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/firmware/upgrade": {
            "post": {
                "description": "The settings necessary to start a firmware upgrade.",
                "operationId": "createClusterFirmwareUpgradeItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterFirmwareUpgradeItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterFirmwareUpgradeItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The settings necessary to start a firmware upgrade.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/nodes": {
            "get": {
                "description": "View information about nodes during an upgrade, rollback, or pre-upgrade assessment.",
                "operationId": "getClusterNodes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "View information about nodes during an upgrade, rollback, or pre-upgrade assessment.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/nodes/{ClusterNodeId}": {
            "get": {
                "description": "The node details useful during an upgrade or assessment.",
                "operationId": "getClusterNode",
                "parameters": [
                    {
                        "description": "The node details useful during an upgrade or assessment.",
                        "in": "path",
                        "name": "ClusterNodeId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The node details useful during an upgrade or assessment.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodesExtended"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/nodes/{Lnn}/firmware/status": {
            "get": {
                "description": "The firmware status for the node.",
                "operationId": "getClusterNodesLnnFirmwareStatus",
                "parameters": [
                    {
                        "description": "Show devices. If false, this returns an empty list. Default is false.",
                        "in": "query",
                        "name": "devices",
                        "type": "boolean"
                    },
                    {
                        "description": "Show package. If false, this returns an empty list.Default is false.",
                        "in": "query",
                        "name": "package",
                        "type": "boolean"
                    },
                    {
                        "in": "path",
                        "name": "Lnn",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The firmware status for the node.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodesLnnFirmwareStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/retry_last_action": {
            "post": {
                "description": "Retry the last upgrade action, in-case the previous attempt failed.",
                "operationId": "createClusterRetryLastActionItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterRetryLastActionItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterRetryLastActionItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retry the last upgrade action, in-case the previous attempt failed.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/rollback": {
            "post": {
                "description": "Rollback the upgrade of a cluster.",
                "operationId": "createClusterRollbackItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterRollbackItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rollback the upgrade of a cluster.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/upgrade/cluster/upgrade": {
            "post": {
                "description": "The settings necessary to start an upgrade.",
                "operationId": "createClusterUpgradeItem",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterUpgradeItem",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterUpgradeItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The settings necessary to start an upgrade.",
                        "schema": {
                            "$ref": "#/definitions/ClusterNodeStateReadonly"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            },
            "put": {
                "description": "Add nodes to a running upgrade.",
                "operationId": "updateClusterUpgrade",
                "parameters": [
                    {
                        "in": "body",
                        "name": "ClusterUpgrade",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterUpgrade"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Upgrade"
                ]
            }
        },
        "/platform/3/zones": {
            "get": {
                "description": "List all access zones.",
                "operationId": "listZones",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List all access zones.",
                        "schema": {
                            "$ref": "#/definitions/Zones"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            },
            "post": {
                "description": "Create a new access zone.",
                "operationId": "createZone",
                "parameters": [
                    {
                        "in": "body",
                        "name": "Zone",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ZoneCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a new access zone.",
                        "schema": {
                            "$ref": "#/definitions/CreateAuditTopicResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            }
        },
        "/platform/3/zones/{ZoneId}": {
            "delete": {
                "description": "Delete the access zone.",
                "operationId": "deleteZone",
                "parameters": [
                    {
                        "description": "Delete the access zone.",
                        "in": "path",
                        "name": "ZoneId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            },
            "get": {
                "description": "Retrieve the access zone information.",
                "operationId": "getZone",
                "parameters": [
                    {
                        "description": "Retrieve the access zone information.",
                        "in": "path",
                        "name": "ZoneId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the access zone information.",
                        "schema": {
                            "$ref": "#/definitions/Zones"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            },
            "put": {
                "description": "Modify the access zone. All input fields are optional, but one or more must be supplied.",
                "operationId": "updateZone",
                "parameters": [
                    {
                        "in": "body",
                        "name": "Zone",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Zone"
                        }
                    },
                    {
                        "description": "Modify the access zone. All input fields are optional, but one or more must be supplied.",
                        "in": "path",
                        "name": "ZoneId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "tags": [
                    "Zones"
                ]
            }
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "https"
    ],
    "security": [
        {
            "basic_auth": []
        }
    ],
    "securityDefinitions": {
        "basic_auth": {
            "type": "basic"
        }
    },
    "swagger": "2.0"
}
