44c44
<     from urllib.parse import quote
---
>     from urllib.parse import quote, quote_plus
47c47,55
<     from urllib import quote
---
>     from urllib import quote, quote_plus
> 
> # special handling of `long` (python2 only)
> try:
>     # Python 2
>     long
> except NameError:
>     # Python 3
>     long = int
84a93,97
>         # This is used for detecting for the special case of a path parameter
>         # that is tagged with x-isi-url-encode-path-param (more details in the
>         # __call_api function).
>         self.quote_plus_tag = "__x-isi-url-encode-path-param__"
>         self.quote_plus_tag_len = len(self.quote_plus_tag)
120c133,145
<                 replacement = quote(str(self.to_path_value(v)))
---
>                 v_str = str(self.to_path_value(v))
>                 # Check for the special case of the
>                 # x-isi-url-encode-path-param, which indicates that the
>                 # parameter should be encoded with quote_plus in order
>                 # to encode the '/' character.
>                 # check if the first part of v_str matches the tag
>                 if v_str[:self.quote_plus_tag_len] == self.quote_plus_tag:
>                     # remove "__x-isi-url-encode-path-param__"
>                     v_str = v_str[self.quote_plus_tag_len:]
>                     # then url-encode with quote_plus
>                     replacement = quote_plus(v_str)
>                 else:
>                     replacement = quote(v_str)
183c208
<         If obj is str, int, float, bool, return directly.
---
>         If obj is str, int, long, float, bool, return directly.
193c218
<         types = (str, int, float, bool, tuple)
---
>         types = (str, int, long, float, bool, tuple)
269c294
<             if klass in ['int', 'float', 'str', 'bool',
---
>             if klass in ['int', 'long', 'float', 'str', 'bool',
276c301
<         if klass in [int, float, str, bool]:
---
>         if klass in [int, long, float, str, bool]:
504c529
<         :return: int, float, str, bool.
---
>         :return: int, long, float, str, bool.
